App.Views.HomeView = Backbone.View.extend({
  id: 'container',
  className: 'flex-centered full-size',
  initialize: function() {
    this.html = App.templates.HomeView(this.views);
    App.homeRendered ? this.renderWhole() : this.renderWithTyper();
  },
  views: {
    about: 'AboutView',
    projects: 'ProjectsView',
    regularResume: 'RegularResumeView',
    nerdyResume: 'AwesomeResumeView',
    contact: 'ContactView'
  },
  renderWithTyper: function() {
    var $name = $('<div class="my-name center mono">Aaron Cordova</div>');
    var $phrase = $('<div class="phrase">WEB DEVELOPER</div>');
    var $menu = $('<div id="menu-json" class="mono"></div>');

    $('body').addClass('no-overflow');

    $name.append($phrase);
    this.$el.append($name).append($menu);
    $('body').append(this.$el);

    typeJSONmenu('#menu-json', this.views);
    setTimeout(function() {
      $name.addClass('show');
    }, 10);
  },
  renderWhole: function() {
    App.menuClickable = true;
    this.$el.append(this.html);
    $('body').append(this.$el);
  },
  events: {
    'click #menu-json a': 'menuClicked',
    'transitionend .typer': 'enableMenu'
  },
  enableMenu: function() {
    $('.typer').attr('class', 'white-space');
    $('#menu-json').addClass('enabled');
    $('body').removeClass('no-overflow');

    App.menuClickable = true;
  },
  menuClicked: function(e) {
    e.preventDefault();

    // Prevent menu clicks prior to typing animation completion.
    if(!App.menuClickable) return;

    // Prevent multiple views being generated by
    // clicking a menu item more than once.
    App.menuClickable = false;

    var view = $(e.target).data('view');

    // Allow regular links to work, then quickly exit.
    if(!view) return;

    App.currentView = new App.Views[view]();
  }
});