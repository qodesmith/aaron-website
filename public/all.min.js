var app = {}; // Will contain app-wide functionality & Constructors.
var views = {}; // Will contain newly created views.
var templates = {}; // Will contain handlbars templates.

/*! jQuery v3.1.1-pre -css,-css/addGetHookIf,-css/adjustCSS,-css/curCSS,-css/hiddenVisibleSelectors,-css/showHide,-effects,-effects/Tween,-effects/animatedSelector,-css/support,-css/var/cssExpand,-css/var/getStyles,-css/var/isHiddenWithinTree,-css/var/rmargin,-css/var/rnumnonpx,-css/var/swap,-dimensions,-offset,-deprecated,-wrap,-core/ready,-exports/amd | (c) jQuery Foundation | jquery.org/license */
!function(a,b){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){"use strict";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement("script");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q="3.1.1-pre -css,-css/addGetHookIf,-css/adjustCSS,-css/curCSS,-css/hiddenVisibleSelectors,-css/showHide,-effects,-effects/Tween,-effects/animatedSelector,-css/support,-css/var/cssExpand,-css/var/getStyles,-css/var/isHiddenWithinTree,-css/var/rmargin,-css/var/rnumnonpx,-css/var/swap,-dimensions,-offset,-deprecated,-wrap,-core/ready,-exports/amd",r=function(a,b){return new r.fn.init(a,b)},s=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null!=a?a<0?this[a+this.length]:this[a]:f.call(this)},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:"jQuery"+(q+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return("number"===b||"string"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||"[object Object]"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,"constructor")&&b.constructor,"function"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?j[k.call(a)]||"object":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,"ms-").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(s,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,"string"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if("string"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),"function"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){j["[object "+b+"]"]=b.toLowerCase()});function w(a){var b=!!a&&"length"in a&&a.length,c=r.type(a);return"function"!==c&&!r.isWindow(a)&&("array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a)}var x=d.documentElement,y,z,A=r.expando.split("").sort(E).join("")===r.expando,B=x.matches||x.webkitMatchesSelector||x.mozMatchesSelector||x.oMatchesSelector||x.msMatchesSelector,C=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,D=function(a,b){return b?"\0"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a};function E(a,b){if(a===b)return y=!0,0;var c=!a.compareDocumentPosition-!b.compareDocumentPosition;return c?c:(c=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&c?a===d||a.ownerDocument===d&&r.contains(d,a)?-1:b===d||b.ownerDocument===d&&r.contains(d,b)?1:z?i.call(z,a)-i.call(z,b):0:4&c?-1:1)}function F(a){var b,c=[],d=0,e=0;if(y=!1,z=!A&&a.slice(0),a.sort(E),y){while(b=a[e++])b===a[e]&&(d=c.push(e));while(d--)a.splice(c[d],1)}return z=null,a}function G(a){return(a+"").replace(C,D)}r.extend({uniqueSort:F,unique:F,escapeSelector:G,find:function(a,b,c,e){var f,g,h=0;if(c=c||[],b=b||d,!a||"string"!=typeof a)return c;if(1!==(g=b.nodeType)&&9!==g)return[];if(e)while(f=e[h++])r.find.matchesSelector(f,a)&&c.push(f);else r.merge(c,b.querySelectorAll(a));return c},text:function(a){var b,c="",d=0,e=a.nodeType;if(e){if(1===e||9===e||11===e)return a.textContent;if(3===e||4===e)return a.nodeValue}else while(b=a[d++])c+=r.text(b);return c},contains:function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!c.contains(d))},isXMLDoc:function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&"HTML"!==b.nodeName},expr:{attrHandle:{},match:{bool:new RegExp("^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$","i"),needsContext:/^[\x20\t\r\n\f]*[>+~]/}}}),r.extend(r.find,{matches:function(a,b){return r.find(a,null,null,b)},matchesSelector:function(a,b){return B.call(a,b)},attr:function(a,b){var c=r.expr.attrHandle[b.toLowerCase()],d=c&&l.call(r.expr.attrHandle,b.toLowerCase())?c(a,b,r.isXMLDoc(a)):void 0;return void 0!==d?d:a.getAttribute(b)}});var H=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},I=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},J=r.expr.match.needsContext,K=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,L=/^.[^:#\[\.,]*$/;function M(a,b,c){if(r.isFunction(b))return r.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return r.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(L.test(b))return r.filter(b,a,c);b=r.filter(b,a)}return r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType})}r.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if("string"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(M(this,a||[],!1))},not:function(a){return this.pushStack(M(this,a||[],!0))},is:function(a){return!!M(this,"string"==typeof a&&J.test(a)?r(a):a||[],!1).length}});var N,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,P=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||N,"string"==typeof a){if(e="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:O.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),K.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};P.prototype=r.fn,N=r(d);var Q=/^(?:parents|prev(?:Until|All))/,R={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g="string"!=typeof a&&r(a);if(!J.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function S(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return H(a,"parentNode")},parentsUntil:function(a,b,c){return H(a,"parentNode",c)},next:function(a){return S(a,"nextSibling")},prev:function(a){return S(a,"previousSibling")},nextAll:function(a){return H(a,"nextSibling")},prevAll:function(a){return H(a,"previousSibling")},nextUntil:function(a,b,c){return H(a,"nextSibling",c)},prevUntil:function(a,b,c){return H(a,"previousSibling",c)},siblings:function(a){return I((a.parentNode||{}).firstChild,a)},children:function(a){return I(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=r.filter(d,e)),this.length>1&&(R[a]||r.uniqueSort(e),Q.test(a)&&e.reverse()),this.pushStack(e)}});var T=/\S+/g;function U(a){var b={};return r.each(a.match(T)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a="string"==typeof a?U(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&"string"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function V(a){return a}function W(a){throw a}function X(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],d="pending",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+"With"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError("Thenable self-resolution");j=a&&("object"==typeof a||"function"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,V,e),g(f,c,W,e)):(f++,j.call(a,g(f,c,V,e),g(f,c,W,e),g(f,c,V,c.notifyWith))):(d!==V&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==W&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:V,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:V)),c[2][3].add(g(0,a,r.isFunction(d)?d:W))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+"With"](this===f?void 0:this,arguments),this},f[b[0]+"With"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(X(a,g.done(h(c)).resolve,g.reject),"pending"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)X(e[c],h(c),g.reject);return g.promise()}});var Y=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&Y.test(b.name)&&a.console.warn("jQuery.Deferred exception: "+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var Z=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===r.type(c)){e=!0;for(h in c)Z(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},$=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function _(){this.expando=r.expando+_.uid++}_.uid=1,_.prototype={cache:function(a){var b=a[this.expando];return b||(b={},$(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if("string"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&"string"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(T)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var aa=new _,ba=new _,ca=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,da=/[A-Z]/g;function ea(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(da,"-$&").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c||"false"!==c&&("null"===c?null:+c+""===c?+c:ca.test(c)?JSON.parse(c):c)}catch(e){}ba.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return ba.hasData(a)||aa.hasData(a)},data:function(a,b,c){return ba.access(a,b,c)},removeData:function(a,b){ba.remove(a,b)},_data:function(a,b,c){return aa.access(a,b,c)},_removeData:function(a,b){aa.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=ba.get(f),1===f.nodeType&&!aa.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=r.camelCase(d.slice(5)),ea(f,d,e[d])));aa.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){ba.set(this,a)}):Z(this,function(b){var c;if(f&&void 0===b){if(c=ba.get(f,a),void 0!==c)return c;if(c=ea(f,a),void 0!==c)return c}else this.each(function(){ba.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){ba.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=aa.get(a,b),c&&(!d||r.isArray(c)?d=aa.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return aa.get(a,c)||aa.access(a,c,{empty:r.Callbacks("once memory").add(function(){aa.remove(a,[b+"queue",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=aa.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var fa=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ga=new RegExp("^(?:([+-])=|)("+fa+")([a-z%]*)$","i"),ha=/^(?:checkbox|radio)$/i,ia=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ja=/^$|\/(?:java|ecma)script/i,ka={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ka.optgroup=ka.option,ka.tbody=ka.tfoot=ka.colgroup=ka.caption=ka.thead,ka.th=ka.td;function la(a,b){var c="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function ma(a,b){for(var c=0,d=a.length;c<d;c++)aa.set(a[c],"globalEval",!b||aa.get(b[c],"globalEval"))}var na=/<|&#?\w+;/;function oa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if("object"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(na.test(f)){g=g||l.appendChild(b.createElement("div")),h=(ia.exec(f)||["",""])[1].toLowerCase(),i=ka[h]||ka._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=""}else m.push(b.createTextNode(f));l.textContent="",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=la(l.appendChild(f),"script"),j&&ma(g),c){k=0;while(f=g[k++])ja.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var pa=/^key/,qa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ra=/^([^.]*)(?:\.(.+)|)/;function sa(){return!0}function ta(){return!1}function ua(){try{return d.activeElement}catch(a){}}function va(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)va(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ta;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=aa.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(x,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return"undefined"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(T)||[""],j=b.length;while(j--)h=ra.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=aa.hasData(a)&&aa.get(a);if(q&&(i=q.events)){b=(b||"").match(T)||[""],j=b.length;while(j--)if(h=ra.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+o.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&aa.remove(a,"handle events")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(aa.get(this,"events")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&("click"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(d=[],c=0;c<h;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?r(e,this).index(i)>-1:r.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ua()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===ua()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&r.nodeName(this,"input"))return this.click(),!1},_default:function(a){return r.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?sa:ta,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:ta,isPropagationStopped:ta,isImmediatePropagationStopped:ta,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=sa,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=sa,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=sa,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&pa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&qa.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return va(this,a,b,c,d)},one:function(a,b,c,d){return va(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&"function"!=typeof b||(c=b,b=void 0),c===!1&&(c=ta),this.each(function(){r.event.remove(this,a,c,b)})}});var wa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,xa=/<script|<style|<link/i,ya=/checked\s*(?:[^=]|=\s*.checked.)/i,za=/^true\/(.*)/,Aa=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ba(a,b){return r.nodeName(a,"table")&&r.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a:a}function Ca(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function Da(a){var b=za.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Ea(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(aa.hasData(a)&&(f=aa.access(a),g=aa.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}ba.hasData(a)&&(h=ba.access(a),i=r.extend({},h),ba.set(b,i))}}function Fa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&ha.test(a.type)?b.checked=a.checked:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}function Ga(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&"string"==typeof q&&!o.checkClone&&ya.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ga(f,b,c,d)});if(m&&(e=oa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(la(e,"script"),Ca),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,la(j,"script"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Da),l=0;l<i;l++)j=h[l],ja.test(j.type||"")&&!aa.access(j,"globalEval")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Aa,""),k))}return a}function Ha(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(la(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&ma(la(d,"script")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(wa,"<$1></$2>")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=la(h),f=la(a),d=0,e=f.length;d<e;d++)Fa(f[d],g[d]);if(b)if(c)for(f=f||la(a),g=g||la(h),d=0,e=f.length;d<e;d++)Ea(f[d],g[d]);else Ea(a,h);return g=la(h,"script"),g.length>0&&ma(g,!i&&la(a,"script")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if($(c)){if(b=c[aa.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[aa.expando]=void 0}c[ba.expando]&&(c[ba.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ha(this,a,!0)},remove:function(a){return Ha(this,a)},text:function(a){return Z(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ga(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ba(this,a);b.appendChild(a)}})},prepend:function(){return Ga(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ba(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ga(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ga(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(la(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return Z(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!xa.test(a)&&!ka[(ia.exec(a)||["",""])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(la(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ga(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(la(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}}),r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement("input"),b=d.createElement("select"),c=b.appendChild(d.createElement("option"));a.type="checkbox",o.checkOn=""!==a.value,o.optSelected=c.selected,a=d.createElement("input"),a.value="t",a.type="radio",o.radioValue="t"===a.value}();var Ia,Ja=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return Z(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return"undefined"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?Ia:void 0)),
void 0!==c?null===c?void r.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&"radio"===b&&r.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(T);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),Ia={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\w+/g),function(a,b){var c=Ja[b]||r.find.attr;Ja[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=Ja[g],Ja[g]=e,e=null!=c(a,b,d)?g:null,Ja[g]=f),e}});var Ka=/^(?:input|select|textarea|button)$/i,La=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return Z(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,"tabindex");return b?parseInt(b,10):Ka.test(a.nodeName)||La.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){r.propFix[this.toLowerCase()]=this});var Ma=/[\t\r\n\f]/g;function Na(a){return a.getAttribute&&a.getAttribute("class")||""}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,Na(this)))});if("string"==typeof a&&a){b=a.match(T)||[];while(c=this[i++])if(e=Na(c),d=1===c.nodeType&&(" "+e+" ").replace(Ma," ")){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,Na(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(T)||[];while(c=this[i++])if(e=Na(c),d=1===c.nodeType&&(" "+e+" ").replace(Ma," ")){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,Na(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=r(this),f=a.match(T)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=Na(this),b&&aa.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||a===!1?"":aa.get(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+Na(c)+" ").replace(Ma," ").indexOf(b)>-1)return!0;return!1}});var Oa=/\r/g,Pa=/[\x20\t\r\n\f]+/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e="":"number"==typeof e?e+="":r.isArray(e)&&(e=r.map(e,function(a){return null==a?"":a+""})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(Oa,""):null==c?"":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,"value");return null!=b?b:r.trim(r.text(a)).replace(Pa," ")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type,g=f?null:[],h=f?e+1:d.length,i=e<0?h:f?e:0;i<h;i++)if(c=d[i],(c.selected||i===e)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,"optgroup"))){if(b=r(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each(["radio","checkbox"],function(){r.valHooks[this]={set:function(a,b){if(r.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var Qa=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,"type")?b.type:b,q=l.call(b,"namespace")?b.namespace.split("."):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!Qa.test(p+r.event.triggered)&&(p.indexOf(".")>-1&&(q=p.split("."),p=q.shift(),q.sort()),k=p.indexOf(":")<0&&"on"+p,b=b[r.expando]?b:new r.Event(p,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,Qa.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(aa.get(h,"events")||{})[b.type]&&aa.get(h,"handle"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&$(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!$(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin="onfocusin"in a,o.focusin||r.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=aa.access(d,b);e||d.addEventListener(a,c,!0),aa.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=aa.access(d,b)-1;e?aa.access(d,b,e):(d.removeEventListener(a,c,!0),aa.remove(d,b))}}});var Ra=a.location,Sa=r.now(),Ta=/\?/;r.parseXML=function(b){var c;if(!b||"string"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,"text/xml")}catch(d){c=void 0}return c&&!c.getElementsByTagName("parsererror").length||r.error("Invalid XML: "+b),c};var Ua=/\[\]$/,Va=/\r?\n/g,Wa=/^(?:submit|button|image|reset|file)$/i,Xa=/^(?:input|select|textarea|keygen)/i;function Ya(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||Ua.test(a)?d(a,e):Ya(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==r.type(b))d(a,b);else for(e in b)Ya(a+"["+e+"]",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(null==c?"":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)Ya(c,a[c],b,e);return d.join("&")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,"elements");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(":disabled")&&Xa.test(this.nodeName)&&!Wa.test(a)&&(this.checked||!ha.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(Va,"\r\n")}}):{name:b.name,value:c.replace(Va,"\r\n")}}).get()}});var Za=/%20/g,$a=/#.*$/,_a=/([?&])_=[^&]*/,ab=/^(.*?):[ \t]*([^\r\n]*)$/gm,bb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,cb=/^(?:GET|HEAD)$/,db=/^\/\//,eb={},fb={},gb="*/".concat("*"),hb=d.createElement("a");hb.href=Ra.href;function ib(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(T)||[];if(r.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function jb(a,b,c,d){var e={},f=a===fb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function kb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function lb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function mb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ra.href,type:"GET",isLocal:bb.test(Ra.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":gb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?kb(kb(a,r.ajaxSettings),b):kb(r.ajaxSettings,a)},ajaxPrefilter:ib(eb),ajaxTransport:ib(fb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks("once memory"),u=o.statusCode||{},v={},w={},x="canceled",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=ab.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||Ra.href)+"").replace(db,Ra.protocol+"//"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||"*").toLowerCase().match(T)||[""],null==o.crossDomain){j=d.createElement("a");try{j.href=o.url,j.href=j.href,o.crossDomain=hb.protocol+"//"+hb.host!=j.protocol+"//"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&"string"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),jb(eb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger("ajaxStart"),o.type=o.type.toUpperCase(),o.hasContent=!cb.test(o.type),f=o.url.replace($a,""),o.hasContent?o.data&&o.processData&&0===(o.contentType||"").indexOf("application/x-www-form-urlencoded")&&(o.data=o.data.replace(Za,"+")):(n=o.url.slice(f.length),o.data&&(f+=(Ta.test(f)?"&":"?")+o.data,delete o.data),o.cache===!1&&(f=f.replace(_a,""),n=(Ta.test(f)?"&":"?")+"_="+Sa++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader("If-Modified-Since",r.lastModified[f]),r.etag[f]&&y.setRequestHeader("If-None-Match",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader("Content-Type",o.contentType),y.setRequestHeader("Accept",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+("*"!==o.dataTypes[0]?", "+gb+"; q=0.01":""):o.accepts["*"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x="abort",t.add(o.complete),y.done(o.success),y.fail(o.error),e=jb(fb,o,c,y)){if(y.readyState=1,l&&q.trigger("ajaxSend",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort("timeout")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,"No Transport");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||"",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=lb(o,y,d)),v=mb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader("Last-Modified"),w&&(r.lastModified[f]=w),w=y.getResponseHeader("etag"),w&&(r.etag[f]=w)),204===b||"HEAD"===o.type?x="nocontent":304===b?x="notmodified":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x="error",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+"",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?"ajaxSuccess":"ajaxError",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger("ajaxComplete",[y,o]),--r.active||r.event.trigger("ajaxStop")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,"json")},getScript:function(a,b){return r.get(a,void 0,b,"script")}}),r.each(["get","post"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var nb={0:200,1223:204},ob=r.ajaxSettings.xhr();o.cors=!!ob&&"withCredentials"in ob,o.ajax=ob=!!ob,r.ajaxTransport(function(b){var c,d;if(o.cors||ob&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!=typeof h.status?f(0,"error"):f(h.status,h.statusText):f(nb[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c("error"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c("abort");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),r.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r("<script>").prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&f("error"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var pb=[],qb=/(=)\?(?=&|$)|\?\?/;r.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=pb.pop()||r.expando+"_"+Sa++;return this[a]=!0,a}}),r.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(qb.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&qb.test(b.data)&&"data");if(h||"jsonp"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(qb,"$1"+e):b.jsonp!==!1&&(b.url+=(Ta.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||r.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,pb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),"script"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument("").body;return a.innerHTML="<form></form><form></form>",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if("string"!=typeof a)return[];"boolean"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(""),e=b.createElement("base"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=K.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=oa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=r.trim(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&r.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?r("<div>").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}});var rb=a.jQuery,sb=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=sb),b&&a.jQuery===r&&(a.jQuery=rb),r},b||(a.jQuery=a.$=r),r});
//# sourceMappingURL=jquery.min.map
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){function n(n){function t(t,r,e,u,i,o){for(;i>=0&&o>i;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=n>0?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),t(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=n>0?0:u-1;i>=0&&u>i;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)n>0?o=i>=0?i:Math.max(i+a,o):a=i>=0?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return i=r(e,u),e[i]===u?i:-1;if(u!==u)return i=t(l.call(e,o,a),m.isNaN),i>=0?i+o:-1;for(i=n>0?o:a-1;i>=0&&a>i;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)i=I[r],i in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):u._=m,m.VERSION="1.8.3";var b=function(n,t,r){if(t===void 0)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}},x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)};m.iteratee=function(n,t){return x(n,t,1/0)};var _=function(n,t){return function(r){var e=arguments.length;if(2>e||null==r)return r;for(var u=1;e>u;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;a>c;c++){var f=o[c];t&&r[f]!==void 0||(r[f]=i[f])}return r}},j=function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;var t=new d;return d.prototype=null,t},w=function(n){return function(t){return null==t?void 0:t[n]}},A=Math.pow(2,53)-1,O=w("length"),k=function(n){var t=O(n);return"number"==typeof t&&t>=0&&A>=t};m.each=m.forEach=function(n,t,r){t=b(t,r);var e,u;if(k(n))for(e=0,u=n.length;u>e;e++)t(n[e],e,n);else{var i=m.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;u>o;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){var e;return e=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r),e!==void 0&&e!==-1?n[e]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),("number"!=typeof r||e)&&(r=0),m.indexOf(n,t,r)>=0},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],e>i&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(u>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],i>e&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o>u||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=m.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(k(n)||(n=m.values(n)),n[m.random(n.length-1)]):m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){var o=r(e,i,t);n(u,e,o)}),u}};m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:k(n)?n.length:m.keys(n).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)};var S=function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);a>o;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){t||(c=S(c,t,r));var f=0,l=c.length;for(u.length+=l;l>f;)u[i++]=c[f++]}else r||(u[i++]=c)}return u};m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);a>o;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);u>e;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;r>o&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;t>e;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){r=x(r,e,1);for(var u=r(t),i=0,o=O(n);o>i;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var E=function(n,t,r,e,u){if(!(e instanceof t))return n.apply(r,u);var i=j(n.prototype),o=n.apply(i,u);return m.isObject(o)?o:i};m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));if(!m.isFunction(n))throw new TypeError("Bind must be called on a function");var r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};return e},m.partial=function(n){var t=l.call(arguments,1),r=function(){for(var e=0,u=t.length,i=Array(u),o=0;u>o;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)};return r},m.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(t=1;e>t;t++)r=arguments[t],n[r]=m.bind(n[r],n);return n},m.memoize=function(n,t){var r=function(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){var e,u,i,o=null,a=0;r||(r={});var c=function(){a=r.leading===!1?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)};return function(){var f=m.now();a||r.leading!==!1||(a=f);var l=t-(f-a);return e=this,u=arguments,0>=l||l>t?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||r.trailing===!1||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){var e,u,i,o,a,c=function(){var f=m.now()-o;t>f&&f>=0?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e||(e=setTimeout(c,t)),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return--n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}},m.once=m.partial(m.before,2);var M=!{toString:null}.propertyIsEnumerable("toString"),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var t=[];for(var r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var t=[];for(var r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;i>a;a++)e=u[a],o[e]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var t=[];for(var r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;o>i;i++)if(e=u[i],t(n[e],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null==o)return i;m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;c>a;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}return i},m.omit=function(n,t,r){if(m.isFunction(t))t=m.negate(t);else{var e=m.map(S(arguments,!1,!1,1),String);t=function(n,t){return!m.contains(e,t)}}return m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){var r=j(n);return t&&m.extendOwn(r,t),r},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;e>i;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0};var N=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case"[object Date]":case"[object Boolean]":return+n===+t}var i="[object Array]"===u;if(!i){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}r=r||[],e=e||[];for(var c=r.length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),i){if(c=n.length,c!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n);if(c=l.length,m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0};m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n?!0:k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return n===void 0},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()};var B={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=m.invert(B),R=function(n){var t=function(t){return n[t]},r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}};m.escape=R(B),m.unescape=R(T),m.result=function(n,t,r){var e=null==n?void 0:n[t];return e===void 0&&(e=r),m.isFunction(e)?e.call(n):e};var q=0;m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var K=/(.)^/,z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g,L=function(n){return"\\"+z[n]};m.template=function(n,t,r){!t&&r&&(t=r),t=m.defaults({},t,m.templateSettings);var e=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}var c=function(n){return o.call(this,n,m)},f=t.variable||"obj";return c.source="function("+f+"){\n"+i+"}",c},m.chain=function(n){var t=m(n);return t._chain=!0,t};var P=function(n,t){return n._chain?m(t).chain():t};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}).call(this);
//# sourceMappingURL=underscore-min.map
(function(t){var e=typeof self=="object"&&self.self===self&&self||typeof global=="object"&&global.global===global&&global;if(typeof define==="function"&&define.amd){define(["underscore","jquery","exports"],function(i,r,n){e.Backbone=t(e,n,i,r)})}else if(typeof exports!=="undefined"){var i=require("underscore"),r;try{r=require("jquery")}catch(n){}t(e,exports,i,r)}else{e.Backbone=t(e,{},e._,e.jQuery||e.Zepto||e.ender||e.$)}})(function(t,e,i,r){var n=t.Backbone;var s=Array.prototype.slice;e.VERSION="1.3.3";e.$=r;e.noConflict=function(){t.Backbone=n;return this};e.emulateHTTP=false;e.emulateJSON=false;var a=function(t,e,r){switch(t){case 1:return function(){return i[e](this[r])};case 2:return function(t){return i[e](this[r],t)};case 3:return function(t,n){return i[e](this[r],o(t,this),n)};case 4:return function(t,n,s){return i[e](this[r],o(t,this),n,s)};default:return function(){var t=s.call(arguments);t.unshift(this[r]);return i[e].apply(i,t)}}};var h=function(t,e,r){i.each(e,function(e,n){if(i[n])t.prototype[n]=a(e,n,r)})};var o=function(t,e){if(i.isFunction(t))return t;if(i.isObject(t)&&!e._isModel(t))return l(t);if(i.isString(t))return function(e){return e.get(t)};return t};var l=function(t){var e=i.matches(t);return function(t){return e(t.attributes)}};var u=e.Events={};var c=/\s+/;var f=function(t,e,r,n,s){var a=0,h;if(r&&typeof r==="object"){if(n!==void 0&&"context"in s&&s.context===void 0)s.context=n;for(h=i.keys(r);a<h.length;a++){e=f(t,e,h[a],r[h[a]],s)}}else if(r&&c.test(r)){for(h=r.split(c);a<h.length;a++){e=t(e,h[a],n,s)}}else{e=t(e,r,n,s)}return e};u.on=function(t,e,i){return d(this,t,e,i)};var d=function(t,e,i,r,n){t._events=f(v,t._events||{},e,i,{context:r,ctx:t,listening:n});if(n){var s=t._listeners||(t._listeners={});s[n.id]=n}return t};u.listenTo=function(t,e,r){if(!t)return this;var n=t._listenId||(t._listenId=i.uniqueId("l"));var s=this._listeningTo||(this._listeningTo={});var a=s[n];if(!a){var h=this._listenId||(this._listenId=i.uniqueId("l"));a=s[n]={obj:t,objId:n,id:h,listeningTo:s,count:0}}d(t,e,r,this,a);return this};var v=function(t,e,i,r){if(i){var n=t[e]||(t[e]=[]);var s=r.context,a=r.ctx,h=r.listening;if(h)h.count++;n.push({callback:i,context:s,ctx:s||a,listening:h})}return t};u.off=function(t,e,i){if(!this._events)return this;this._events=f(g,this._events,t,e,{context:i,listeners:this._listeners});return this};u.stopListening=function(t,e,r){var n=this._listeningTo;if(!n)return this;var s=t?[t._listenId]:i.keys(n);for(var a=0;a<s.length;a++){var h=n[s[a]];if(!h)break;h.obj.off(e,r,this)}return this};var g=function(t,e,r,n){if(!t)return;var s=0,a;var h=n.context,o=n.listeners;if(!e&&!r&&!h){var l=i.keys(o);for(;s<l.length;s++){a=o[l[s]];delete o[a.id];delete a.listeningTo[a.objId]}return}var u=e?[e]:i.keys(t);for(;s<u.length;s++){e=u[s];var c=t[e];if(!c)break;var f=[];for(var d=0;d<c.length;d++){var v=c[d];if(r&&r!==v.callback&&r!==v.callback._callback||h&&h!==v.context){f.push(v)}else{a=v.listening;if(a&&--a.count===0){delete o[a.id];delete a.listeningTo[a.objId]}}}if(f.length){t[e]=f}else{delete t[e]}}return t};u.once=function(t,e,r){var n=f(p,{},t,e,i.bind(this.off,this));if(typeof t==="string"&&r==null)e=void 0;return this.on(n,e,r)};u.listenToOnce=function(t,e,r){var n=f(p,{},e,r,i.bind(this.stopListening,this,t));return this.listenTo(t,n)};var p=function(t,e,r,n){if(r){var s=t[e]=i.once(function(){n(e,s);r.apply(this,arguments)});s._callback=r}return t};u.trigger=function(t){if(!this._events)return this;var e=Math.max(0,arguments.length-1);var i=Array(e);for(var r=0;r<e;r++)i[r]=arguments[r+1];f(m,this._events,t,void 0,i);return this};var m=function(t,e,i,r){if(t){var n=t[e];var s=t.all;if(n&&s)s=s.slice();if(n)_(n,r);if(s)_(s,[e].concat(r))}return t};var _=function(t,e){var i,r=-1,n=t.length,s=e[0],a=e[1],h=e[2];switch(e.length){case 0:while(++r<n)(i=t[r]).callback.call(i.ctx);return;case 1:while(++r<n)(i=t[r]).callback.call(i.ctx,s);return;case 2:while(++r<n)(i=t[r]).callback.call(i.ctx,s,a);return;case 3:while(++r<n)(i=t[r]).callback.call(i.ctx,s,a,h);return;default:while(++r<n)(i=t[r]).callback.apply(i.ctx,e);return}};u.bind=u.on;u.unbind=u.off;i.extend(e,u);var y=e.Model=function(t,e){var r=t||{};e||(e={});this.cid=i.uniqueId(this.cidPrefix);this.attributes={};if(e.collection)this.collection=e.collection;if(e.parse)r=this.parse(r,e)||{};var n=i.result(this,"defaults");r=i.defaults(i.extend({},n,r),n);this.set(r,e);this.changed={};this.initialize.apply(this,arguments)};i.extend(y.prototype,u,{changed:null,validationError:null,idAttribute:"id",cidPrefix:"c",initialize:function(){},toJSON:function(t){return i.clone(this.attributes)},sync:function(){return e.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return i.escape(this.get(t))},has:function(t){return this.get(t)!=null},matches:function(t){return!!i.iteratee(t,this)(this.attributes)},set:function(t,e,r){if(t==null)return this;var n;if(typeof t==="object"){n=t;r=e}else{(n={})[t]=e}r||(r={});if(!this._validate(n,r))return false;var s=r.unset;var a=r.silent;var h=[];var o=this._changing;this._changing=true;if(!o){this._previousAttributes=i.clone(this.attributes);this.changed={}}var l=this.attributes;var u=this.changed;var c=this._previousAttributes;for(var f in n){e=n[f];if(!i.isEqual(l[f],e))h.push(f);if(!i.isEqual(c[f],e)){u[f]=e}else{delete u[f]}s?delete l[f]:l[f]=e}if(this.idAttribute in n)this.id=this.get(this.idAttribute);if(!a){if(h.length)this._pending=r;for(var d=0;d<h.length;d++){this.trigger("change:"+h[d],this,l[h[d]],r)}}if(o)return this;if(!a){while(this._pending){r=this._pending;this._pending=false;this.trigger("change",this,r)}}this._pending=false;this._changing=false;return this},unset:function(t,e){return this.set(t,void 0,i.extend({},e,{unset:true}))},clear:function(t){var e={};for(var r in this.attributes)e[r]=void 0;return this.set(e,i.extend({},t,{unset:true}))},hasChanged:function(t){if(t==null)return!i.isEmpty(this.changed);return i.has(this.changed,t)},changedAttributes:function(t){if(!t)return this.hasChanged()?i.clone(this.changed):false;var e=this._changing?this._previousAttributes:this.attributes;var r={};for(var n in t){var s=t[n];if(i.isEqual(e[n],s))continue;r[n]=s}return i.size(r)?r:false},previous:function(t){if(t==null||!this._previousAttributes)return null;return this._previousAttributes[t]},previousAttributes:function(){return i.clone(this._previousAttributes)},fetch:function(t){t=i.extend({parse:true},t);var e=this;var r=t.success;t.success=function(i){var n=t.parse?e.parse(i,t):i;if(!e.set(n,t))return false;if(r)r.call(t.context,e,i,t);e.trigger("sync",e,i,t)};B(this,t);return this.sync("read",this,t)},save:function(t,e,r){var n;if(t==null||typeof t==="object"){n=t;r=e}else{(n={})[t]=e}r=i.extend({validate:true,parse:true},r);var s=r.wait;if(n&&!s){if(!this.set(n,r))return false}else if(!this._validate(n,r)){return false}var a=this;var h=r.success;var o=this.attributes;r.success=function(t){a.attributes=o;var e=r.parse?a.parse(t,r):t;if(s)e=i.extend({},n,e);if(e&&!a.set(e,r))return false;if(h)h.call(r.context,a,t,r);a.trigger("sync",a,t,r)};B(this,r);if(n&&s)this.attributes=i.extend({},o,n);var l=this.isNew()?"create":r.patch?"patch":"update";if(l==="patch"&&!r.attrs)r.attrs=n;var u=this.sync(l,this,r);this.attributes=o;return u},destroy:function(t){t=t?i.clone(t):{};var e=this;var r=t.success;var n=t.wait;var s=function(){e.stopListening();e.trigger("destroy",e,e.collection,t)};t.success=function(i){if(n)s();if(r)r.call(t.context,e,i,t);if(!e.isNew())e.trigger("sync",e,i,t)};var a=false;if(this.isNew()){i.defer(t.success)}else{B(this,t);a=this.sync("delete",this,t)}if(!n)s();return a},url:function(){var t=i.result(this,"urlRoot")||i.result(this.collection,"url")||F();if(this.isNew())return t;var e=this.get(this.idAttribute);return t.replace(/[^\/]$/,"$&/")+encodeURIComponent(e)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(t){return this._validate({},i.extend({},t,{validate:true}))},_validate:function(t,e){if(!e.validate||!this.validate)return true;t=i.extend({},this.attributes,t);var r=this.validationError=this.validate(t,e)||null;if(!r)return true;this.trigger("invalid",this,r,i.extend(e,{validationError:r}));return false}});var b={keys:1,values:1,pairs:1,invert:1,pick:0,omit:0,chain:1,isEmpty:1};h(y,b,"attributes");var x=e.Collection=function(t,e){e||(e={});if(e.model)this.model=e.model;if(e.comparator!==void 0)this.comparator=e.comparator;this._reset();this.initialize.apply(this,arguments);if(t)this.reset(t,i.extend({silent:true},e))};var w={add:true,remove:true,merge:true};var E={add:true,remove:false};var I=function(t,e,i){i=Math.min(Math.max(i,0),t.length);var r=Array(t.length-i);var n=e.length;var s;for(s=0;s<r.length;s++)r[s]=t[s+i];for(s=0;s<n;s++)t[s+i]=e[s];for(s=0;s<r.length;s++)t[s+n+i]=r[s]};i.extend(x.prototype,u,{model:y,initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return e.sync.apply(this,arguments)},add:function(t,e){return this.set(t,i.extend({merge:false},e,E))},remove:function(t,e){e=i.extend({},e);var r=!i.isArray(t);t=r?[t]:t.slice();var n=this._removeModels(t,e);if(!e.silent&&n.length){e.changes={added:[],merged:[],removed:n};this.trigger("update",this,e)}return r?n[0]:n},set:function(t,e){if(t==null)return;e=i.extend({},w,e);if(e.parse&&!this._isModel(t)){t=this.parse(t,e)||[]}var r=!i.isArray(t);t=r?[t]:t.slice();var n=e.at;if(n!=null)n=+n;if(n>this.length)n=this.length;if(n<0)n+=this.length+1;var s=[];var a=[];var h=[];var o=[];var l={};var u=e.add;var c=e.merge;var f=e.remove;var d=false;var v=this.comparator&&n==null&&e.sort!==false;var g=i.isString(this.comparator)?this.comparator:null;var p,m;for(m=0;m<t.length;m++){p=t[m];var _=this.get(p);if(_){if(c&&p!==_){var y=this._isModel(p)?p.attributes:p;if(e.parse)y=_.parse(y,e);_.set(y,e);h.push(_);if(v&&!d)d=_.hasChanged(g)}if(!l[_.cid]){l[_.cid]=true;s.push(_)}t[m]=_}else if(u){p=t[m]=this._prepareModel(p,e);if(p){a.push(p);this._addReference(p,e);l[p.cid]=true;s.push(p)}}}if(f){for(m=0;m<this.length;m++){p=this.models[m];if(!l[p.cid])o.push(p)}if(o.length)this._removeModels(o,e)}var b=false;var x=!v&&u&&f;if(s.length&&x){b=this.length!==s.length||i.some(this.models,function(t,e){return t!==s[e]});this.models.length=0;I(this.models,s,0);this.length=this.models.length}else if(a.length){if(v)d=true;I(this.models,a,n==null?this.length:n);this.length=this.models.length}if(d)this.sort({silent:true});if(!e.silent){for(m=0;m<a.length;m++){if(n!=null)e.index=n+m;p=a[m];p.trigger("add",p,this,e)}if(d||b)this.trigger("sort",this,e);if(a.length||o.length||h.length){e.changes={added:a,removed:o,merged:h};this.trigger("update",this,e)}}return r?t[0]:t},reset:function(t,e){e=e?i.clone(e):{};for(var r=0;r<this.models.length;r++){this._removeReference(this.models[r],e)}e.previousModels=this.models;this._reset();t=this.add(t,i.extend({silent:true},e));if(!e.silent)this.trigger("reset",this,e);return t},push:function(t,e){return this.add(t,i.extend({at:this.length},e))},pop:function(t){var e=this.at(this.length-1);return this.remove(e,t)},unshift:function(t,e){return this.add(t,i.extend({at:0},e))},shift:function(t){var e=this.at(0);return this.remove(e,t)},slice:function(){return s.apply(this.models,arguments)},get:function(t){if(t==null)return void 0;return this._byId[t]||this._byId[this.modelId(t.attributes||t)]||t.cid&&this._byId[t.cid]},has:function(t){return this.get(t)!=null},at:function(t){if(t<0)t+=this.length;return this.models[t]},where:function(t,e){return this[e?"find":"filter"](t)},findWhere:function(t){return this.where(t,true)},sort:function(t){var e=this.comparator;if(!e)throw new Error("Cannot sort a set without a comparator");t||(t={});var r=e.length;if(i.isFunction(e))e=i.bind(e,this);if(r===1||i.isString(e)){this.models=this.sortBy(e)}else{this.models.sort(e)}if(!t.silent)this.trigger("sort",this,t);return this},pluck:function(t){return this.map(t+"")},fetch:function(t){t=i.extend({parse:true},t);var e=t.success;var r=this;t.success=function(i){var n=t.reset?"reset":"set";r[n](i,t);if(e)e.call(t.context,r,i,t);r.trigger("sync",r,i,t)};B(this,t);return this.sync("read",this,t)},create:function(t,e){e=e?i.clone(e):{};var r=e.wait;t=this._prepareModel(t,e);if(!t)return false;if(!r)this.add(t,e);var n=this;var s=e.success;e.success=function(t,e,i){if(r)n.add(t,i);if(s)s.call(i.context,t,e,i)};t.save(null,e);return t},parse:function(t,e){return t},clone:function(){return new this.constructor(this.models,{model:this.model,comparator:this.comparator})},modelId:function(t){return t[this.model.prototype.idAttribute||"id"]},_reset:function(){this.length=0;this.models=[];this._byId={}},_prepareModel:function(t,e){if(this._isModel(t)){if(!t.collection)t.collection=this;return t}e=e?i.clone(e):{};e.collection=this;var r=new this.model(t,e);if(!r.validationError)return r;this.trigger("invalid",this,r.validationError,e);return false},_removeModels:function(t,e){var i=[];for(var r=0;r<t.length;r++){var n=this.get(t[r]);if(!n)continue;var s=this.indexOf(n);this.models.splice(s,1);this.length--;delete this._byId[n.cid];var a=this.modelId(n.attributes);if(a!=null)delete this._byId[a];if(!e.silent){e.index=s;n.trigger("remove",n,this,e)}i.push(n);this._removeReference(n,e)}return i},_isModel:function(t){return t instanceof y},_addReference:function(t,e){this._byId[t.cid]=t;var i=this.modelId(t.attributes);if(i!=null)this._byId[i]=t;t.on("all",this._onModelEvent,this)},_removeReference:function(t,e){delete this._byId[t.cid];var i=this.modelId(t.attributes);if(i!=null)delete this._byId[i];if(this===t.collection)delete t.collection;t.off("all",this._onModelEvent,this)},_onModelEvent:function(t,e,i,r){if(e){if((t==="add"||t==="remove")&&i!==this)return;if(t==="destroy")this.remove(e,r);if(t==="change"){var n=this.modelId(e.previousAttributes());var s=this.modelId(e.attributes);if(n!==s){if(n!=null)delete this._byId[n];if(s!=null)this._byId[s]=e}}}this.trigger.apply(this,arguments)}});var S={forEach:3,each:3,map:3,collect:3,reduce:0,foldl:0,inject:0,reduceRight:0,foldr:0,find:3,detect:3,filter:3,select:3,reject:3,every:3,all:3,some:3,any:3,include:3,includes:3,contains:3,invoke:0,max:3,min:3,toArray:1,size:1,first:3,head:3,take:3,initial:3,rest:3,tail:3,drop:3,last:3,without:0,difference:0,indexOf:3,shuffle:1,lastIndexOf:3,isEmpty:1,chain:1,sample:3,partition:3,groupBy:3,countBy:3,sortBy:3,indexBy:3,findIndex:3,findLastIndex:3};h(x,S,"models");var k=e.View=function(t){this.cid=i.uniqueId("view");i.extend(this,i.pick(t,P));this._ensureElement();this.initialize.apply(this,arguments)};var T=/^(\S+)\s*(.*)$/;var P=["model","collection","el","id","attributes","className","tagName","events"];i.extend(k.prototype,u,{tagName:"div",$:function(t){return this.$el.find(t)},initialize:function(){},render:function(){return this},remove:function(){this._removeElement();this.stopListening();return this},_removeElement:function(){this.$el.remove()},setElement:function(t){this.undelegateEvents();this._setElement(t);this.delegateEvents();return this},_setElement:function(t){this.$el=t instanceof e.$?t:e.$(t);this.el=this.$el[0]},delegateEvents:function(t){t||(t=i.result(this,"events"));if(!t)return this;this.undelegateEvents();for(var e in t){var r=t[e];if(!i.isFunction(r))r=this[r];if(!r)continue;var n=e.match(T);this.delegate(n[1],n[2],i.bind(r,this))}return this},delegate:function(t,e,i){this.$el.on(t+".delegateEvents"+this.cid,e,i);return this},undelegateEvents:function(){if(this.$el)this.$el.off(".delegateEvents"+this.cid);return this},undelegate:function(t,e,i){this.$el.off(t+".delegateEvents"+this.cid,e,i);return this},_createElement:function(t){return document.createElement(t)},_ensureElement:function(){if(!this.el){var t=i.extend({},i.result(this,"attributes"));if(this.id)t.id=i.result(this,"id");if(this.className)t["class"]=i.result(this,"className");this.setElement(this._createElement(i.result(this,"tagName")));this._setAttributes(t)}else{this.setElement(i.result(this,"el"))}},_setAttributes:function(t){this.$el.attr(t)}});e.sync=function(t,r,n){var s=H[t];i.defaults(n||(n={}),{emulateHTTP:e.emulateHTTP,emulateJSON:e.emulateJSON});var a={type:s,dataType:"json"};if(!n.url){a.url=i.result(r,"url")||F()}if(n.data==null&&r&&(t==="create"||t==="update"||t==="patch")){a.contentType="application/json";a.data=JSON.stringify(n.attrs||r.toJSON(n))}if(n.emulateJSON){a.contentType="application/x-www-form-urlencoded";a.data=a.data?{model:a.data}:{}}if(n.emulateHTTP&&(s==="PUT"||s==="DELETE"||s==="PATCH")){a.type="POST";if(n.emulateJSON)a.data._method=s;var h=n.beforeSend;n.beforeSend=function(t){t.setRequestHeader("X-HTTP-Method-Override",s);if(h)return h.apply(this,arguments)}}if(a.type!=="GET"&&!n.emulateJSON){a.processData=false}var o=n.error;n.error=function(t,e,i){n.textStatus=e;n.errorThrown=i;if(o)o.call(n.context,t,e,i)};var l=n.xhr=e.ajax(i.extend(a,n));r.trigger("request",r,l,n);return l};var H={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};e.ajax=function(){return e.$.ajax.apply(e.$,arguments)};var $=e.Router=function(t){t||(t={});if(t.routes)this.routes=t.routes;this._bindRoutes();this.initialize.apply(this,arguments)};var A=/\((.*?)\)/g;var C=/(\(\?)?:\w+/g;var R=/\*\w+/g;var j=/[\-{}\[\]+?.,\\\^$|#\s]/g;i.extend($.prototype,u,{initialize:function(){},route:function(t,r,n){if(!i.isRegExp(t))t=this._routeToRegExp(t);if(i.isFunction(r)){n=r;r=""}if(!n)n=this[r];var s=this;e.history.route(t,function(i){var a=s._extractParameters(t,i);if(s.execute(n,a,r)!==false){s.trigger.apply(s,["route:"+r].concat(a));s.trigger("route",r,a);e.history.trigger("route",s,r,a)}});return this},execute:function(t,e,i){if(t)t.apply(this,e)},navigate:function(t,i){e.history.navigate(t,i);return this},_bindRoutes:function(){if(!this.routes)return;this.routes=i.result(this,"routes");var t,e=i.keys(this.routes);while((t=e.pop())!=null){this.route(t,this.routes[t])}},_routeToRegExp:function(t){t=t.replace(j,"\\$&").replace(A,"(?:$1)?").replace(C,function(t,e){return e?t:"([^/?]+)"}).replace(R,"([^?]*?)");return new RegExp("^"+t+"(?:\\?([\\s\\S]*))?$")},_extractParameters:function(t,e){var r=t.exec(e).slice(1);return i.map(r,function(t,e){if(e===r.length-1)return t||null;return t?decodeURIComponent(t):null})}});var N=e.History=function(){this.handlers=[];this.checkUrl=i.bind(this.checkUrl,this);if(typeof window!=="undefined"){this.location=window.location;this.history=window.history}};var M=/^[#\/]|\s+$/g;var O=/^\/+|\/+$/g;var U=/#.*$/;N.started=false;i.extend(N.prototype,u,{interval:50,atRoot:function(){var t=this.location.pathname.replace(/[^\/]$/,"$&/");return t===this.root&&!this.getSearch()},matchRoot:function(){var t=this.decodeFragment(this.location.pathname);var e=t.slice(0,this.root.length-1)+"/";return e===this.root},decodeFragment:function(t){return decodeURI(t.replace(/%25/g,"%2525"))},getSearch:function(){var t=this.location.href.replace(/#.*/,"").match(/\?.+/);return t?t[0]:""},getHash:function(t){var e=(t||this).location.href.match(/#(.*)$/);return e?e[1]:""},getPath:function(){var t=this.decodeFragment(this.location.pathname+this.getSearch()).slice(this.root.length-1);return t.charAt(0)==="/"?t.slice(1):t},getFragment:function(t){if(t==null){if(this._usePushState||!this._wantsHashChange){t=this.getPath()}else{t=this.getHash()}}return t.replace(M,"")},start:function(t){if(N.started)throw new Error("Backbone.history has already been started");N.started=true;this.options=i.extend({root:"/"},this.options,t);this.root=this.options.root;this._wantsHashChange=this.options.hashChange!==false;this._hasHashChange="onhashchange"in window&&(document.documentMode===void 0||document.documentMode>7);this._useHashChange=this._wantsHashChange&&this._hasHashChange;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.history&&this.history.pushState);this._usePushState=this._wantsPushState&&this._hasPushState;this.fragment=this.getFragment();this.root=("/"+this.root+"/").replace(O,"/");if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot()){var e=this.root.slice(0,-1)||"/";this.location.replace(e+"#"+this.getPath());return true}else if(this._hasPushState&&this.atRoot()){this.navigate(this.getHash(),{replace:true})}}if(!this._hasHashChange&&this._wantsHashChange&&!this._usePushState){this.iframe=document.createElement("iframe");this.iframe.src="javascript:0";this.iframe.style.display="none";this.iframe.tabIndex=-1;var r=document.body;var n=r.insertBefore(this.iframe,r.firstChild).contentWindow;n.document.open();n.document.close();n.location.hash="#"+this.fragment}var s=window.addEventListener||function(t,e){return attachEvent("on"+t,e)};if(this._usePushState){s("popstate",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){s("hashchange",this.checkUrl,false)}else if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval)}if(!this.options.silent)return this.loadUrl()},stop:function(){var t=window.removeEventListener||function(t,e){return detachEvent("on"+t,e)};if(this._usePushState){t("popstate",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){t("hashchange",this.checkUrl,false)}if(this.iframe){document.body.removeChild(this.iframe);this.iframe=null}if(this._checkUrlInterval)clearInterval(this._checkUrlInterval);N.started=false},route:function(t,e){this.handlers.unshift({route:t,callback:e})},checkUrl:function(t){var e=this.getFragment();if(e===this.fragment&&this.iframe){e=this.getHash(this.iframe.contentWindow)}if(e===this.fragment)return false;if(this.iframe)this.navigate(e);this.loadUrl()},loadUrl:function(t){if(!this.matchRoot())return false;t=this.fragment=this.getFragment(t);return i.some(this.handlers,function(e){if(e.route.test(t)){e.callback(t);return true}})},navigate:function(t,e){if(!N.started)return false;if(!e||e===true)e={trigger:!!e};t=this.getFragment(t||"");var i=this.root;if(t===""||t.charAt(0)==="?"){i=i.slice(0,-1)||"/"}var r=i+t;t=this.decodeFragment(t.replace(U,""));if(this.fragment===t)return;this.fragment=t;if(this._usePushState){this.history[e.replace?"replaceState":"pushState"]({},document.title,r)}else if(this._wantsHashChange){this._updateHash(this.location,t,e.replace);if(this.iframe&&t!==this.getHash(this.iframe.contentWindow)){var n=this.iframe.contentWindow;if(!e.replace){n.document.open();n.document.close()}this._updateHash(n.location,t,e.replace)}}else{return this.location.assign(r)}if(e.trigger)return this.loadUrl(t)},_updateHash:function(t,e,i){if(i){var r=t.href.replace(/(javascript:|#).*$/,"");t.replace(r+"#"+e)}else{t.hash="#"+e}}});e.history=new N;var q=function(t,e){var r=this;var n;if(t&&i.has(t,"constructor")){n=t.constructor}else{n=function(){return r.apply(this,arguments)}}i.extend(n,r,e);n.prototype=i.create(r.prototype,t);n.prototype.constructor=n;n.__super__=r.prototype;return n};y.extend=x.extend=$.extend=k.extend=N.extend=q;var F=function(){throw new Error('A "url" property or function must be specified')};var B=function(t,e){var i=e.error;e.error=function(r){if(i)i.call(e.context,t,r,e);t.trigger("error",t,r,e)}};return e});
//# sourceMappingURL=backbone-min.map
/*!

 handlebars v4.0.5

Copyright (C) 2011-2015 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

@license
*/
!function(a,b){"object"==typeof exports&&"object"==typeof module?module.exports=b():"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?exports.Handlebars=b():a.Handlebars=b()}(this,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)}([function(a,b,c){"use strict";function d(){var a=new h.HandlebarsEnvironment;return n.extend(a,h),a.SafeString=j["default"],a.Exception=l["default"],a.Utils=n,a.escapeExpression=n.escapeExpression,a.VM=p,a.template=function(b){return p.template(b,a)},a}var e=c(1)["default"],f=c(2)["default"];b.__esModule=!0;var g=c(3),h=e(g),i=c(17),j=f(i),k=c(5),l=f(k),m=c(4),n=e(m),o=c(18),p=e(o),q=c(19),r=f(q),s=d();s.create=d,r["default"](s),s["default"]=s,b["default"]=s,a.exports=b["default"]},function(a,b){"use strict";b["default"]=function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b["default"]=a,b},b.__esModule=!0},function(a,b){"use strict";b["default"]=function(a){return a&&a.__esModule?a:{"default":a}},b.__esModule=!0},function(a,b,c){"use strict";function d(a,b,c){this.helpers=a||{},this.partials=b||{},this.decorators=c||{},i.registerDefaultHelpers(this),j.registerDefaultDecorators(this)}var e=c(2)["default"];b.__esModule=!0,b.HandlebarsEnvironment=d;var f=c(4),g=c(5),h=e(g),i=c(6),j=c(14),k=c(16),l=e(k),m="4.0.5";b.VERSION=m;var n=7;b.COMPILER_REVISION=n;var o={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};b.REVISION_CHANGES=o;var p="[object Object]";d.prototype={constructor:d,logger:l["default"],log:l["default"].log,registerHelper:function(a,b){if(f.toString.call(a)===p){if(b)throw new h["default"]("Arg not supported with multiple helpers");f.extend(this.helpers,a)}else this.helpers[a]=b},unregisterHelper:function(a){delete this.helpers[a]},registerPartial:function(a,b){if(f.toString.call(a)===p)f.extend(this.partials,a);else{if("undefined"==typeof b)throw new h["default"]('Attempting to register a partial called "'+a+'" as undefined');this.partials[a]=b}},unregisterPartial:function(a){delete this.partials[a]},registerDecorator:function(a,b){if(f.toString.call(a)===p){if(b)throw new h["default"]("Arg not supported with multiple decorators");f.extend(this.decorators,a)}else this.decorators[a]=b},unregisterDecorator:function(a){delete this.decorators[a]}};var q=l["default"].log;b.log=q,b.createFrame=f.createFrame,b.logger=l["default"]},function(a,b){"use strict";function c(a){return k[a]}function d(a){for(var b=1;b<arguments.length;b++)for(var c in arguments[b])Object.prototype.hasOwnProperty.call(arguments[b],c)&&(a[c]=arguments[b][c]);return a}function e(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}function f(a){if("string"!=typeof a){if(a&&a.toHTML)return a.toHTML();if(null==a)return"";if(!a)return a+"";a=""+a}return m.test(a)?a.replace(l,c):a}function g(a){return a||0===a?p(a)&&0===a.length?!0:!1:!0}function h(a){var b=d({},a);return b._parent=a,b}function i(a,b){return a.path=b,a}function j(a,b){return(a?a+".":"")+b}b.__esModule=!0,b.extend=d,b.indexOf=e,b.escapeExpression=f,b.isEmpty=g,b.createFrame=h,b.blockParams=i,b.appendContextPath=j;var k={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},l=/[&<>"'`=]/g,m=/[&<>"'`=]/,n=Object.prototype.toString;b.toString=n;var o=function(a){return"function"==typeof a};o(/x/)&&(b.isFunction=o=function(a){return"function"==typeof a&&"[object Function]"===n.call(a)}),b.isFunction=o;var p=Array.isArray||function(a){return a&&"object"==typeof a?"[object Array]"===n.call(a):!1};b.isArray=p},function(a,b){"use strict";function c(a,b){var e=b&&b.loc,f=void 0,g=void 0;e&&(f=e.start.line,g=e.start.column,a+=" - "+f+":"+g);for(var h=Error.prototype.constructor.call(this,a),i=0;i<d.length;i++)this[d[i]]=h[d[i]];Error.captureStackTrace&&Error.captureStackTrace(this,c),e&&(this.lineNumber=f,this.column=g)}b.__esModule=!0;var d=["description","fileName","lineNumber","message","name","number","stack"];c.prototype=new Error,b["default"]=c,a.exports=b["default"]},function(a,b,c){"use strict";function d(a){g["default"](a),i["default"](a),k["default"](a),m["default"](a),o["default"](a),q["default"](a),s["default"](a)}var e=c(2)["default"];b.__esModule=!0,b.registerDefaultHelpers=d;var f=c(7),g=e(f),h=c(8),i=e(h),j=c(9),k=e(j),l=c(10),m=e(l),n=c(11),o=e(n),p=c(12),q=e(p),r=c(13),s=e(r)},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerHelper("blockHelperMissing",function(b,c){var e=c.inverse,f=c.fn;if(b===!0)return f(this);if(b===!1||null==b)return e(this);if(d.isArray(b))return b.length>0?(c.ids&&(c.ids=[c.name]),a.helpers.each(b,c)):e(this);if(c.data&&c.ids){var g=d.createFrame(c.data);g.contextPath=d.appendContextPath(c.data.contextPath,c.name),c={data:g}}return f(b,c)})},a.exports=b["default"]},function(a,b,c){"use strict";var d=c(2)["default"];b.__esModule=!0;var e=c(4),f=c(5),g=d(f);b["default"]=function(a){a.registerHelper("each",function(a,b){function c(b,c,f){j&&(j.key=b,j.index=c,j.first=0===c,j.last=!!f,k&&(j.contextPath=k+b)),i+=d(a[b],{data:j,blockParams:e.blockParams([a[b],b],[k+b,null])})}if(!b)throw new g["default"]("Must pass iterator to #each");var d=b.fn,f=b.inverse,h=0,i="",j=void 0,k=void 0;if(b.data&&b.ids&&(k=e.appendContextPath(b.data.contextPath,b.ids[0])+"."),e.isFunction(a)&&(a=a.call(this)),b.data&&(j=e.createFrame(b.data)),a&&"object"==typeof a)if(e.isArray(a))for(var l=a.length;l>h;h++)h in a&&c(h,h,h===a.length-1);else{var m=void 0;for(var n in a)a.hasOwnProperty(n)&&(void 0!==m&&c(m,h-1),m=n,h++);void 0!==m&&c(m,h-1,!0)}return 0===h&&(i=f(this)),i})},a.exports=b["default"]},function(a,b,c){"use strict";var d=c(2)["default"];b.__esModule=!0;var e=c(5),f=d(e);b["default"]=function(a){a.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new f["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},a.exports=b["default"]},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerHelper("if",function(a,b){return d.isFunction(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||d.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper("unless",function(b,c){return a.helpers["if"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})})},a.exports=b["default"]},function(a,b){"use strict";b.__esModule=!0,b["default"]=function(a){a.registerHelper("log",function(){for(var b=[void 0],c=arguments[arguments.length-1],d=0;d<arguments.length-1;d++)b.push(arguments[d]);var e=1;null!=c.hash.level?e=c.hash.level:c.data&&null!=c.data.level&&(e=c.data.level),b[0]=e,a.log.apply(a,b)})},a.exports=b["default"]},function(a,b){"use strict";b.__esModule=!0,b["default"]=function(a){a.registerHelper("lookup",function(a,b){return a&&a[b]})},a.exports=b["default"]},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerHelper("with",function(a,b){d.isFunction(a)&&(a=a.call(this));var c=b.fn;if(d.isEmpty(a))return b.inverse(this);var e=b.data;return b.data&&b.ids&&(e=d.createFrame(b.data),e.contextPath=d.appendContextPath(b.data.contextPath,b.ids[0])),c(a,{data:e,blockParams:d.blockParams([a],[e&&e.contextPath])})})},a.exports=b["default"]},function(a,b,c){"use strict";function d(a){g["default"](a)}var e=c(2)["default"];b.__esModule=!0,b.registerDefaultDecorators=d;var f=c(15),g=e(f)},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerDecorator("inline",function(a,b,c,e){var f=a;return b.partials||(b.partials={},f=function(e,f){var g=c.partials;c.partials=d.extend({},g,b.partials);var h=a(e,f);return c.partials=g,h}),b.partials[e.args[0]]=e.fn,f})},a.exports=b["default"]},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4),e={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(a){if("string"==typeof a){var b=d.indexOf(e.methodMap,a.toLowerCase());a=b>=0?b:parseInt(a,10)}return a},log:function(a){if(a=e.lookupLevel(a),"undefined"!=typeof console&&e.lookupLevel(e.level)<=a){var b=e.methodMap[a];console[b]||(b="log");for(var c=arguments.length,d=Array(c>1?c-1:0),f=1;c>f;f++)d[f-1]=arguments[f];console[b].apply(console,d)}}};b["default"]=e,a.exports=b["default"]},function(a,b){"use strict";function c(a){this.string=a}b.__esModule=!0,c.prototype.toString=c.prototype.toHTML=function(){return""+this.string},b["default"]=c,a.exports=b["default"]},function(a,b,c){"use strict";function d(a){var b=a&&a[0]||1,c=r.COMPILER_REVISION;if(b!==c){if(c>b){var d=r.REVISION_CHANGES[c],e=r.REVISION_CHANGES[b];throw new q["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+d+") or downgrade your runtime to an older version ("+e+").")}throw new q["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+a[1]+").")}}function e(a,b){function c(c,d,e){e.hash&&(d=o.extend({},d,e.hash),e.ids&&(e.ids[0]=!0)),c=b.VM.resolvePartial.call(this,c,d,e);var f=b.VM.invokePartial.call(this,c,d,e);if(null==f&&b.compile&&(e.partials[e.name]=b.compile(c,a.compilerOptions,b),f=e.partials[e.name](d,e)),null!=f){if(e.indent){for(var g=f.split("\n"),h=0,i=g.length;i>h&&(g[h]||h+1!==i);h++)g[h]=e.indent+g[h];f=g.join("\n")}return f}throw new q["default"]("The partial "+e.name+" could not be compiled when running in runtime-only mode")}function d(b){function c(b){return""+a.main(e,b,e.helpers,e.partials,g,i,h)}var f=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],g=f.data;d._setup(f),!f.partial&&a.useData&&(g=j(b,g));var h=void 0,i=a.useBlockParams?[]:void 0;return a.useDepths&&(h=f.depths?b!==f.depths[0]?[b].concat(f.depths):f.depths:[b]),(c=k(a.main,c,e,f.depths||[],g,i))(b,f)}if(!b)throw new q["default"]("No environment passed to template");if(!a||!a.main)throw new q["default"]("Unknown template object: "+typeof a);a.main.decorator=a.main_d,b.VM.checkRevision(a.compiler);var e={strict:function(a,b){if(!(b in a))throw new q["default"]('"'+b+'" not defined in '+a);return a[b]},lookup:function(a,b){for(var c=a.length,d=0;c>d;d++)if(a[d]&&null!=a[d][b])return a[d][b]},lambda:function(a,b){return"function"==typeof a?a.call(b):a},escapeExpression:o.escapeExpression,invokePartial:c,fn:function(b){var c=a[b];return c.decorator=a[b+"_d"],c},programs:[],program:function(a,b,c,d,e){var g=this.programs[a],h=this.fn(a);return b||e||d||c?g=f(this,a,h,b,c,d,e):g||(g=this.programs[a]=f(this,a,h)),g},data:function(a,b){for(;a&&b--;)a=a._parent;return a},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c=o.extend({},b,a)),c},noop:b.VM.noop,compilerInfo:a.compiler};return d.isTop=!0,d._setup=function(c){c.partial?(e.helpers=c.helpers,e.partials=c.partials,e.decorators=c.decorators):(e.helpers=e.merge(c.helpers,b.helpers),a.usePartial&&(e.partials=e.merge(c.partials,b.partials)),(a.usePartial||a.useDecorators)&&(e.decorators=e.merge(c.decorators,b.decorators)))},d._child=function(b,c,d,g){if(a.useBlockParams&&!d)throw new q["default"]("must pass block params");if(a.useDepths&&!g)throw new q["default"]("must pass parent depths");return f(e,b,a[b],c,0,d,g)},d}function f(a,b,c,d,e,f,g){function h(b){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],h=g;return g&&b!==g[0]&&(h=[b].concat(g)),c(a,b,a.helpers,a.partials,e.data||d,f&&[e.blockParams].concat(f),h)}return h=k(c,h,a,g,d,f),h.program=b,h.depth=g?g.length:0,h.blockParams=e||0,h}function g(a,b,c){return a?a.call||c.name||(c.name=a,a=c.partials[a]):a="@partial-block"===c.name?c.data["partial-block"]:c.partials[c.name],a}function h(a,b,c){c.partial=!0,c.ids&&(c.data.contextPath=c.ids[0]||c.data.contextPath);var d=void 0;if(c.fn&&c.fn!==i&&(c.data=r.createFrame(c.data),d=c.data["partial-block"]=c.fn,d.partials&&(c.partials=o.extend({},c.partials,d.partials))),void 0===a&&d&&(a=d),void 0===a)throw new q["default"]("The partial "+c.name+" could not be found");return a instanceof Function?a(b,c):void 0}function i(){return""}function j(a,b){return b&&"root"in b||(b=b?r.createFrame(b):{},b.root=a),b}function k(a,b,c,d,e,f){if(a.decorator){var g={};b=a.decorator(b,g,c,d&&d[0],e,f,d),o.extend(b,g)}return b}var l=c(1)["default"],m=c(2)["default"];b.__esModule=!0,b.checkRevision=d,b.template=e,b.wrapProgram=f,b.resolvePartial=g,b.invokePartial=h,b.noop=i;var n=c(4),o=l(n),p=c(5),q=m(p),r=c(3)},function(a,b){(function(c){"use strict";b.__esModule=!0,b["default"]=function(a){var b="undefined"!=typeof c?c:window,d=b.Handlebars;a.noConflict=function(){return b.Handlebars===a&&(b.Handlebars=d),a}},a.exports=b["default"]}).call(b,function(){return this}())}])});
/* The MIT License (MIT)

Copyright (c) 2016 Aaron Cordova

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */

function typer(el, speed) {
  var q = []; // The main array to contain all the methods called on typer.

  // List of HTML void elements (http://goo.gl/SWmyS5),
  // used in 'processMsg' & 'processBack'.
  q.voids = ['area','base','br','col','command','embed','hr','img','input','keygen','link','meta','param','source','track','wbr'];

  // Various checks.
  speed = speed || 70;
  if(checkType(el) !== 'String') throw 'typer error: selector provided is not a string.';
  if(!document.styleSheets.length) styleSheets(); // Create a stylesheet if none exist.

  el = document.querySelector(el);

  parentDataNum(); // Assign a random # to the parent el's data attribute.

  // Public methods.
  var typerObj = {
    cursor: function(cursorObj) {
      // Prevent cursor from being run multiple times.
      if(q.cursorRan) {
        console.log('You can only call ".cursor" once.');
        return this;
      }

      q.cursorRan = true;

      // Prevent errors from no arguments.
      if(cursorObj === undefined) cursorObj = true;

      // No cursor.
      if(cursorObj === false) {
        q.cursor = 'no-cursor'; // Used as a class.
        return this;
      }

      var cursor = [];
      var data = '[data-typer="' + q.dataNum + '"]';

      // Optional cursor color - https://goo.gl/b4Ckz9
      if(cursorObj.color) addStyle(data + ' .typer::after', 'background-color:' + cursorObj.color);

      // Cursor's blinking style - default to soft.
      cursorObj.blink === 'hard' ? cursor.push('cursor-hard') : cursor.push('cursor-soft');

      // Cursor: block or line.
      if(cursorObj.block === true) cursor.push('cursor-block');

      q.cursor = cursor.join(' '); // Used as a class.

      return this;
    },
    line: function(msg, spd, html) {
      msg ? q.push(lineOrContinue('line', msg, spd, html)) : q.push({line: 1});

      // Push the first dominoe on the typing iteration,
      // ensuring public methods will only call 'processq()' once.
      if(!q.typing) {
        q.typing = true;
        processq();
      }

      return this;
    },
    continue: function(msg, spd, html) {
      if(!msg) return this; // Ignore empty continues.
      q.push(lineOrContinue('continue', msg, spd, html));
      return this;
    },
    pause: function(num) {
      // Default to 500ms.
      q.push({pause: num || 500});
      return this;
    },
    emit: function(event, el) {
      if(!el) el = 'body'; // Default to the body.

      // Simple way to throw an error for invalid selectors.
      document.querySelector(el);

      q.push({emit: event, el: el});
      return this;
    },
    listen: function(event, el) {
      if(!el) el = 'body'; // Default to the body.

      // Simple way to throw an error for invalid selectors.
      document.querySelector(el);

      q.push({listen: event, el: el});
      return this;
    },
    back: function(chars, spd) {
      q.push({back: chars, speed: spd});
      return this;
    },
    empty: function() {
      q.push({empty: true});
      return this;
    },
    run: function(fxn) {
      q.push({run: fxn});
      return this;
    },
    end: function(fxn, e) {
      q.push({end: true});

      q.cb = function() {
        // Finalize the the div class names before ending.
        // Because wack IE doesn't support multiple parameters for .remove or .add.
        ['typer', 'cursor-block', 'cursor-soft', 'cursor-hard', 'no-cursor'].map(function(name) {
          q.newDiv.classList.remove(name);
        });

        q.newDiv.classList.add('white-space');
        q.newDiv = '';

        if(fxn && fxn instanceof Function) fxn(el);
        if((fxn && checkType(fxn) === 'Boolean') || e) {
          if(e instanceof Function) e(el);
          document.body.dispatchEvent(new Event('typerFinished'));
        }
      }

      // A convenient object to warn the user if they
      // try to call any methods after '.end'.
      var catchAll = {
        cursor: function() {
          return message();
        },
        line: function() {
          return message();
        },
        continue: function() {
          return message();
        },
        pause: function() {
          return message();
        },
        emit: function() {
          return message();
        },
        listen: function() {
          return message();
        },
        back: function() {
          return message();
        },
        empty: function() {
          return message();
        },
        run: function() {
          return message();
        },
        end: function() {
          return message();
        }
      };

      // Message used by the 'catchAll' object.
      function message() {
        console.log('WARNING: you tried to call a method after ".end" has already been called.');
        return catchAll;
      }

      return catchAll;
    }
  };

  // Private functions.
  function checkType(thing) {
    var type = Object.prototype.toString.call(thing);
    type = type.split(' ')[1];
    return type.substr(0, type.length - 1);
  }
  function parentDataNum() {
    // Random # function with min & max values.
    // function randomNum(min, max) {
    //   return Math.floor(Math.random() * (max - min + 1) + min);
    // }
    q.dataNum = Math.floor(Math.random() * 999999999 + 1);
    el.setAttribute('data-typer', q.dataNum);
  }
  function styleSheets() { // https://goo.gl/b4Ckz9
    // Create the style element.
    var style = document.createElement('style');

    // Webkit hack.
    style.appendChild(document.createTextNode(''));

    // Append the style element to the head.
    document.head.appendChild(style);
  }
  function addStyle(selector, rules) { // https://goo.gl/b4Ckz9
    var sheet = document.styleSheets[0];

    if('insertRule' in sheet) {
      sheet.insertRule(selector + '{' + rules + '}', 1);
    } else {
      sheet.addRule(selector, rules);
    }
  }
  function lineOrContinue(choice, msg, spd, html) {
    var obj = {html: spd === false ? false : html === false ? false : true};

    if(checkType(spd) === 'Number') obj.speed = spd;
    if(checkType(html) === 'Number') obj.speed = html;
    if(checkType(msg) === 'Object') {
      // Prevents a hard dependency on 'el' as the property name.
      var key = Object.keys(msg)[0];
      msg = document.querySelector(msg[key])[obj.html ? 'innerHTML': 'textContent'].trim();
    }

    obj[choice] = msg;

    return obj;
  }
  function processq() { // Begin our main iterator.
    if(!(q.item >= 0)) q.item = 0;
    if(q.item === q.length) return document.body.removeEventListener('killTyper', q.kill);
    if(!q.ks) {
      q.ks = true;
      document.body.addEventListener('killTyper', q.kill);
    }

    // If no cursor is declared, resort to default styling.
    // The cursor will be pinged later by each line.
    if(!q.cursor) q.cursor = 'cursor-soft';

    // Main iterator.
    q.type = setInterval(function() {
      var item = q[q.item];

      // Various processing functions.
      item.line ? processLine(item) :
      item.continue ? processContinue(item) :
      item.pause ? processPause(item) :
      item.emit ? processEmit(item) :
      item.listen ? processListen(item) :
      item.back ? processBack(item) :
      item.empty ? processEmpty() :
      item.run ? processRun(item) :
      item.end && processEnd(item);
    }, 0);
  }
  function processMsg(item) { // Used by 'processLine' & 'processContinue'.
    var msg;
    item.line ? msg = item.line : msg = item.continue;

    var targetList = [q.newDiv];
    var counter = 0;
    q.iterator = setInterval(function() {
      // End of message processing logic.
      if(counter === msg.length) {
        clearInterval(q.iterator);
        q.item++; // Increment our main item counter.
        return processq(); // Restart the main iterator.
      }

      var piece = msg[counter];

      // NO HTML
      if(!item.html) {

        // Avoid HTML parsing on supplied arrays.
        if(typeof msg !== 'string') {
          var div = document.createElement('div');
          div.textContent = piece;
          piece = div.innerHTML;
        }

        q.newDiv.innerHTML += piece;

      // HTML
      } else {
        // Open tags.
        if(piece === '<' && msg[counter + 1] !== '/') {
          var tag = '';
          var voidTag = '';
          for(var i = counter; i < msg.length; i++) {
            tag += msg[i];
            if(msg[i] !== '>' && msg[i] !== '<') voidTag += msg[i];
            if(msg[i] === '>') break;
          }

          var isVoid = q.voids.some(function(v) {
            return v === voidTag;
          });

          // Non-void elements get focused on as the typing target.
          if(!isVoid) {
            var div = document.createElement('div');
            div.innerHTML = tag;

            var parent = targetList[0];
            targetList.unshift(div.firstChild); // Add current tag to beginning of the 'targetList' array.
            parent.appendChild(div.firstChild);

          // Void elements get added to the contents but are not focused on for typing.
          } else {
            targetList[0].innerHTML += tag;
          }

          return counter += tag.length; // Move the counter passed the current tag.

        // Closing tags.
        } else if(piece === '<' && msg[counter + 1] === '/') {
          targetList.shift(); // Remove the tag from the 'targetList' array.
          return counter = msg.indexOf('>', counter) + 1; // Move the counter passed the closing tag.

        // Unicode characters.
        } else if(piece === '&') {
          // 1. Build the unicode character.
          var char = '';
          for(var i = counter; i < msg.length; i++) {
            char += msg[i];
            if(msg[i] === ';') break;
          }

          // 2. Test the unicode character.
          var div = document.createElement('div');
          div.innerHTML = char;
          if(div.textContent.length === 1) { // Unicode's will convert to HTML with a length of 1.
            targetList[0].innerHTML += char;
            counter = i; // Move the counter to the end of the unicode text.
          } else {
            targetList[0].innerHTML += piece;
          }
        } else {
          targetList[0].innerHTML += piece;
        }
      }

      counter++;
    }, item.speed || speed); // Function for both line and continue.
  }
  function processLine(item) {
    // Stop the main iterator.
    clearInterval(q.type);

    // Process the previous line if there was one.
    if(q.newDiv) {
      // Because wack IE doesn't support multiple parameters for .remove or .add.
      ['typer', 'cursor-block', 'cursor-soft', 'cursor-hard', 'no-cursor'].map(function(name) {
        q.newDiv.classList.remove(name);
      });

      q.newDiv.classList.add('white-space');

      if(q.newDiv.innerHTML === '') q.newDiv.innerHTML = ' '; // Retains the height of a single line.
    }

    // Create new div.
    var div = document.createElement('div');
    div.setAttribute('data-typer-child', q.dataNum);
    div.className = q.cursor;
    div.classList.add('typer');
    div.classList.add('white-space');

    el.appendChild(div);
    q.newDiv = div;

    // If our line has no contents...
    if(item.line === 1) {
      q.item++;
      return processq();
    }

    // Message iterator.
    processMsg(item);
  }
  function processContinue(item) {
    clearInterval(q.type); // Stop the main iterator.
    processMsg(item); // Message iterator.
  }
  function processPause(item) {
    clearInterval(q.type); // Stop the main iterator.

    q.pause = setTimeout(function() {
      q.item++; // Increment our main item counter.
      processq(); // Restart the main iterator.
    }, item.pause);
  }
  function processEmit(item) {
    clearInterval(q.type); // Stop the main iterator.
    document.querySelector(item.el).dispatchEvent(new Event(item.emit));

    q.item++;
    processq();
  }
  function processListen(item) {
    clearInterval(q.type); // Stop the main iterator.

    var el = document.querySelector(item.el);

    // One-time event listener.
    el.addEventListener(item.listen, function handler(e) {
      el.removeEventListener(e.type, handler)
      if(q.killed) return; // Prevent error if kill switch is engaged.
      q.item++;
      processq();
    });
  }
  function processBack(item) {
    // Stop the main iterator.
    clearInterval(q.type);

    // Check for being called on an empty line.
    if(!q.newDiv.textContent) {
      q.item++;
      return processq();
    }

    function removeEmptys(el) {
      // Convert HTMLcollection to an array: http://goo.gl/2rTC4i
      var children = [].slice.call(el.children);

      children.map(function(child, i) {
        // Child.
        if(!child.innerHTML.length) {
          child.remove ? child.remove() : child.removeNode(); // IE nonsense.

          if(el === q.newDiv) {
            contents = el.innerHTML.split(''); // Reset the contents array.
            index = contents.length - 1; // Reset the index.
          }

        // Children of child.
        } else if(child.children.length) {
          removeEmptys(child); // Recursion (read: inception).

          if(!this[i].innerHTML.length) {
            this[i].remove ? this[i].remove() : this[i].removeNode(); // Remove empty recursive parent.
            contents = el.innerHTML.split('');
            index = contents.length - 1;
          }
        }
      }, children);
    }

    // Prevent '0' from triggering Typer's default speed.
    if(item.speed === 0) item.speed = 1;

    // Empty the line all at once.
    if(item.back === 'empty') {
      q.newDiv.innerHTML = '';
      q.item++;
      return processq();
    }

    // Prevent larger 'back' quantities from needlessly interrupting the flow.
    if(item.back > q.newDiv.innerHTML.length) item.back = 'all';

    // A simple way to erase the whole line without knowing the contents:
    // set the # of 'backspaces' to the content's length.
    if(item.back === 'all') item.back = q.newDiv.textContent.length;

    // Negative #'s are an easy way to say "erase all BUT X-amount of characters."
    if(item.back < 0) {
      var text = q.newDiv.textContent;
      item.back = text.substring(item.back * -1, text.length).length;
    }

    var counter = 0;
    var contents = q.newDiv.innerHTML.split('');
    var index = contents.length - 1;

    q.goBack = setInterval(function() {
      counter++;

      // TAG DETECTION
      if(contents[index] === '>') {
        var tag = [];

        for(var i = index; i >= 0; i--) {
          tag.unshift(contents[i]);

          // Closing tag check.
          if(contents[i] === '<' && contents[i + 1] === '/') {
            tag.length = 0; // Clear the tag array.

            // Back-to-back-tags logic.
            if(contents[i - 1] === '>') {
              continue;
            } else {
              index = i - 1;
              break;
            }

          // Void tag check.
          } else if(contents[i] === '<') {
            var vTag = tag.slice(1, tag.length - 1).join('');
            var isVoid = q.voids.some(function(v) {
              return v === vTag;
            });

            index = i - 1;

            // Remove void tag.
            if(isVoid) contents.splice(i, tag.length);
            tag.length = 0;

            // Back-to-back-tags logic.
            if(contents[i - 1] === '>') {
              continue;
            } else {
              break;
            }
          }
        }
      }

      // UNICODE DETECTION
      if(contents[index] === ';') {
        var uni = [];

        for(var j = index; j >= 0; j--) {
          uni.unshift(contents[j]);
          if(contents[j] === '&') break;
        }

        var div = document.createElement('div');
        div.innerHTML = uni.join('');

        if(div.textContent.length === 1) {
          index = j - 1;
          // Remove the whole chunk.
          contents.splice(j, uni.length);
        } else {
          // Remove a single character.
          contents.splice(index, 1);
          index--;
        }

        q.newDiv.innerHTML = contents.join('');

      // DEFAULT SINGLE-CHARACTER REMOVAL
      } else {
        contents.splice(index, 1);
        q.newDiv.innerHTML = contents.join('');
        index--;
      }

      // Exit.
      if(counter === item.back) {
        clearInterval(q.goBack);
        removeEmptys(q.newDiv);
        q.item++;
        processq();
      }

    }, item.speed || speed);
  }
  function processEmpty() {
    q.newDiv = '';
    el.innerHTML = '';
    processLine({line: 1}); // This will stop the main iterator & run 'processq'.
  }
  function processRun(item) {
    clearInterval(q.type); // Stop the main iterator.

    item.run(el);
    q.item++;
    processq();
  }
  function processEnd() {
    clearInterval(q.type); // Final stop to our main iterator.
    q.cb(); // Run the callback provided.
  }

  // The kill switch.
  q.kill = function(e) {
    document.body.removeEventListener(e.type, q.kill);
    q.killed = true; // For processListen.

    // Stop all iterations & pauses.
    clearInterval(q.iterator); // From processMsg.
    clearInterval(q.goBack); // From processBack.
    clearTimeout(q.pause) // From processPause.

    if(q.item === q.length) return console.log('This typer has completed; removing listener.');

    // If typer is in a listener state...
    var ear = q[q.item];
    if(ear && ear.listen) {
      var el = document.querySelector(ear.el);
      el.dispatchEvent(new Event(ear.listen));
    }
  }

  // Return 'typerObj' to be able to run the various methods.
  return typerObj;
}
function thingToHTML(options) {

  ///////////
  // SETUP //
  ///////////

  var type = checkType(options.thing);

  // 'thing' must be an object or array.
  if(typeof options.thing !== 'object') {
    throw new TypeError('You must provide "thingToHTML" with an object or an array.');
  }

  // User must provide a thing (checked above) and a container.
  if(!options.container || checkType(options.container) !== 'String') {
    throw new Error("You must provide a valid CSS selector. Example: {container: '.someClass'}");
  }

  // Options.
  var thing = options.thing;
  var container = document.querySelector(options.container);
  var collapseButton = options.button;
  var theme = options.theme;

  // Indentation settings.
  var indent = 2;
  var unit = 'ch';

  // Top-level thing.
  var top = createEl('div'); // { or [
  var middle = createEl('div');
  var bottom = createEl('div'); // } or ]

  // Add classes & id's to the top-level opener & closer.
  top.className = 'top-level';
  bottom.className = 'top-level';
  top.setAttribute('id', 'top-opener');
  bottom.setAttribute('id', 'top-closer');

  // Allow theme styles to apply to container.
  if(theme) {
    container.classList.add('color'); // Used to trigger null & undefined colors.
    container.classList.add(theme);
  }
  container.classList.add('thing'); // Necessary styles for collapsing.

  // Indent the things contents.
  middle.style.marginLeft = indent + unit;

  // Top level assignment: object or array.
  type === 'Array' ? top.textContent = '[' : top.textContent = '{';
  type === 'Array' ? bottom.textContent = ']' : bottom.textContent = '}';


  /////////////
  // PROCESS //
  /////////////

  // { or [
  container.appendChild(top);

  // Process the contents via recursion.
  if(type === 'Array') {
    arrayToHTML(thing, middle, indent);
  } else {
    objToHTML(thing, middle, indent);
  }

  // Append the contents.
  container.appendChild(middle);

  // } or ]
  container.appendChild(bottom);

  // Create the collapse button & apply listeners.
  if(collapseButton) {
    var signs = document.querySelectorAll('.sign');
    var items = document.querySelectorAll('.item');
    var buttons = createEl('div', 'buttons');
    var openClose = createEl('div', 'button', 'open-close');
    var un = createEl('span', false, 'un');

    openClose.appendChild(un);
    openClose.innerHTML += 'COLLAPSE ALL';
    buttons.appendChild(openClose);
    container.insertBefore(buttons, container.firstChild);

    // Collapse / Uncollapse button: add click event listener.
    openClose.addEventListener('click', all);

    // Signs: add click event listeners.
    [].map.call(signs, function(sign) {
      sign.addEventListener('click', click);
    });

    // Items: add mouseover / mouseout event listeners.
    [].map.call(items, function(item) {
      item.addEventListener('mouseover', mouseover);
      item.addEventListener('mouseout', mouseout);
    });

    document.body.addEventListener('killThings', killThings);
    function killThings(e) {
      removeListeners();
      document.body.removeEventListener(e.type, killThings);
    }
  }


  ///////////
  // LOGIC //
  ///////////

  function checkType(obj) {
    var type = Object.prototype.toString.call(obj);
    return type.slice(8, -1);
  }
  function createEl(el, className, id) {
    var elem = document.createElement(el);
    if(className) elem.className = className;
    if(id) elem.setAttribute('id', id);
    return elem;
  }
  function oneLinerCheck(type, item) {
    var oneLiner = ['String', 'Number', 'Boolean', 'Null', 'Undefined', 'Function'].some(function(name) {
      // One-liner function check.
      if(name === 'Function' && name === type) {
        return item.toString().split('\n').length === 1 ? true : false;
      }
      return name === type;
    });

    return oneLiner;
  }
  function objToHTML(obj, container, indent) {
    var keys = Object.keys(obj);

    keys.map(function(key, i) {
      var item = obj[key];
      var type = checkType(item);

      // STRING, NUMBER, BOOLEAN, NULL, UNDEFINED
      // FUNCTION: single-line.
      if(oneLinerCheck(type, item)) {
        var itemDiv = createEl('div', 'item');
        var property = createEl('span', 'property');
        var value = createEl('span', 'value ' + type.toLowerCase());
        var nbnu = ['Number', 'Boolean', 'Null', 'Undefined'].some(function(name) { return type === name });

        property.textContent = key;
        itemDiv.appendChild(property);
        itemDiv.innerHTML += ': ';


        // ONE-LINER TYPES.
        if(type === 'String') {
          // http://goo.gl/63JDXB
          var url = /^(ftp|http|https):\/\/[^ "]+$/.test(item);
          // http://goo.gl/DeMEbe
          var email = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm.test(item);

          if(url || email) {
            var a = createEl('a', url ? 'url' : 'email');
            a.textContent = item;
            a.setAttribute('href', url ? item : 'mailto:' + item);
            if(url) a.setAttribute('target', '_blank');

            value.innerHTML += '"';
            value.appendChild(a);
            value.innerHTML += '"';
          } else {
            value.textContent = '"' + item + '"';
          }
        } else if(type === 'Null' || type === 'Undefined') {
          value.textContent = type.toLowerCase();
        } else if(type === 'Function') {
          value.textContent = item.toString();
        } else if(type === 'Number' || type === 'Boolean') {
          value.textContent = item;
        }

        itemDiv.appendChild(value);
        if(i !== keys.length - 1) itemDiv.innerHTML += ',';

        container.appendChild(itemDiv);

      // OBJECT, ARRAY
      } else if(typeof item === 'object') {
        // Empty objects or arrays.
        var length = type === 'Object' ? Object.keys(item).length : item.length;
        var collapser = createEl('div', 'item collapser');
        var property = createEl('span', 'property opener');
        var sign = createEl('div', 'sign open');
        var collapsee = createEl('div', 'collapsee');
        var closer = createEl('span', 'closer');

        collapsee.style.marginLeft = indent + unit;
        collapser.appendChild(sign);

        property.textContent = key;
        collapser.appendChild(property);

        collapser.innerHTML += type === 'Array' ? ': [' : ': {';
        closer.textContent = type === 'Array' ? ']' : '}';

        // For empty objects / arrays.
        if(!length) collapser.classList.add('empty');

        // Recursion.
        type === 'Array' ? arrayToHTML(item, collapsee, indent) : objToHTML(item, collapsee, indent);


        collapser.appendChild(collapsee);
        collapser.appendChild(closer);
        if(i !== keys.length - 1) collapser.innerHTML += ',';

        container.appendChild(collapser);

      // FUNCTION: multi-line.
      } else if(type === 'Function') {
        var collapser = createEl('div', 'item collapser');
        var property = createEl('span', 'property opener');
        var value = createEl('span', 'value function');
        var sign = createEl('div', 'sign open');
        var collapsee = createEl('div', 'collapsee function');
        var closer = createEl('span', 'closer function');
        var fxn = item.toString().split('\n'); // Function to an array.

        property.textContent = key;
        value.textContent = fxn[0]; // First line of the function: 'function () {';
        collapser.appendChild(property);
        collapser.innerHTML += ': ';
        collapser.appendChild(value);
        closer.textContent = '}';

        // Find the indentation offset.
        var trimmed = fxn[1].trim(); // 1st line with no leading spaces.
        var offset = fxn[1].indexOf(trimmed); // 1st line with leading spaces.

        // Append the function lines to a parent (collapsee) with proper margin per line.
        fxn.map(function(line, i) {
          if(i !== 0 && i !== fxn.length - 1) { // Skip the first & last lines.
            var fxnLine = createEl('div', 'fxn-line');
            var margin = line.indexOf(line.trim()) - offset;

            fxnLine.textContent = line.trim();

            // Refrain from applying margins of 0.
            if(margin) fxnLine.style.marginLeft = margin + unit;

            collapsee.appendChild(fxnLine);
          }
        });

        collapsee.style.marginLeft = indent + unit;

        collapser.appendChild(sign);
        collapser.appendChild(collapsee);
        collapser.appendChild(closer);
        if(i !== keys.length - 1) collapser.innerHTML += ',';

        container.appendChild(collapser);
      }
    });
  }
  function arrayToHTML(arr, container, indent) {
    var arrayContents = createEl('div', 'array-contents');

    arr.map(function(piece, i) {
      var type = checkType(piece);
      var arrayItem = createEl('div', 'array-item item');

      // STRING / NUMBER / BOOLEAN / NULL / UNDEFINED
      // FUNCTION: single-line.
      if(oneLinerCheck(type, piece)) {
        var value = createEl('span', type.toLowerCase());

        if(type === 'Null' || type === 'Undefined') {
          value.textContent = type.toLowerCase();
        } else {
          value.textContent = type === 'String' ? '"' + piece + '"' : piece;
        }

        arrayItem.appendChild(value);
        arrayContents.appendChild(arrayItem);

      // ARRAY / OBJECT / FUNCTION
      } else if(type === 'Array' || type === 'Object' || type === 'Function') {
        var collapser = createEl('div', 'collapser');
        var sign = createEl('div', 'sign open');
        var collapsee = createEl('div', 'collapsee');
        var closer = createEl('span', 'closer');

        if(type === 'Function') {
          var fxn = piece.toString().split('\n'); // Function to an array.
          collapser.className += ' function';
          collapsee.className += ' fxn function';
          closer.className += ' fxn-close function';

          collapser.textContent = fxn[0];
          closer.textContent = '}';

          // Find the indentation offset.
          var trimmed = fxn[1].trim();
          var offset = fxn[1].indexOf(trimmed);

          // Append the function lines to a parent with proper margin.
          fxn.map(function(line, i) {
            if(i !== 0 && i !== fxn.length - 1) { // Skip the first & last lines.
              var el = createEl('div', 'fxn-line');
              var margin = line.indexOf(line.trim()) - offset;

              el.textContent = line.trim();
              el.style.marginLeft = margin + unit;

              collapsee.appendChild(el);
              collapsee.style.marginLeft = indent + unit;
            }
          });

          collapser.appendChild(sign);
          arrayItem.appendChild(collapser);
          arrayItem.appendChild(collapsee);
          arrayItem.appendChild(closer);
          arrayContents.appendChild(arrayItem);

        } else {
          var length = type === 'Array' ? piece.length : Object.keys(piece).length;

          collapser.textContent = type === 'Array' ? '[' : '{';
          closer.textContent = type === 'Array' ? ']' : '}';

          // For empty objects / arrays.
          if(!length) arrayItem.classList.add('empty');

          collapsee.style.marginLeft = indent + unit;

          // Recursion.
          type === 'Array' ? arrayToHTML(piece, collapsee, indent) : objToHTML(piece, collapsee, indent);

          collapser.appendChild(sign);
          arrayItem.appendChild(collapser);
          arrayItem.appendChild(collapsee);
          arrayItem.appendChild(closer);
          arrayContents.appendChild(arrayItem);
        }
      }

      // Add commas to separate array items.
      if(i !== arr.length - 1) arrayItem.innerHTML += ',';
    });

    container.appendChild(arrayContents);
  }


  ///////////////////////////////
  // EVENTS LISTENER FUNCTIONS //
  ///////////////////////////////

  // Event functions by name.
  function click(e) {
    this.classList.toggle('closed');
    var collapser = this.parentElement;
    collapser.classList.toggle('closed');

    var collapsee = this.parentElement.querySelector('.collapsee') ||
                    this.parentElement.nextElementSibling;
    collapsee.classList.toggle('hide');

    var closer = collapsee.nextElementSibling;
    closer.classList.toggle('closed');
  }
  function mouseover(e) {
    this.classList.add('hover');
    e.stopPropagation();
  }
  function mouseout(e) {
    this.classList.remove('hover');
    e.stopPropagation();
  }

  // Open / close all levels.
  function all() {
    var dir;
    var collapsed = this.classList.contains('collapsed');
    var un = document.querySelector('#un');

    if(collapsed) {
      dir = 'open';
      this.classList.remove('collapsed');
      un.innerHTML = '';
    } else {
      dir = 'closed';
      this.classList.add('collapsed')
      un.innerHTML = 'UN-';
    }

    [].map.call(signs, function(plus) {
      var closed = plus.classList.contains('closed');
      if(dir === 'open') {
        if(closed) plus.click();
      } else if(dir === 'closed') {
        if(!closed) plus.click();
      }
    });
  }

  // Remove all event listeners.
  function removeListeners() {
    [].map.call(signs, function(sign) {
      sign.removeEventListener('click', click);
    });

    [].map.call(items, function(item) {
      item.removeEventListener('mouseover', mouseover);
      item.removeEventListener('mouseout', mouseout);
    });

    document.querySelector('#open-close').removeEventListener('click', all);
  }
}
function timeCalculator() {
  var readout = document.querySelector('.readout');
  var pReadout = document.querySelector('.plain-readout');
  var calcContainer = document.querySelector('.calc-container');
  var nums = [];

  generateNumbers(); // Generates the page's number-filled background.


  ///////////////////////////
  // CALCULATOR OPERATIONS //
  ///////////////////////////

  function operate(opr) {
    var segments = ['s', 'm', 'h', 'd'];
    var input = readout.textContent;
    if(!input) return; // Do nothing for blank readouts.
    if(input[input.length - 1] === ':') input = input.substring(0, input.length -1); // Remove trailing colons.
    if(nums.complete && opr === '=') return;
    if(nums.complete) nums = []; // Reset for operators after calculation.

    // Convert user input into an array of numbers.
    function toNumber(num) { return Number(num); }
    input = input.split(':').reverse().map(toNumber);

    // Convert input to a total of seconds.
    var seconds = null;
    var values = [1, 60, 3600, 86400];
    for(var i = 0; i < input.length; i++) {
      seconds += input[i] * values[i];
    }

    if(nums.operating) {
      if(opr === '=') {
        if(nums.length < 4) return;
        nums.pop();
        return equals();
      }

      nums.pop();
      return nums.push(opr);
    } else if(opr === '=') {
      nums.push(seconds);
      return equals();
    }

    nums.operating = true;
    nums.push(seconds); // Number.
    nums.push(opr); // Operator.
  }

  function equals() {
    var segments = ['s', 'm', 'h', 'd'];
    var total = {s: null, m: null, h: null, d: null};
    var seconds = null;
    nums.complete = true;

    // Remove trailing operator.
    var last = nums[nums.length - 1];
    if(last === '+' || last === '-') nums.pop();

    // Convert number to be subtracted to negatives
    // and total up the numbers.
    function toNegatives(num, i) {
      if(Number(num)) {
        nums[i - 1] === '-' ? seconds -= num : seconds += num;
      }
    }
    nums.map(toNegatives);

    segments.reverse(); // Order necessary for convertSum below.

    // Convert lump-sum seconds to d:h:m:s format.
    function convertSum(num, i) {
      var l = segments[i];

      if(Math.abs(seconds) >= num) { // Math.abs() necessary for negative times.
        total[l] = Math.floor(seconds / num);
        seconds %= num;
      } else {
        if(l === 'd') return total[l] = null;
        total[segments[i - 1]] === null ? total[l] = null : total[l] = 0;
      }
    }
    [86400, 3600, 60].map(convertSum);
    // |      |    |
    // d      h    m --> in seconds.
    total.s = seconds;

    // Display answer.
    readout.textContent = '';
    function displayAnswer(seg) { if(total[seg] !== null) readout.textContent += total[seg] + ':'; }
    segments.map(displayAnswer);
    readout.textContent = readout.textContent.slice(0, -1);
    plainReadout();
  }

  function plainReadout() {
    if(!readout.textContent.length) return pReadout.textContent = '';

    var segments = ['sec', 'min', 'hr', 'day'];
    function addSegments(num, i) { return Number(num) + segments[i]; }
    var input = readout.textContent.split(':').reverse().map(addSegments);

    pReadout.textContent = input.reverse().join(' ');
  }

  function reset() {
    nums = [];
    readout.textContent = '';
    pReadout.textContent = '';
  }

  function clearActives() {
    var actives = calcContainer.querySelectorAll('.active');
    function byeActive(el) { el.classList.remove('active'); }
    [].map.call(actives, byeActive); // Call .map on array-like object 'actives'.
  }


  ///////////
  // MOUSE //
  ///////////

  // CLICK
  document.body.addEventListener('click', click);
  function click(e) {
    var classes = e.target.classList;
    var id = e.target.id;

    // Untrack keypress button.
    if(classes.contains('button')) nums.button = false;

    // If following an completed calculation...
    if(nums.complete) {
      if(id === 'colon' || id === 'delete' || id === 'equals') return;
      if(classes.contains('number')) reset();
    }

    // If we're expecting a number after an operator.
    if(nums.operating) {
      if(id === 'colon' || id === 'delete') return;
      if(classes.contains('number')) readout.textContent = '';
    }

    // CLR
    if(id === 'clear') reset();

    // DEL
    if(id === 'delete') readout.textContent = readout.textContent.substring(0, readout.textContent.length -1);

    // + | - | =
    if(id === 'add' || id === 'subtract' || id === 'equals') operate(e.target.textContent);

    // :
    if(id === 'colon') {
      if(readout.textContent.split(':').length === 4) return plainReadout(); // Prevent colons after 4 time sections.
      if(readout.textContent[readout.textContent.length - 1] === ':') return plainReadout(); // Prevent double colons.
      if(!readout.textContent) return plainReadout();
      readout.textContent += ':';
    }

    // Numbers.
    if(classes.contains('number')) {
      nums.operating = false;
      readout.textContent += e.target.textContent;
    }

    plainReadout();
  }

  // MOUSEDOWN
  document.body.addEventListener('mousedown', mousedown);
  function mousedown(e) {
    var classes = e.target.classList;
    clearActives();
    if(classes.contains('button')) classes.add('active');
  }

  // MOUSEUP
  document.body.addEventListener('mouseup', mouseup);
  function mouseup(e) {
    var classes = e.target.classList;
    clearActives();
    if(classes.contains('active')) classes.remove('active');
  }


  //////////////
  // KEYBOARD //
  //////////////

  // KEYDOWN
  document.body.addEventListener('keydown', keydown);
  function keydown(e) {
    // Prevent auto-repeat, allow for delete key.
    if(nums.button === e.which && e.which !== 8) return;
    nums.button = e.which;

    // After a calculation, prevent these keypresses:
    // :, backspace / delete, =, enter.
    if(nums.complete) {
      var badKey = [186, 8, 187, 13].some(function(n) {
        if(e.which === 187 && e.shiftKey) return false; // Allow '+'.
        return n === e.which;
      });
      if(badKey) return;
    }

    var num = calcContainer.querySelector('.number' + (e.which - 48));

    // Any number key.
    if(num) {
      // If we're expecting a number after an operator.
      if(nums.operating) {
        nums.operating = false;
        readout.textContent = '';
      }

      if(nums.complete) {
        nums = [];
        readout.textContent = '';
      }

      // Normal number-press behavior.
      num.classList.add('active');
      readout.textContent += num.textContent;
      plainReadout();

    // :
    } else if(e.which === 186 && e.shiftKey) {
      calcContainer.querySelector('#colon').classList.add('active');

      if(nums.operating) return; // Do nothing if operating.
      if(!readout.textContent) return; // Do nothing for blank readout.
      if(readout.textContent.split(':').length === 4) return; // Prevent colons after 4 time sections.
      if(readout.textContent[readout.textContent.length - 1] === ':') return; // Prevent double colons.

      readout.textContent += ':';

    // Backspace / delete.
    } else if(e.which === 8) {
      calcContainer.querySelector('#delete').classList.add('active');

      if(nums.operating) return; // Do nothing if operating.
      readout.textContent = readout.textContent.split('').slice(0, -1).join('');
      plainReadout();

    // ESC
    } else if(e.which === 27) {
      calcContainer.querySelector('#clear').classList.add('active');
      reset();

    // +
    } else if(e.which === 187 && e.shiftKey) {
      calcContainer.querySelector('#add').classList.add('active');
      operate('+');

    // -
    } else if(e.which === 189 && !e.shiftKey) {
      calcContainer.querySelector('#subtract').classList.add('active');
      operate('-');

    // = | enter
    } else if((e.which === 187 && !e.shiftKey) || e.which === 13) {
      calcContainer.querySelector('#equals').classList.add('active');
      operate('=');
    }
  }

  // KEYUP
  document.body.addEventListener('keyup', keyup);
  function keyup() {
    clearActives();
    nums.button = false;
  }


  /////////////////////
  // PAGE BACKGROUND //
  /////////////////////

  function randomNum(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  }

  function generateNumbers() {
    for(var i = 0; i < 50; i ++) {
      var div = document.createElement('div');
      div.className = 'random';
      div.textContent = randomNum(1, 50);
      div.style.top = randomNum(1, 100) + '%';
      div.style.left = randomNum(1, 100) + '%';
      div.style.fontSize = randomNum(3, 20) + 'vw';
      div.style.transform = 'rotate(' + randomNum(-45, 45) + 'deg)'

      document.querySelector('.randoms').appendChild(div);
    }
  }


  //////////////////////
  // REMOVE LISTENERS //
  //////////////////////

  document.body.addEventListener('killTimeCalc', killCalcListeners);
  function killCalcListeners(e) {
    document.body.removeEventListener(e.type, killCalcListeners);

    ['click', 'mousedown', 'mouseup', 'keydown', 'keyup'].map(function(event) {
      document.body.removeEventListener(event, eval(event));
    });
  }
}

function bgImageGallery(photos, containerSelector, time, random) {
  var container = document.querySelector(containerSelector);
  var bg1 = document.createElement('div');
  var bg2 = document.createElement('div');
  var credits = document.createElement('div');
  var images = photos.slice(); // Clone array so as not to manipulate the original object.
  var randomized = [];
  var fade = time / 2;
  var transitionTime = fade * .75 / 1000;
  var bg1Showing = true;
  var i = 2;
  var timing = {};
  var num;

  // Responsible for displaying image credits on the screen.
  function processCredits(image) {
    credits.innerHTML = image.credits ? image.credits : '';
  }

  if (images.length < 2) {
    throw new Error('You need to supply at least 2 images to the gallery.');
  }

  // 'killGallery' listener: stops the iterations stored in the `timing` object.
  document.body.addEventListener('killGallery', function killGallery(e) {
    document.body.removeEventListener(e.type, killGallery); // 1-time listener.

    clearInterval(timing.interval);
    clearTimeout(timing.timeout);
  });


  // If randomization requested, randomize the array.
  if (random) {
    while (images.length > 0) {
      num = Math.floor(Math.random() * images.length);

      randomized.push(images[num]);
      images.splice(num, 1);
    }

    images = randomized.slice();
  }

  // Append the elements to the container.
  container.appendChild(bg1);
  container.appendChild(bg2);
  container.appendChild(credits);

  // Add the necessary classes classes.
  bg1.classList.add('bg1');
  bg1.classList.add('on');
  bg2.classList.add('bg2');
  bg2.classList.add('off');
  credits.classList.add('bg-credits');

  // The page loads with the first background loaded & showing,
  // the second background loaded & not showing.
  bg1.style.backgroundImage = 'url(' + images[0].image + ')';
  bg2.style.backgroundImage = 'url(' + images[1].image + ')';

  // Set the transition time on the background elements.
  bg1.style.transition = 'opacity ' + transitionTime + 's';
  bg2.style.transition = 'opacity ' + transitionTime + 's';

  // Set the credits on the first image (if available).
  processCredits(images[0]);

  // Start the gallery!
  timing.interval = setInterval(function() {
    if (i === images.length) i = 0;

    processCredits(i === 0 ? images[images.length - 1] : images[i - 1]);

    bg1.classList.toggle('on');
    bg1.classList.toggle('off');
    bg2.classList.toggle('on');
    bg2.classList.toggle('off');

    bg1Showing = !bg1Showing;

    timing.timout = setTimeout(function() {
      if (bg1Showing) {
        bg2.style.backgroundImage = 'url(' + images[i].image + ')';
      } else {
        bg1.style.backgroundImage = 'url(' + images[i].image + ')';
      }

      i++;
    }, fade);
  }, time);
}

// Example model:
// {
//   _id: 'apologetics-2',
//   createdAt: 849739847534,
//   updatedAt: 938729387474,
//   title: 'Apologetics 2',
//   content: '...',
//   tags: ['some', 'tags', 'here'],
//   image: 'some/url/here.png'
// }

app.PostModel = Backbone.Model.extend({
  idAttribute: '_id'
});

app.PostsCollection = Backbone.Collection.extend({
  model: app.PostModel,
  url: '/blog-posts'
});

// menu = #menu-container, container = #menu
function blowUpMenu(menu, container) {
  var transitionEnds = 0;
  var wraps;
  var length;

  function num(num1, num2, neg) {
    var n = app.randomNum(num1, num2);
    if (neg === false && n % 2) n *= -1;
    if (neg) n /= 100;
    return n;
  }

  // Wrap all text-nodes in a wrapify element.
  wrapify($(menu)[0], 'div', 'wrapify');
  wraps = $('.wrapify').toArray();
  length = wraps.length;

  $(container).on('transitionend', function(e) {
    if (e.originalEvent.propertyName === 'top') {
      transitionEnds++;

      if (transitionEnds === wraps.length) {
        $(container).off('transitionend');
        $body.trigger('menuAnimationComplete');
      }
    }
  });

  // Apply top, left, & transform css styles to the `.wrapify`d elements.
  wraps.map(function(el) {
    var top = ['top ', num(100, 150, true), 's cubic-bezier(.9,-.99,1,.96),'].join('');
    var left = ['left ', num(150, 250, true), 's cubic-bezier(0,0,.5,1),'].join('');
    var xfrm = ['transform ', num(250, 350, true), 's cubic-bezier(.25,.46,0,1)'].join('');
    var transition = [top, left, xfrm].join('');

    el.style.transition = transition;
  });

  setTimeout(function() {
    $(container).addClass('blow-up');

    wraps.map(function(el) {
      el.style.left = num(-20, 20) + 'vw';
      el.style.transform = 'rotate(' + num(140, 360, false) + 'deg)';
    });
  }, 50);
}

function dateConversion(date) {
  if (Object.prototype.toString.call(date) !== '[object Date]') {
    throw new TypeError('You must provide a valid Date object.');
  }

  var days = [
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday'
  ];

  var months = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December'
  ];

  // FEBRUARY 26, 2016
  // .getDay      => 0 (0 - 6)
  // .getMonth    => 7
  // .getDate     => 7 (1 - 31)
  // .getFullYear => 2016

  return [
    days[date.getDay()], // ex. 'Sunday'
    ', ',
    months[date.getMonth()], // ex. 'August'
    ' ',
    date.getDate(), // ex. '7'
    ', ',
    date.getFullYear() // ex. '2016'
  ].join('');
}

/* eslint-disable */
function deckGrid() {
  // Object for tracking pieces to save and other things.
  var tracker = {squares: [], lengthMoving: false, objectMoving: false, listeners: {}};

  // Object for tracking pieces for multiple draws.
  // Hold down the alt / option key, and click 2 points on the board.
  var alt = {pieces: []};


  // Save our current layout to a text file.
  function saveLayout() { // http://goo.gl/DwUxmp
    var textFile = null;

    function makeTextFile(text) {
      var data = new Blob([text], {type: 'text/plain'});

      if (textFile !== null) window.URL.revokeObjectURL(textFile);

      textFile = window.URL.createObjectURL(data);

      return textFile;
    }

    tracker.listeners.saveClick = function(e) {
      // Scope this listener to just the save button.
      if (e.target.id !== 'save-button') return;

      // Store all length pieces.
      var lengthsObj = {lengths: []};
      var lengths = document.querySelectorAll('.length');
      for (var j = 0; j < lengths.length; j++) {
        lengthsObj.lengths.push(lengths[j].outerHTML);
      }

      // Store all objects.
      var objectsObj = {objects: []};
      var objects = document.querySelectorAll('.object');
      for (var k = 0; k < objects.length; k++) {
        objectsObj.objects.push(objects[k].outerHTML);
      }

      // Clean up the 'tracker.squares' array.
      var tempArray = [];
      for (var i = 0; i < tracker.squares.length; i++) {
        if (tracker.squares[i] !== null) tempArray.push(tracker.squares[i]);
      }

      tempArray.push(lengthsObj);
      tempArray.push(objectsObj);

      // Contents of the file.
      var layout = JSON.stringify(tempArray);

      // Hide the save button.
      e.target.style.display = 'none';

      // Show the download button
      var link = document.querySelector('#download-link');
      link.href = makeTextFile(layout);
      link.style.display = 'inline-block';
    };
    document.body.addEventListener('click', tracker.listeners.saveClick, false);
  }

  // Process individual squares.
  function processSquare(el) {
    if (el.classList.contains('structure')) return;

    var row = Number(el.dataset.row); // Row.
    var col = Number(el.dataset.col);// Column.
    var type = tracker.legend.id; // New type of piece.
    var piece = {row: row, col: col, type: type}; // Piece for the tracker array.

    // Occupied squares...
    if (el.dataset.index) {
      var oldIndex = Number(el.dataset.index);
      tracker.squares.splice(oldIndex, 1);

      el.classList.remove(el.dataset.type); // Remove old type class.
      el.classList.add(type); // Set new type class.
      el.dataset.type = type; // Set stored type.

      // Insert the new piece into array at the old index.
      tracker.squares.splice(oldIndex, 0, piece);

    // Empty squares...
    } else {
      el.classList.add(type); // Set new type class.
      el.dataset.type = type; // Set stored type.
      el.dataset.index = tracker.squares.length; // Store the items index # in the array.

      // Add new piece to the tracker array.
      tracker.squares.push(piece);
    }
  }

  // Draw a deck from a supplied array (saved file).
  function drawDeck(array) {
    var body = document.querySelector('body');

    for (var i = 0; i < array.length; i++) {
      var item = array[i];
      var div;

      // Deal with null objects;
      if (item === null) continue;

      // If we hit the 'lengths' item array, draw them all on the board.
      if (item.lengths) {
        for (var j = 0; j < item.lengths.length; j++) {
          div = document.createElement('div');
          div.innerHTML = item.lengths[j];
          body.appendChild(div.firstChild);
        }

      // If we hit the 'objects' item array, draw them all on the board.
      } else if (item.objects) {
        for (var k = 0; k < item.objects.length; k++) {
          div = document.createElement('div');
          div.innerHTML = item.objects[k];
          body.appendChild(div.firstChild);
        }
      } else {
        var square = document.querySelector('.row' + item.row + '.col' + item.col);

        square.classList.add(item.type);
        square.dataset.type = item.type;
        square.dataset.index = i;

        tracker.squares.push(item);
      }
    }
  }

  // Clear the board.
  function clearBoard() {
    var objects = document.querySelectorAll('.object');
    var lengths = document.querySelectorAll('.length');
    var squares = document.querySelectorAll('.square');

    // Remove all objects.
    if (objects.length) {
      for (var i = 0; i < objects.length; i++) {
        objects[i].remove();
      }
    }

    // Remove all lengths.
    if (lengths.length) {
      for (var j = 0; j < lengths.length; j++) {
        lengths[j].remove();
      }
    }

    // Reset all squares.
    for (var k = 0; k < squares.length; k++) {
      if (squares[k].classList.contains('structure')) continue;
      squares[k].removeAttribute('data-type');
      squares[k].removeAttribute('data-index');
      squares[k].classList.remove(
        'pole',
        'beam-top',
        'beam-bottom',
        'double-top',
        'double-beam',
        'double-bottom'
      );
    }

    // Clear the tracker object.
    tracker.squares.length = 0;
  }

  // Placement of lengths & objects.
  function placement(el, e) {
    var width = window.innerWidth;
    var vUnit = width / 100;

    // Must use 'pageX' & 'pageY' to account for screen scrolling.
    var top = e.pageY / vUnit;
    var left = e.pageX / vUnit;

    el.style.top = top + 'vw';
    el.style.left = left + 'vw';

    // Translate on these are 50%, 50%.
  }

  // Cleanup: remove all event listeners.
  function removeListeners() {
    for (var i in tracker.listeners) {
      if (i === 'saveClick') {
        document.body.removeEventListener('click', tracker.listeners[i]);
      } else {
        document.body.removeEventListener(i, tracker.listeners[i]);
      }
    }

    document.body.removeEventListener('killDeckGrid', removeListeners);
  }
  document.body.addEventListener('killDeckGrid', removeListeners);


  /////////////////////
  // EVENT LISTENERS //
  /////////////////////

  // Alt & Enter keys.
  // Hold down the alt / option key, and click 2 points on the board.
  tracker.listeners.keydown = function(e) {
    if (e.which === 18) alt.key = true;

    // Enter key for create modals.
    if (e.which === 13) {
      if (tracker.legend && tracker.legend.id === 'create-object') {
        document.querySelector('#create-obj').click();
      } else if (tracker.legend && tracker.legend.id === 'create-length') {
        document.querySelector('#create-len').click();
      }
    }
  };
  document.body.addEventListener('keydown', tracker.listeners.keydown);

  tracker.listeners.keyup = function(e) {
    alt.pieces.length = 0; // Clear the alt-tracked pieces.
    if (e.which === 18) alt.key = false;
  };
  document.body.addEventListener('keyup', tracker.listeners.keyup);

  // Mouse-move for length & object pieces.
  tracker.listeners.mousemove = function(e) {
    var el;

    if (tracker.lengthMoving) {
      el = tracker.movingEl;
    } else if (tracker.objectMoving) {
      el = tracker.movingObj;
    } else return;

    placement(el, e);
  };
  document.body.addEventListener('mousemove', tracker.listeners.mousemove);

  // Import file.
  tracker.listeners.change = function(e) {
    if (e.target.id !== 'import') return;

    var input = e.target;
    var textarea = document.querySelector('#paste-JSON');
    var error = document.querySelector('#load-error');

    // File reader stuffs: http://goo.gl/oJ54hU
    var file = input.files[0];
    var textType = /text.*/; // Text files only.

    if (file && file.type.match(textType)) {
      var reader = new FileReader();
      reader.onload = function() {
        textarea.value = ''; // Clear the textarea.
        textarea.value = reader.result; // Clear the file input field.
      };

      reader.readAsText(file);

    } else if (file) {
      error.innerText = 'Text files only please.';
    }
  };
  document.body.addEventListener('change', tracker.listeners.change);

  // Clicks.
  tracker.listeners.click = function(e) {
    // Before anything, check if we're currently moving a piece.
    if (tracker.lengthMoving || tracker.objectMoving) {
      tracker.movingEl = '';
      tracker.lengthMoving = false;
      tracker.objectMoving = false;

    // LEGEND ITEMS
    } else if (e.target.classList.contains('legend-item')) {
      // If there's a current legend item, remove its class.
      if (tracker.legend) {
        tracker.legend.classList.remove('current-item');
      }

      // Store the current legend item.
      tracker.legend = e.target;
      e.target.classList.add('current-item');

      // Open SAVE modal.
      if (e.target.id === 'save-layout') {
        document.querySelector('#save-modal').style.display = 'initial';
        document.querySelector('#view-JSON').value = JSON.stringify(tracker.squares);

      // Open LOAD modal.
      } else if (e.target.id === 'load-layout') {
        document.querySelector('#load-modal').style.display = 'initial';

      // Open CREATE-LENGTH modal.
      } else if (e.target.id === 'create-length') {
        document.querySelector('#create-length-modal').style.display = 'initial';

      // Open CREATE-OBJ modal.
      } else if (e.target.id === 'create-object') {
        document.querySelector('#create-obj-modal').style.display = 'initial';
      }

    // SQUARE
    } else if (e.target.classList.contains('square')) {
      // Do nothing for squares we can't draw on and non-drawing legend options.
      if (e.target.classList.contains('structure')) return e.stopPropagation();
      if (tracker.legend && tracker.legend.id.includes('create')) return e.stopPropagation();
      if (tracker.legend && tracker.legend.id.includes('layout')) return e.stopPropagation();

      // If we have a legend item selected...
      if (tracker.legend) {

        if (tracker.legend.id === 'reset') {

          // Replace piece from the 'tracker.squares' array with null.
          if (e.target.dataset.index) { // Prevent empty squares from triggering the splice.
            tracker.squares.splice(e.target.dataset.index, 1, null);
            e.target.classList.remove(e.target.dataset.type); // Remove type class.
            e.target.removeAttribute('data-type'); // Remove stored type.
          }
        } else if (tracker.legend.id === 'delete') {
          // Prevent the 'delete' class from being added to quares.
          return e.stopPropagation();

        // ALT-KEY
        } else if (alt.key === true) {
          // Push the starting piece.
          if (alt.pieces.length === 0) {
            alt.pieces.push(e.target);

          // Push the ending piece, draw multiple things.
          } else if (alt.pieces.length === 1) {
            alt.pieces.push(e.target);

            // Row or column? / Ascending or descending?
            var fillObj = (function rowOrCol() {
              var obj = {};
              var piece1 = alt.pieces[0];
              var piece2 = alt.pieces[1];

              // Row or column?
              if (piece1.dataset.row === piece2.dataset.row) {
                obj.type = 'col'; // Type to process.
                obj.row = piece1.dataset.row; // Stays consistent.
              } else {
                obj.type = 'row'; // Type to process.
                obj.col = piece1.dataset.col; // Stays consistent.
              }

              // Are we ascending or descending?
              if (Number(piece1.dataset[obj.type]) < Number(piece2.dataset[obj.type])) {
                obj.start = Number(piece1.dataset[obj.type]);
                obj.end = Number(piece2.dataset[obj.type]);
              } else {
                obj.start = Number(piece2.dataset[obj.type]);
                obj.end = Number(piece1.dataset[obj.type]);
              }

              return obj;
            })();

            // Fill.
            for (var i = fillObj.start; i <= fillObj.end; i++) {
              var square;

              if (fillObj.type === 'row') {
                square = document.querySelector('.row' + i + '.col' + fillObj.col);
              } else {
                square = document.querySelector('.col' + i + '.row' + fillObj.row);
              }

              processSquare(square);
            }

            // Clear the alt-tracked pieces.
            alt.pieces.length = 0;
          }

        // NO ALT-KEY
        } else {
          alt.pieces.length = 0; // Clear the alt-tracked pieces.
          processSquare(e.target);
        }
      }

    // MODAL CLOSE
    } else if (e.target.classList.contains('modal-close')) {
      var modal = e.target.parentElement.parentElement;

      // Close SAVE modal.
      if (modal.id === 'save-modal') {
        modal.style.display = 'none';

        // Reset the save button & download link.
        document.querySelector('#save-button').style.display = 'block';
        document.querySelector('#download-link').style.display = 'none';

      // Close LOAD modal.
      } else if (modal.id === 'load-modal') {
        modal.style.display = 'none';

        document.querySelector('#paste-JSON').value = '';
        document.querySelector('#import').value = ''; // Invisible file-input.

      // Close LENGTH modal.
      } else if (modal.id === 'create-length-modal') {
        // Clear all values.
        document.querySelector('#length-feet').value = '';
        document.querySelector('#length-inches').value = '';
        document.querySelector('#error').innerText = '';
        document.querySelector('input[name="direction"]').checked = true;
        modal.style.display = 'none';

      // Close OBJECT modal.
      } else if (modal.id === 'create-obj-modal') {
        // Clear all values.
        document.querySelector('#obj-length-feet').value = '';
        document.querySelector('#obj-length-inches').value = '';
        document.querySelector('#obj-width-feet').value = '';
        document.querySelector('#obj-width-inches').value = '';
        modal.style.display = 'none';
      }

    // Import-button
    } else if (e.target.id === 'import-button') {
      document.querySelector('#paste-JSON').value = '';
      document.querySelector('#load-error').innerText = '';
      document.querySelector('#import').click();

    // Load-button / draw deck.
    } else if (e.target.id === 'load') {
      var textarea = document.querySelector('#paste-JSON');
      if (textarea === '') return e.stopPropagation();

      var text = JSON.parse(textarea.value);
      document.querySelector('#load-modal').style.display = 'none';

      clearBoard();
      drawDeck(text);

    // Create-button (length).
    } else if (e.target.id === 'create-len') {
      var radioValue = document.querySelector('input[name="direction"]:checked').value;
      var feet = Number(document.querySelector('#length-feet').value);
      var inches = Number(document.querySelector('#length-inches').value);
      var error = document.querySelector('#error');

      if (feet === '') feet = 0;
      if (inches === '') inches = 0;

      // Errors.
      if (feet > 21 || feet < 0) {
        return error.innerText = 'Feet must be between 0 and 21.';
      } else if (inches > 11 || inches < 0) {
        return error.innerText = 'Inches must be between 0 and 11.';
      } else {
        // squares are 1vw l & w.

        var totalF = 3 * feet;
        var totalI = .25 * inches;
        var div = document.createElement('div');

        if (radioValue === 'vertical') div.classList.add('vertical');
        div.classList.add('length');
        div.style.width = totalF + totalI + 'vw';
        div.innerText = feet + '\' ' + inches + '"';
        div.style.top = '2vw';
        div.style.left = '50%';

        document.querySelector('.grid').appendChild(div);
      }

      // Clear all values.
      document.querySelector('#length-feet').value = '';
      document.querySelector('#length-inches').value = '';
      document.querySelector('#error').innerText = '';

      document.querySelector('#create-length-modal').style.display = 'none';

    // Create-button (object).
    } else if (e.target.id === 'create-obj') {
      var feetLength = Number(document.querySelector('#obj-length-feet').value);
      var inchesLength = Number(document.querySelector('#obj-length-inches').value);
      var feetWidth = Number(document.querySelector('#obj-width-feet').value);
      var inchesWidth = Number(document.querySelector('#obj-width-inches').value);

      if (feetLength === '') feetLength = 0;
      if (inchesLength === '') inchesLength = 0;
      if (feetWidth === '') feetWidth = 0;
      if (inchesWidth === '') inchesWidth = 0;

      var div = document.createElement('div');
      var span1 = document.createElement('span');
      var span2 = document.createElement('span');

      div.classList.add('object');
      span1.innerText = 'Length: ' + feetLength + '\'' + inchesLength + '"';
      span2.innerText = 'Width: ' + feetWidth + '\'' + inchesWidth + '"';

      div.appendChild(span1);
      div.appendChild(span2);

      div.style.width = (3 * feetLength) + (.25 * inchesLength) + 'vw';
      div.style.height = (3 * feetWidth) + (.25 * inchesWidth) + 'vw';
      div.style.top = '2vw';
      div.style.left = '50%';

      document.querySelector('.grid').appendChild(div);
      document.querySelector('#create-obj-modal').style.display = 'none';

      // Clear all values.
      document.querySelector('#obj-length-feet').value = '';
      document.querySelector('#obj-length-inches').value = '';
      document.querySelector('#obj-width-feet').value = '';
      document.querySelector('#obj-width-inches').value = '';

    // LENGTH
    } else if (e.target.classList.contains('length')) {
      // Remove-length logic.
      if (tracker.legend.id === 'delete') {
        return e.target.remove();
      }

      tracker.lengthMoving = !tracker.lengthMoving;

      if (tracker.lengthMoving) {
        tracker.movingEl = e.target;
      } else {
        tracker.movingEl = '';
      }

    // OBJECT
    } else if (e.target.classList.contains('object')) {
      // Remove-object logic.
      if (tracker.legend.id === 'delete') {
        return e.target.remove();
      }

      tracker.objectMoving = !tracker.objectMoving;

      if (tracker.objectMoving) {
        tracker.movingObj = e.target;
      } else {
        tracker.movingObj = '';
      }
    }

    e.stopPropagation();
  };
  document.body.addEventListener('click', tracker.listeners.click);

  //////////////////////
  // CREATE THE BOARD //
  //////////////////////

  var row = 1;
  var col = 1;
  var grid = document.querySelector('.grid');

  for (var i = 0; i < 6400; i++) {
    var square = document.createElement('div');
    square.className = 'square';

    // House.
    if (col > 12 && col < 73 && row < 6) square.classList.add('house', 'structure');

    // Chimney.
    if (col > 40 && col < 45 && row > 5 && row < 9) square.classList.add('house', 'structure');

    // Garage.
    if (col < 62 && row > 67) square.classList.add('garage', 'structure');

    // Neighbor's yard.
    if (col < 13 && row < 6) square.classList.add('neighbor', 'structure');
    if (col < 8 && row > 5 && row < 68) square.classList.add('neighbor', 'structure');

    // Grass.
    if (col > 72 & row < 68) square.classList.add('grass', 'structure');

    square.classList.add('row' + row);
    square.classList.add('col' + col);
    square.dataset.row = row;
    square.dataset.col = col;

    col++;
    if (col === 81) {
      col = 1;
      row++;
    }

    grid.appendChild(square);
  }

  // Process the few angled-grass pieces.
  (function processGrassAngles() {
    // Angles
    var rows = [67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57];
    var cols = [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72];

    for (var i = 0; i < rows.length; i++) {
      var angle = document.querySelector('.row' + rows[i] + '.col' + cols[i]);
      angle.classList.add('angle', 'structure');
    }
  })();

  // Fill angle-grass section.
  (function angleGrassSection() {
    var row = 58;
    var col = [72];
    var times = 10;

    for (i = 0; i < col.length; i++) {
      var sqr = document.querySelector('.row' + row + '.col' + col[i]);
      sqr.classList.add('grass', 'structure');

      if (i === col.length - 1) {
        col.push(col[i] - 1);
        row++;
        i = -1;
        times--;
      }

      if (times === 0) break;
    }
  })();

  // Default radio button value.
  document.querySelector('input[name="direction"]').checked = true;

  saveLayout();
}

var demoHTML = {
  cursor: [
    '<div class="white-space">',
    'typer(<span class="yellow">\'.someClass\'</span>, ',
    '<span class="purple">100</span>)</div>'
  ].join(''),
  line: [
    '<div class="white-space">  .cursor({<span ',
    'class="highlight block">block: <span class="purple">true</span></span>,',
    ' <span class="highlight blink">blink: <span class="yellow">\'hard\'',
    '</span></span>})</div>'
  ].join(''),
  continue: [
    '<div class="white-space">  .line(<span class="yellow">',
    '\'Typer.js is pure JS awesomeness!\'</span>)</div>',
    '<div class="white-space">  .back(<span class="yellow">\'empty\'</span>)</div>'
  ].join(''),
  emit: [
    '<div class="white-space">typer(<span class="yellow">\'',
    '.someClass\'</span>, <span class="purple">100</span>)</div>',
    '<div class="white-space">  .cursor({block: <span class="purple">true</span>,',
    ' blink: <span class="yellow">\'hard\'</span>})</div>',
    '<div class="white-space">  ',
    '.line(<span class="yellow">\'Typer.js rulez!\'</span>)</div>'
  ].join(''),
  empty: [
    '<div class="white-space">typer(<span class="yellow">\'.someClass\'</span>, ',
    '<span class="purple">100</span>)</div><div class="white-space">  ',
    '.cursor({block: <span class="purple">true</span>, blink: <span class="yellow">',
    '\'hard\'</span>})</div><div class="white-space">  .line(<span class="yellow">',
    '\'Typer.js rulez!\'</span>)</div><div class="white-space">  ',
    '.listen(<span class="yellow">\'boom\'</span>, <span class="yellow">',
    '\'.anotherClass\'</span>)</div>'
  ].join(''),
  run: '<div class="white-space">  .empty()</div>',
  end: [
    '<div class="white-space">  .run(<span class="aqua italic">function</span>',
    '(<span class="orange italic">el</span>) {<br>    <span class="gray italic">',
    '// el = the parent element Typer is typing in.</span><br>    el.',
    '<span class="aqua">style</span>.<span class="aqua">backgroundColor</span> ',
    '<span class="pink">=</span> <span class="yellow">\'#00C28C\'</span>;<br>  })</div>'
  ].join('')
};

// http://qnimate.com/asymmetric-encryption-using-web-cryptography-api/

// function doEncryptions() {
//   var private_key_object = null;
//   var public_key_object = null;

//   var promise_key = null;

//   var encrypted_data = null;
//   var encrypt_promise = null;

//   var data = "QNimate";

//   var decrypt_promise = null;
//   var decrypted_data = null;

//   var crypto = window.crypto || window.msCrypto;
//   var vector = crypto.getRandomValues(new Uint8Array(16));

//   function convertStringToArrayBufferView(str) {
//     var bytes = new Uint8Array(str.length);

//     for (var iii = 0; iii < str.length; iii++) {
//       bytes[iii] = str.charCodeAt(iii);
//     }

//     return bytes;
//   }

//   function convertArrayBufferViewtoString(buffer) {
//     var str = "";
//     for (var iii = 0; iii < buffer.byteLength; iii++) {
//       str += String.fromCharCode(buffer[iii]);
//     }

//     return str;
//   }

//   function encrypt_data() {
//     encrypt_promise = crypto.subtle.encrypt({name: "RSA-OAEP", iv: vector}, public_key_object, convertStringToArrayBufferView(data));

//     encrypt_promise.then(
//       function(result) {
//         encrypted_data = new Uint8Array(result);
//         decrypt_data();
//       },
//       function(e) {
//         console.log(e.message);
//       }
//     );
//   }

//   function decrypt_data() {
//     decrypt_promise = crypto.subtle.decrypt({name: "RSA-OAEP", iv: vector}, private_key_object, encrypted_data);

//     decrypt_promise.then(
//       function(result){
//         decrypted_data = new Uint8Array(result);
//         console.log(convertArrayBufferViewtoString(decrypted_data));
//       },
//       function(e){
//         console.log(e.message);
//       }
//     );
//   }

//   promise_key = crypto.subtle.generateKey({
//       name: "RSA-OAEP",
//       modulusLength: 2048,
//       publicExponent: new Uint8Array([0x01, 0x00, 0x01]),
//       hash: {name: "SHA-256"}
//     }, false, ["encrypt", "decrypt"]);

//   promise_key.then(function(key){
//     private_key_object = key.privateKey;
//     public_key_object = key.publicKey;

//     encrypt_data();
//   });

//   promise_key.catch = function(e){
//     console.log(e.message);
//   }
// }

var galleryPhotos = [
  {image: '/images/imageGallery/A_212_Hour_Exposure_of_Orion-min.jpg', credits: 'Example Credits - Orion'}, // eslint-disable-line
  {image: '/images/imageGallery/A_Heart_Shaped_Lenticular_Cloud-min.jpg', credits: 'Heart-shaped lenticular cloud'}, // eslint-disable-line
  {image: '/images/imageGallery/A_Starry_Night_of_Iceland-min.jpg', credits: 'Location: Iceland'},
  {image: '/images/imageGallery/An_Unexpected_Rocket_Plume_over_San_Francisco-min.jpg', credits: 'UFO???'}, // eslint-disable-line
  {image: '/images/imageGallery/Atlas_V_Rising-min.jpg', credits: 'Blast off!'},
  {image: '/images/imageGallery/Aurora_over_Clouds-min.jpg', credits: 'Aurora in the clouds'},
  {image: '/images/imageGallery/Barred_Spiral_Galaxy_NGC_1300-min.jpg', credits: 'Our universe is awesome'}, // eslint-disable-line
  {image: '/images/imageGallery/Centaurus_A-min.jpg', credits: 'Centaurus'},
  {image: '/images/imageGallery/Charon_Moon_of_Pluto-min.jpg', credits: 'Charon: one of pluto\'s moons'}, // eslint-disable-line
  {image: '/images/imageGallery/Earth_and_Milky_Way_from_Space-min.jpg'},
  {image: '/images/imageGallery/Earthrise-min.jpg'},
  {image: '/images/imageGallery/Find_the_Man_in_the_Moon-min.jpg'},
  {image: '/images/imageGallery/Hitomi_Launches-min.jpg'},
  {image: '/images/imageGallery/Icelandic_Legends_and_Aurora-min.jpg'},
  {image: '/images/imageGallery/In_the_Center_of_Spiral_Galaxy_NGC_3521-min.jpg'},
  {image: '/images/imageGallery/Kenya_Morning_Moon__Planets_and_Taurid-min.jpg'},
  {image: '/images/imageGallery/M31_The_Andromeda_Galaxy-min.jpg'},
  {image: '/images/imageGallery/Mammatus_Clouds_Over_Saskatchewan-min.jpg'},
  {image: '/images/imageGallery/Milky_Way_over_the_Pinnacles_in_Australia-min.jpg'},
  {image: '/images/imageGallery/The_Sombrero_Galaxy_in_Infrared-min.jpg'}
];

function linksDisappear($el, parentEl, type, className) {
  var disappears;
  var vanish;

  // The `wrapify` function found in `wrapify.js`.
  wrapify($(parentEl)[0], type, className);

  disappears = $el.find('.disappear').toArray();
  disappears.map(function(el) {
    el.style.transition = 'opacity .4s';
    el.style.opacity = '1';
  });

  vanish = setInterval(function() {
    var i = app.randomNum(0, disappears.length - 1);

    disappears[i].style.opacity = '0';
    disappears.splice(i, 1);

    if (!disappears.length) {
      clearInterval(vanish);

      $('#menu')
        .addClass('disappear')
        .on('transitionend', function(e) {
          if (e.target.id === 'menu') {
            $('#menu').off('transitionend');
            $body.trigger('menuAnimationComplete');
          }
        });
    }
  }, 50);
}

var projectData = [
  {
    name: 'Typer.js',
    description: 'Automated typing library with sexy syntax and diddly dependencies. JavaScript awesomeness at its finest.', // eslint-disable-line
    background: '/images/backgrounds/projects/keyboard.jpg',
    github: 'https://github.com/qodesmith/typer',
    demo: 'TyperDemoView'
  },
  {
    name: 'Thing To HTML',
    description: 'Convert JavaScript objects and arrays to a collapsible HTML heirarchy!',
    background: '/images/backgrounds/projects/thing.jpg',
    github: 'https://github.com/qodesmith/thing-to-html',
    demo: 'ThingDemoView'
  },
  {
    name: 'Time Calculator',
    description: 'A sexy calculator for adding & subtracting time.',
    background: '/images/backgrounds/projects/casio.jpg',
    github: 'https://github.com/qodesmith/time-calculator',
    demo: 'TimeCalcDemoView'
  },
  {
    name: 'JAC Sound Factory',
    description: 'An MPC-style 16-pad sound sequencer with multiple banks of sounds. Prepare to laugh and be amazed.', // eslint-disable-line
    background: '/images/backgrounds/projects/mpc.jpg',
    github: 'https://github.com/qodesmith/JAC-Sound-Factory',
    demo: 'http://jac-sound-factory.herokuapp.com/',
    external: true
  },
  {
    name: 'Deck Grid',
    description: 'Interactive graph-paper looking layout of my backyard to help me design a wooden deck.', // eslint-disable-line
    background: '/images/backgrounds/projects/deck.jpg',
    github: 'https://github.com/qodesmith/deck-grid',
    demo: 'DeckGridDemoView'
  },
  {
    name: 'Fullpage Background Gallery',
    description: 'Smooth fullpage background gallery for your website with randomization feature.',
    background: '/images/backgrounds/projects/5ptz.jpg',
    github: 'https://github.com/qodesmith/background-image-gallery',
    demo: 'BGGalleryDemoView'
  }
];

function thingExample() {

  /**********************/
  /****   EXAMPLES   ****/
  /**********************/


  var myObject = {
    string: 'This is a string.',
    boolean: true,
    null: null,
    undefined: undefined,
    numbers: 1234567890,
    url: 'https://github.com/qodesmith',
    email: 'someone@example.com',
    array: ['one', 'two', 'three'],
    object: {property: 'value'},
    singleLineFxn: function() { return 'I am a single-line function!' },
    multiLineFxn: function() {
      var x = ['Notice', 'how', 'your', 'indentation', 'is', 'preserved?'];

      x.map(function(word) {
        console.log(word);
      });

      return 'Awesome';
    },
    arrayOfObjects: [
      {arrays: 'can', be: 'nested'},
      {as: 'deep', az: ['you', {would: 'like'}]},
      {this: {reminds: {me: {of: 'Inception'}}}}
    ]
  };

  var myArray = [
    'Various types have CSS styling for syntax highlighting.',
    'Functions are the only types not syntax highlighted',
    function singleLine() { return 'This is a single line function.' },
    function multiLine() {
      var line1 = 'This is a multi-line function ';
      var line2 = 'in an array.';
      return line1 + line2;
    },
    {numbers: 1234567890, moreNumbers: 0.987654321},
    {this: {obj: {can: {be: {nested: ['like', 'crazy', {deep: undefined}]}}}}},
    ['array', ['within', 'arrays'], ['within', ['more', 'arrays']]]
  ];

  var selection = myObject;
  var timer;

  // Start with the example as an object.
  thingToHTML({
    thing: selection,
    container: '#thing-container',
    button: true,
    theme: 'dark'
  });

  /**************************************/
  /****   EXAMPLE-SPECIFIC BUTTONS   ****/
  /**************************************/

  var thing = document.querySelector('.thing');
  var kill = new Event('killThings');

  // Theme event listeners.
  document.querySelector('#theme-dark').addEventListener('click', darkTheme);
  document.querySelector('#theme-light').addEventListener('click', lightTheme);

  // Object / Array event listeners.
  document.querySelector('#example-object').addEventListener('click', useThing);
  document.querySelector('#example-array').addEventListener('click', useThing);

  // Remove all the example listeners.
  document.body.addEventListener('killThingExample', removeExample);

  function darkTheme() {
    thing.classList.remove('light');
    thing.classList.add('dark');
  }

  function lightTheme() {
    thing.classList.remove('dark');
    thing.classList.add('light');
  }

  function useThing(e) {
    var name = e.target.textContent;
    if (name === 'OBJECT' && selection === myObject) return;
    if (name === 'ARRAY' && selection === myArray) return;

    document.body.dispatchEvent(kill);
    document.querySelector('#thing-container').innerHTML = '';

    thingToHTML({
      thing: name === 'OBJECT' ? myObject : myArray,
      container: '#thing-container',
      button: true
    });

    name === 'OBJECT' ? selection = myObject : selection = myArray;
  }

  function removeExample(e) {
    document.body.removeEventListener(e.type, removeExample);

    document.querySelector('#theme-dark').removeEventListener('click', darkTheme);
    document.querySelector('#theme-light').removeEventListener('click', lightTheme);

    document.querySelector('#example-object').removeEventListener('click', useThing);
    document.querySelector('#example-array').removeEventListener('click', useThing);

    document.body.dispatchEvent(kill);
  }
}

// Various 404 messages using Typer.
var f0f = [
  // Abyss.
  function abyss() {
    typer('.content')
      .run(function(el) {
        $(el)
          .parent()
          .addClass('abyss');
      })
      .cursor({block: true, blink: 'hard'})
      .line("So you're sitting there,")
      .pause()
      .continue(' trying to get to a web page.')
      .pause()
      .line()
      .line()
      .pause()
      .continue("And it just doesn't seem to be working.")
      .continue('..', 500)
      .pause()
      .line('You think to yourself,')
      .pause()
      .continue([' how', ' did', ' this', ' happen?'], 350)
      .pause(1000)
      .line('Or more importantly...')
      .pause(1000)
      .continue([' WHY'])
      .pause(400)
      .continue([' did', ' this', ' happen?'], 333)
      .pause(2000)
      .line()
      .line('It dawns on you that the internet is this vast abyss')
      .continue(" that you've been naively staring into as if there")
      .continue(' were some light at the end of the tunnel.')
      .line()
      .line()
      .pause(1000)
      .continue('And therein lies the problem.')
      .pause(1000)
      .line(["It's", ' an', ' <em>abyss</em>'], 500)
      .pause()
      .continue(', not a tunnel.')
      .pause(3000)
      .line()
      .line('What were we doing again?');
  },

  // Kalam.
  function kalam() {
    typer('.content')
      .run(function(el) {
        $(el).parent()
          .addClass('kalam')
          .prepend($('<h1>The Kalam Cosmological Argument</h1>'));
      })
      .pause(1000)
      .line('Whatever begins to exist <span style="color: lightgreen">has a cause.</span>')
      .pause(750)
      .line('The universe began to exist.')
      .pause(750)
      .line('Therefore, the universe <span style="color: lightgreen">has a cause.</span>');
  },

  // Apparently.
  function apparently() {
    var host  = window.location.hostname;
    var path  = window.location.pathname;
    var query = window.location.search;

    var url = [
      '<span class="url">',
      host,
      '<span style="color: yellow">',
      path,
      '</span></span>',
      ' isn\'t a thing.'
    ].join('');

    if (query) path += query;

    typer('.content', 40)
      .cursor({block: true})
      .run(function(el) {
        $(el)
          .addClass('apparently')
          .parent()
          .addClass('apparently');
      })
      .line('Apparently,')
      .pause()
      .line(url)
      .pause(6000)
      .line()
      .line('I believe that means you should enter a new url.')
      .pause(5000)
      .line()
      .line(' How \'bout you just click the "HOME PAGE" button?')
      .run(function() {
        var times = 0;
        var homeHighlight = setInterval(function() {
          if (times === 6) {
            clearInterval(homeHighlight);
            return;
          }

          $('.home').toggleClass('highlight');
          times++;
        }, 500);
      });
  }
];

function typeMenu(selector) {
  typer(selector, 15)
    .cursor({block: true, blink: 'hard'})
    .line()
    .pause()
    .continue('<span>{</span>')
    .line('    about: "<span class="link" data-view="AboutView">me</span>",')
    .line('     blog: "<span class="link" data-view="BlogView">posts</span>",')
    .line('  awesome: "<span class="link" data-view="ProjectsView">projects</span>",')
    .line('      get: "<span class="link" data-view="ContactView">in contact</span>"')
    .line('<span>}</span>')
    .pause(200)
    .run(function(el) {
      $(el)
        .find('.typer')
        .addClass('drop');
    });
}

/* eslint max-len: "off" */
var typerDemo = {
  init: function() {
    this.$explanation = $('.explanation .container');
    this.$example = $('.example .container');
    this.killTyper = new Event('killTyper');
  },
  next: function(method) {
    document.body.dispatchEvent(this.killTyper);
    $('.progress-item.active').removeClass('active');
    $('[data-item=' + method + ']').addClass('active');
    this[method]();
  },
  intro: function() {
    var _this = this;

    // 1. TYPE OUT THE MATRIX SCENE.
    typer('.matrix')
      .cursor({block: true, blink: 'hard'})
      .line('Follow the white rabbit.')
      .pause(1400)
      .empty()
      .continue(['Knock', ' knock,'], 300)
      .continue([' Neo.'], 300)
      .run(function(el) {
        document.body.dispatchEvent(new Event('killTyper'));

        setTimeout(function() {
          matrixToSpans(el);
        }, 1000);
      });

    // 2. CONVERT EACH LETTER TO A SPAN.
    function matrixToSpans(el) {
      var $currentTyper = $(el).find('.typer');
      var text = $currentTyper.text();

      $currentTyper.html('');

      text.split('').map(function(letter) {
        var $span = $('<span class="white-space">');

        $span.text(letter);
        $currentTyper.append($span);
      });

      customTransitions($currentTyper);
    }

    // 3. APPLY A CUSTOM TRANSITION TO EACH SPAN.
    function customTransitions($typer) {
      var $spans = $typer.find('span');
      var largestNum = 0;

      [].map.call($spans, function(span) {

        var xfmTime = app.randomNum(250, 350) / 100;
        var topTime = app.randomNum(100, 150) / 100;
        var leftTime = app.randomNum(150, 250) / 100;


        // This value will be needed later for
        // the setTimeout time to begin the demo.
        if (topTime > largestNum) largestNum = topTime;

        // Easings copied from `blowUpMenu.js`.
        var xfm = ['transform ', xfmTime, 's cubic-bezier(.25,.46,0,1),'].join('');
        var top = ['top ', topTime, 's cubic-bezier(.9,-.99,1,.96),'].join('');
        var left = ['left ', leftTime, 's cubic-bezier(0,0,.5,1)'].join('');
        var transition = [xfm, top, left].join('');

        span.style.transition = transition;
      });

      setTimeout(function() {
        leftAndTransform($spans, largestNum);
      }, 50);
    }

    // 4. EXPLOSION: APPLY CUSTOM LEFT & TRANSFORM STYLES TO EACH SPAN.
    function leftAndTransform($spans, largestNum) {
      var degrees = app.randomNum(140, 360);
      degrees = degrees % 2 ? degrees * -1 : degrees;

      // Get rid of the cursor.
      $('.typer')
        .attr('style', 'position: relative')
        .removeClass('typer');

      [].map.call($spans, function(span) {
        span.style.left = [app.randomNum(-20, 20), 'vw'].join('');
        span.style.transform = ['rotate(', degrees, 'deg)'].join('');
        span.style.top = '60vh';
      });

      setTimeout(function() {
        removeMatrixShowDemo();
      }, largestNum * 1000 + 500);
    }

    // 5. START DEMO: REMOVE THE MATRIX ELEMENT, SHOW THE DEMO ELEMENTS.
    function removeMatrixShowDemo() {
      $('.matrix').remove();
      $('.typer-panes, .progress').addClass('show');

      setTimeout(function() {
        _this.typerJs();
      }, 1000);
    }
  },
  resetPanes: function(html) {
    this.$explanation.html('');
    this.$example.html(html ? html : '');
  },
  typerJs: function() {
    this.resetPanes();

    typer('.explanation .container')
      .emit('typer-demo-started') // Needed for `typerDemoView.js`.
      .line('Welcome to the <span class="lime" style="font-weight: 500">Typer.js</span> demonstration!')
      .pause(1200)
      .back(14, 40)
      .continue('tutorial.')
      .pause(1000)
      .back(9, 50)
      .continue('explanation-of-all-the-methods!')
      .pause(1200)
      .back('all', 10)
      .continue("<span class='lime'>Typer</span> is a JavaScript <em>typing</em> library")
      .line('that will wow all your friends and make you famous.')
      .pause(1000)
      .empty()
      .continue("Let's get started.")
      .pause(1000)
      .back('all', 10)
      .continue('<span class="lime">Typer</span> has <strong class="underline"><em>no dependencies</em></strong>.')
      .pause()
      .line('Slap it on your page and go.')
      .pause(1000)
      .empty()
      .continue("<span class='lime'>Typer</span> itself takes two arguments.")
      .pause()
      .line('The 1st argument is any valid CSS selector:')
      .emit('typer-1')
      .listen('typer-2')
      .empty()
      .continue('The 2nd argument is a speed - milliseconds / character typed:')
      .emit('typer-3')
      .listen('typer-4')
      .pause(1500)
      .empty()
      .continue('The speed is optional.')
      .pause()
      .line('If no speed is given, <span class="lime">Typer</span> will default to a speed of 70.')
      .pause(1500)
      .run(function() {
        typerDemo.next('cursor');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('typer-1')
      .continue('typer(<span class="yellow">\'.someClass\'</span>,')
      .pause(1500)
      .back(-6, 10)
      .continue('<span class="yellow">\'#some-id\'</span>')
      .pause(1500)
      .back(-6, 10)
      .continue('<span class="yellow">\'.class1 .class2\'</span>')
      .pause(1500)
      .back(-6, 10)
      .continue('<span class="yellow">\'#so-on.andSoForth\'</span>')
      .pause(1500)
      .back(-6, 10)
      .continue('<span class="yellow">\'.someClass\'</span>')
      .emit('typer-2')
      .listen('typer-3')
      .continue(', <span class="purple">100</span>)')
      .emit('typer-4');
  },
  cursor: function() {
    this.resetPanes(demoHTML.cursor);

    typer('.explanation .container')
      .empty()
      .pause()
      .continue('Now for our first method:')
      .pause(1000)
      .continue([' <span class="lime">cursor</span>!'])
      .pause(1300)
      .back('all', 10)
      .continue('<span class="lime">Typer</span> shows a cursor by default just like real typing.')
      .pause(1000)
      .line(['How exciting!'])
      .pause()
      .empty()
      .continue("While the <span class='lime'>cursor</span> method is completely <em>optional</em>,")
      .line('(<span class="lime">Typer</span> will use the default settings if it\'s not called),')
      .line("it's suggested that if used it be called first:")
      .emit('cursor-1')
      .listen('cursor-2')
      .empty()
      .continue('The <span class="lime">cursor</span> method can take a few options.')
      .pause(1500)
      .back('all', 10)
      .continue('Option 1:')
      .pause()
      .continue(' no cursor at all!')
      .pause(1000)
      .line('This is a single argument passed to <span class="lime">cursor</span>: <span class="purple mono">false</span>.')
      .emit('cursor-3')
      .listen('cursor-4')
      .line("If you don't want a cursor at all,")
      .pause()
      .continue(' pass in <span class="purple mono">false</span>.')
      .pause(1500)
      .empty()
      .continue('Option 2: an object with some properties...')
      .emit('cursor-5')
      .listen('cursor-6')
      .back('all', 10)
      .continue('<strong>block</strong>')
      .pause()
      .line('By default, the cursor is the standard "line"')
      .pause(750)
      .continue([' &#8594;'])
      .pause(1500)
      .back('all', 10)
      .continue('By using <span class="mono">block: <span class="purple mono">true</span></span> below, we get the old-school style block:')
      .emit('cursor-7')
      .listen('cursor-8')
      .empty()
      .continue('<strong>blink</strong>')
      .line('This cursor has a soft blinking motion')
      .pause()
      .continue([' &#8594;'])
      .pause(1500)
      .back('all', 10)
      .continue('The cursor below has a binary (on/off) blinking motion:')
      .emit('cursor-9')
      .listen('cursor-10')
      .empty()
      .continue('<strong>color</strong>')
      .line('You can set the color of the cursor.')
      .run(function() {
        document.querySelector('.highlight.color').classList.add('show-border');
      })
      .pause(1000)
      .back('all', 10)
      .continue('If no color is specified, the cursor will default')
      .line('to the text color of the parent element.')
      .pause(1000)
      .empty()
      .continue(['<strong>color</strong'])
      .line('Feed it a named color, #hex, etc.')
      .run(function() {
        document.querySelector('.highlight.color').classList.remove('show-border');
      })
      .line('Any valid css color will do:')
      .emit('cursor-11')
      .listen('cursor-12')
      .empty()
      .continue('If you omit the cursor object <em>or</em> method altogether,')
      .line('the following default values will be used:')
      .pause()
      .line('<span class="mono">{block: <span class="purple mono">false</span>, blink: <span class="yellow">\'soft\'</span>}</span>')
      .line('and the color will be set to the parent elements\' text color.')
      .pause(1500)
      .emit('cursor-13')
      .listen('line-1')
      .run(function() {
        typerDemo.next('line');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('cursor-1')
      .continue('  .cursor()')
      .pause(1000)
      .emit('cursor-2')
      .listen('cursor-3')
      .back(1)
      .continue('<span class="purple">false</span>)')
      .pause(1000)
      .emit('cursor-4')
      .listen('cursor-5')
      .back(6, 10)
      .continue('{<span class="highlight block">block: <span class="purple">true</span></span>, <span class="highlight blink">blink: <span class="yellow">\'hard\'</span></span>, <span class="highlight color">color: <span class="yellow">\'red\'</span></span>})')
      .pause(1500)
      .emit('cursor-6')
      .listen('cursor-7')
      .continue(['<span class="arrow-blink lime"> &#8594;</span>'])
      .run(function() {
        var arrow = document.querySelector('.arrow-blink');
        var hl = document.querySelector('.highlight.block');
        hl.classList.add('show-border');

        var times = 0;
        var blink = setInterval(function() {
          if (times % 2) {
            arrow.style.color = '';
          } else {
            arrow.style.color = 'transparent';
          }

          times++;
          if (times === 6) {
            clearInterval(blink);
            var e = new CustomEvent('done-blinking-block');
            document.body.dispatchEvent(e);
            hl.classList.remove('show-border');
          }
        }, 750);
      })
      .listen('done-blinking-block')
      .pause(1000)
      .back(2, 10)
      .emit('cursor-8')
      .listen('cursor-9')
      .continue(['<span class="arrow-blink lime"> &#8594;</span>'])
      .run(function() {
        var arrow = document.querySelector('.arrow-blink');
        var hl = document.querySelector('.highlight.blink');
        hl.classList.add('show-border');

        var times = 0;
        var blink = setInterval(function() {
          if (times % 2) {
            arrow.style.color = '';
          } else {
            arrow.style.color = 'transparent';
          }

          times++;
          if (times === 8) {
            clearInterval(blink);
            var e = new CustomEvent('done-blinking-blink');
            document.body.dispatchEvent(e);
            hl.classList.remove('show-border');
          }
        }, 750);
      })
      .listen('done-blinking-blink')
      .pause(1000)
      .back(2, 10)
      .emit('cursor-10')
      .listen('cursor-11')
      .back(6, 10)
      .continue('<span class="yellow">rgb(255, 0, 0)\'</span>})')
      .pause(1500)
      .back(17, 10)
      .continue('<span class="yellow">hsl(0, 100%, 50%)\'</span>})')
      .pause(1500)
      .back(20, 10)
      .continue('<span class="yellow">#ff0000\'</span>})')
      .pause(1500)
      .emit('cursor-12')
      .listen('cursor-13')
      .back(20, 10)
      .continue('})');
  },
  line: function() {
    var html = [
      demoHTML.cursor,
      demoHTML.line
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line("Now let's <em>really</em> dig in to <span class='lime'>Typer</span>!")
      .pause(1000)
      .back('all', 10)
      .continue('Introducing the <span class="lime">line</span> method:')
      .emit('line-2')
      .listen('line-3')
      .pause(1000)
      .back('all', 10)
      .continue('<span class="lime">line</span> takes 3 possible arguments.')
      .pause()
      .line("Let's look at the first argument.")
      .pause(1000)
      .empty()
      .continue('Giving <span class="lime">line</span> a string results in the string')
      .line('being typed out, character by character at the')
      .line('speed which you gave to <span class="lime">Typer</span> at the start.')
      .pause(1500)
      .empty()
      .continue('You can provide <span class="lime">line</span> a 2nd argument, a number,')
      .line('to specify how fast to type for <em>just that line<em>:')
      .pause()
      .emit('line-4')
      .listen('line-5')
      .pause(1000)
      .empty()
      .continue('The example below, using <span class="purple mono">400</span>, will type ')
      .continue('sloooowly.', 400)
      .pause(1500)
      .back('all', 10)
      .continue(['What', ' if', ' you', ' want', ' to', ' type', ' words', ' out', ' whole?'], 350)
      .pause(1000)
      .line('Simple!')
      .pause()
      .continue(' Give <span class="lime">line</span> an <em>array</em> instead of a string:')
      .emit('line-6')
      .listen('line-7')
      .pause(1500)
      .empty()
      .continue('What if you wanted to use styling?')
      .pause()
      .line('<span class="lime">line</span> will process HTML by default.')
      .line('Check out the code below:')
      .pause()
      .emit('line-8')
      .listen('line-9')
      .pause(1000)
      .empty()
      .continue('The code below will result in a line looking like this:')
      .pause(1000)
      .line(['Typer.js <em>rules!</em>'])
      .pause(3500)
      .back('all', 10)
      .emit('line-10')
      .listen('line-11')
      .pause(1000)
      .continue(['<span style="color: lime">Typer.js</span> <strong>rules</strong>!'])
      .pause(3500)
      .back('all', 10)
      .emit('line-12')
      .listen('line-13')
      .pause(1000)
      .line(['Typer.<br>Types.<br>Div\'s.'])
      .pause(3000)
      .empty()
      .continue('Any valid HTML is fair game for <span class="lime">line</span>.')
      .pause(1000)
      .line('Go nuts.')
      .pause(1500)
      .empty()
      .continue('The 3rd argument for <span class="lime">line</span> is a boolean:')
      .emit('line-14')
      .listen('line-15')
      .pause(2000)
      .empty()
      .continue('Passing in <span class="purple mono">false</span> will tell <span class="lime">line</span> to <em>not</em> process HTML.')
      .pause()
      .line('The code below will result in a line looking like this:')
      .pause(1000)
      .line(['Typer.js <strong>rules</strong>!'], false)
      .pause(3000)
      .empty()
      .continue('By default, <span class="lime">line</span> <em>will</em> process the content as HTML.')
      .pause()
      .line('No need to pass in <span class="purple mono">true</span>.')
      .pause()
      .line('Also, note the 2nd & 3rd arguments are order agnostic:')
      .emit('line-16')
      .listen('line-17')
      .pause(1500)
      .empty()
      .continue('Want another twist?')
      .pause(1000)
      .back('all', 10)
      .continue('If you give <span class="lime">line</span> an object with a selector')
      .line('as the first argument (instead of a string or an array)...')
      .emit('line-18')
      .listen('line-19')
      .pause()
      .back(3)
      .continue(',')
      .line("you're now using the contents of that element to supply <span class='lime'>line</span>")
      .line('with something to type.')
      .pause()
      .continue(' <strong>SEO</strong> anyone?')
      .pause(1000)
      .continue([' ;)'])
      .pause()
      .empty()
      .continue(['Boom.'])
      .pause(1000)
      .back('all', 10)
      .continue('One last thing for <span class="lime">line</span>...')
      .pause(1200)
      .emit('line-20')
      .listen('line-21')
      .pause()
      .back('all', 10)
      .continue('Passing <em>no argument</em> to <span class="lime">line</span> will just create a blank line.')
      .pause()
      .line()
      .line('&#11014; &#11014; &#11014; &#11014; &#11014; &#11014; &#11014; &#11014;')
      .pause(1000)
      .line('Yea, <span class="lime">line</span> can type unicode characters too :)')
      .pause(1500)
      .line('Moving right along...')
      .pause()
      .run(function() {
        typerDemo.next('back');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .emit('line-1')
      .listen('line-2')
      .continue('  .line(<span class="yellow">\'Typer.js rules!\'</span>)')
      .emit('line-3')
      .listen('line-4')
      .back(1)
      .continue(', <span class="purple">400</span>)')
      .emit('line-5')
      .listen('line-6')
      .back(-8, 10)
      .continue('[<span class="yellow">\'Typer.js\'</span>, <span class="yellow">\' rules!\'</span>], <span class="purple">400</span>)')
      .emit('line-7')
      .listen('line-8')
      .back(-8, 10)
      .continue('<span class="yellow">\'Typer.js &lt;em&gt;rules!&lt;/em&gt;\'</span>, <span class="purple">400</span>)')
      .emit('line-9')
      .listen('line-10')
      .back(-8, 10)
      .continue('<span class="yellow">\'&lt;span style="color: lime"&gt;Typer.js&lt;/span&gt; &lt;strong&gt;rules&lt;/strong&gt;!\'</span>, <span class="purple">400</span>)')
      .emit('line-11')
      .listen('line-12')
      .back(-8, 10)
      .continue('<span class="yellow">\'&lt;div&gt;Typer.&lt;/div&gt;&lt;div&gt;Types.&lt;/div&gt;&lt;div&gt;Div\'s.&lt;/div&gt;\'</span>, <span class="purple">400</span>)')
      .emit('line-13')
      .listen('line-14')
      .back(-8, 10)
      .continue('<span class="yellow">\'Typer.js &lt;strong&gt;rules&lt;/strong&gt;!\'</span>, <span class="purple">400</span>, <span class="purple">false</span>)')
      .emit('line-15')
      .listen('line-16')
      .back(11, 10)
      .continue('<span class="purple">false</span>, <span class="purple">400</span>)')
      .emit('line-17')
      .listen('line-18')
      .back(-8, 10)
      .continue('{el: <span class="yellow">\'.anotherClass\'</span>})')
      .emit('line-19')
      .listen('line-20')
      .back(-8, 10)
      .continue(')')
      .emit('line-21');
  },
  back: function() {
    var html = [
      demoHTML.cursor,
      demoHTML.line
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line('Now on to our friend the <span class="lime">back</span> method.')
      .pause(1000)
      .line("As you've been seeing in the demo so far,")
      .line('<span class="lime">back</span> let\'s you "erase" things.')
      .pause(1500)
      .emit('back-1')
      .listen('back-2')
      .pause(1500)
      .empty()
      .continue('So what if we want to "erase" back to "JS" in the line below?')
      .pause()
      .line("1st argument - supply <span class='lime'>back</span> with a number")
      .line('representing how many characters we want to "erase":')
      .emit('back-3')
      .listen('back-4')
      .pause(1500)
      .empty()
      .continue('As you can see, we\'re looking to "backspace" 13 times.')
      .line('The code below will execute on the screen like this:')
      .pause(750)
      .line('Typer.js is pure JS awesomeness!')
      .back(13)
      .pause(2000)
      .empty()
      .continue('Notice how <span class="lime">back</span>\'s <em>speed</em> was the same as the typing speed?')
      .pause()
      .line('Want to change that?')
      .pause()
      .line('2nd argument - another number representing <span class="lime">back</span>\'s <em>speed</em>:')
      .emit('back-5')
      .listen('back-6')
      .pause(2000)
      .empty('Watch how <span class="lime">back</span> excutes <em>much</em> faster now:')
      .pause(1000)
      .continue('Typer.js is pure JS awesomeness!')
      .back(13, 10)
      .pause(1000)
      .line('Super fast!')
      .pause(1000)
      .continue(' And super fly...')
      .pause()
      .empty()
      .continue('<span class="lime">back</span> has a few more tricks up its sleeve.')
      .pause(750)
      .line('What if you wanted to "erase" the whole line?')
      .pause(1000)
      .back('all', 10)
      .continue('It would be a pain, especially for longer lines, to manually count')
      .line('the characters in order to give <span class="lime">back</span> the correct number.')
      .pause(1000)
      .line('<span class="yellow mono">\'all\'</span> to the rescue!')
      .pause()
      .continue(' Observe:')
      .emit('back-7')
      .listen('back-8')
      .pause(1500)
      .empty()
      .continue('<span class="lime">back</span> has another convenient option:')
      .emit('back-9')
      .listen('back-10')
      .pause(1200)
      .empty()
      .continue('Passing in a negative number, in this case <span class="mono"><span class="pink">-</span><span class="purple mono">5</span></span>,')
      .line('is the equivalent to saying <em style="text-decoration: underline">erase all but</em> 5 characters.')
      .pause()
      .line('You can see how this would again be convenient for longer lines.')
      .pause(750)
      .line('In the example below we\'ve also provided the second argument, <span class="purple mono">10</span>, for a speed.')
      .pause(1200)
      .empty()
      .continue('<span class="lime">back</span> has one last option of convenience:')
      .emit('back-11')
      .listen('back-12')
      .pause(1200)
      .empty()
      .continue('This option for <span class="lime">back</span> will empty the line <em>all-at-once</em>.')
      .pause()
      .line('No character-by-character backspacing will occur.')
      .pause()
      .empty()
      .pause()
      .line(['Poof.'])
      .pause(1000)
      .empty()
      .pause()
      .line([' Gone.'])
      .pause(1000)
      .run(function() {
        typerDemo.next('continue');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line(['  .line()'])
      .listen('back-1')
      .back(1)
      .continue('<span class="yellow">\'Typer.js is pure JS awesomeness!\'</span>)')
      .emit('back-2')
      .listen('back-3')
      .line('  .back(<span class="purple">13</span>)')
      .emit('back-4')
      .listen('back-5')
      .back(1)
      .continue(', <span class="purple">10</span>)')
      .emit('back-6')
      .listen('back-7')
      .back(7, 10)
      .continue('<span class="yellow">\'all\'</span>)')
      .emit('back-8')
      .listen('back-9')
      .back(6, 10)
      .continue('<span class="pink">-</span><span class="purple">5</span>, <span class="purple">10</span>)')
      .emit('back-10')
      .listen('back-11')
      .back(7, 10)
      .continue('<span class="yellow">\'empty\'</span>)')
      .emit('back-12');
  },
  continue: function() {
    var html = [
      demoHTML.cursor,
      demoHTML.line,
      demoHTML.continue
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line('The next method to discuss is <span class="lime">continue</span>.')
      .pause(1500)
      .back('all', 10)
      .continue('<span class="lime">continue</span> has all the same options & arguments as <span class="lime">line</span>.')
      .pause()
      .line('The major difference is that <span class="lime">continue</span> <em>continues</em> typing <em>on the same line</em>.')
      .pause(1000)
      .line(['<span style="font-size: 0.7em">(mind blown)</span>'])
      .pause()
      .run(function() {
        typerDemo.next('pause');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line();
  },
  pause: function() {
    var html = [
      demoHTML.cursor,
      demoHTML.line,
      demoHTML.continue
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line('The best way to show continue is to use it in combination with our next method:')
      .pause()
      .line(['<span class="lime">pause</span>'])
      .pause(1200)
      .empty()
      .continue('Check out the code below...')
      .pause()
      .emit('pause-1')
      .listen('pause-2')
      .pause(2000)
      .back('all', 10)
      .continue("First we'll type a word,")
      .line('then <em>pause</em> for 2 seconds,')
      .line('and lastly type the final word.')
      .pause(2000)
      .line('Got it?')
      .pause(1200)
      .empty()
      .continue('So it would execute on the screen like this:')
      .pause(1000)
      .line('Typer.js')
      .pause(1000)
      .continue(' rules!')
      .pause(1500)
      .line('Cool, huh?')
      .pause(1500)
      .empty()
      .continue('As for <span class="lime">pause</span>, it takes a single argument, a number in milliseconds.')
      .pause(1000)
      .line('<span class="lime">Typer</span> will wait that long before continuing with any further operations.')
      .pause()
      .line("If you don't supply any argument to <span class='lime'>pause</span>, the default is <span class='purple mono'>500</span>.")
      .pause(2000)
      .emit('pause-3')
      .listen('pause-4')
      .pause(1000)
      .run(function() {
        typerDemo.next('emit');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('pause-1')
      .empty()
      .continue('typer(<span class="yellow">\'.someClass\'</span>, <span class="purple">100</span>)')
      .line('  .cursor({block: <span class="purple">true</span>, blink: <span class="yellow">\'hard\'</span>})')
      .line('  .line(<span class="yellow">\'Typer.js\'</span>)')
      .continue('<br>  .pause(<span class="purple">2000</span>)')
      .continue('<br>  .continue(<span class="yellow">\' rules!\'</span>)')
      .emit('pause-2')
      .listen('pause-3')
      .back(-8, 10)
      .continue('<span class="yellow">\'Typer.js rulez!\'</span>)')
      .emit('pause-4');
  },
  emit: function() {
    this.resetPanes(demoHTML.emit);

    typer('.explanation .container')
      .line("We've covered all the <em>typing</em> methods of <span class='lime'>Typer</span>,")
      .line('but there are a few handy methods left that increase awesomness.')
      .pause(1300)
      .empty()
      .continue("Let's talk about events.")
      .pause(1000)
      .back('all', 10)
      .continue('"Events" you say?')
      .pause()
      .line(' Yes. Those things that happen all over the DOM with JavaScript.')
      .pause(1000)
      .line('Turns out, with <span class="lime">Typer</span> we can both <em>emit</em> and <em>listen</em> to events.')
      .pause(1300)
      .empty()
      .continue("Let's start with the <span class='lime'>emit</span> method.")
      .emit('emit-1')
      .listen('emit-2')
      .pause(1500)
      .line('Feeding <span class="lime">emit</span> a string will create an event with that name')
      .line('and immediately fire it off the <span class="mono">&lt;<span class="pink">body</span>&gt;</span>.')
      .pause(1000)
      .empty()
      .continue(['<span class="yellow">\'boom\'</span>'])
      .pause()
      .empty()
      .pause()
      .continue('What if you want to fire an event off a specific element?')
      .pause()
      .line('<span class="lime">emit</span> has you covered.')
      .pause()
      .line('Just pass in a CSS selector as the 2nd argument:')
      .emit('emit-3')
      .listen('emit-4')
      .pause(2000)
      .run(function() {
        typerDemo.next('listen');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('emit-1')
      .continue('  .emit(<span class="yellow">\'boom\'</span>)')
      .emit('emit-2')
      .listen('emit-3')
      .back(1, 10)
      .continue(', <span class="yellow">\'.anotherClass\'</span>)')
      .emit('emit-4');
  },
  listen: function() {
    var html = [
      demoHTML.emit,
      demoHTML.listen
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .pause()
      .emit('listen-1')
      .listen('listen-2')
      .line('Now we move on to the <span class="lime">listen</span> method.')
      .pause()
      .line('As you may have noticed,')
      .pause()
      .continue(' this demonstration page has')
      .line('two <span class="lime">Typer</span> functions running at the same time.')
      .pause()
      .line('One for the narration up top and one for the code examples below.')
      .pause(1300)
      .empty()
      .continue("What you're seeing is the two <span class='lime'>Typer</span> functions")
      .line('"speak" to each other via the <span class="lime">emit</span> and <span class="lime">listen</span> methods.')
      .pause()
      .line('That\'s what makes the two go "back and forth" during this demo.')
      .pause(1500)
      .empty()
      .continue('Giving <span class="lime">listen</span> a string causes <span class="lime">Typer</span> to stop,')
      .line('waiting for that event to fire from the <span class="mono">&lt;<span class="pink">body</span>&gt;</span>.')
      .pause()
      .line('<span class="lime">Typer</span> won\'t do anything else until that specific event fires.')
      .pause(1500)
      .empty()
      .continue('As with the <span class="lime">emit</span> method,')
      .line('the arguments are the same for <span class="lime">listen:</span>')
      .emit('listen-3')
      .listen('listen-4')
      .pause(1000)
      .line('That\'s how you listen for an event on a specific DOM element.')
      .pause()
      .line('Nifty, huh?')
      .pause(1000)
      .run(function() {
        typerDemo.next('empty');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line(['  .emit(<span class="yellow">\'boom\'</span>, <span class="yellow">\'.anotherClass\'</span>)'])
      .listen('listen-1')
      .back(-3, 10)
      .continue('listen(<span class="yellow">\'boom\'</span>)')
      .emit('listen-2')
      .listen('listen-3')
      .back(1, 10)
      .continue(', <span class="yellow">\'.anotherClass\'</span>)')
      .emit('listen-4');
  },
  empty: function() {

    this.resetPanes(demoHTML.empty);

    typer('.explanation .container')
      .line('Now we come to the <span class="lime">empty</span> method.')
      .pause()
      .line('<span class="lime">empty</span> will <em>empty out</em> the DOM element you fed <span class="lime">Typer</span> in the beginning.')
      .pause()
      .line('The element is cleared of content immediately (no backspacing),')
      .line('and you\'re started again with a new line.')
      .emit('empty-1')
      .listen('empty-2')
      .pause(1300)
      .empty()
      .continue('There are no arguments for <span class="lime">empty</span>.')
      .pause()
      .line('It just does what it says.')
      .pause(1300)
      .run(function() {
        typerDemo.next('run');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('empty-1')
      .continue('  .empty()')
      .emit('empty-2');
  },
  run: function() {
    var html = [
      demoHTML.empty,
      demoHTML.run
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line('Our last two methods have somewhat similar functionality.')
      .pause(1000)
      .back('all', 10)
      .continue('The <span class="lime">run</span> method is a handy tool allowing you to run a function.')
      .emit('run-1')
      .listen('run-2')
      .pause(1500)
      .line('As you can see, the only argument to <span class="lime">run</span> is a user-provided function.')
      .pause(1000)
      .line('But there\'s one nifty trick up <span class="lime">run</span>\'s sleeve...')
      .pause()
      .emit('run-3')
      .listen('run-4')
      .pause(1000)
      .empty()
      .continue('Passing in a single argument to the function gives you')
      .line('access to the parent element that <span class="lime">Typer</span> is typing in')
      .line('(the one provided to <span class="lime">Typer</span> in the beginning).')
      .pause(1000)
      .line('Name that argument what you want, but it will represent that parent element.')
      .pause(1500)
      .empty()
      .continue('As you can see in the demo below, we\'ve used <span class="lime">run</span>')
      .line('to change the background color of the parent element below.')
      .pause(1500)
      .empty()
      .emit('run-5')
      .listen('run-6')
      .pause(1000)
      .continue('Of course, <span class="lime">run</span> is not limited to manipulating the parent element.')
      .pause()
      .line('This demo uses <span class="lime">run</span> for a number of things such as')
      .line('the timers in the progress section on this page.')
      .pause(1350)
      .continue([' Go nuts.'])
      .pause()
      .run(function() {
        typerDemo.next('end');
      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('run-1')
      .continue('  .run(<span class="aqua italic">function</span>() {')
      .continue('<br>    <span class="gray italic">// run some code</span>')
      .continue('<br>  })')
      .emit('run-2')
      .listen('run-3')
      .back(-16, 10)
      .continue('<span class="orange italic">el</span>) ' + '{')
      .continue('<br>    <span class="gray italic">// el = the parent element Typer is typing in.</span>')
      .continue('<br>    el.<span class="aqua">style</span>.<span class="aqua">backgroundColor</span> <span class="pink">=</span> <span class="yellow">\'#00C28C\'</span>;')
      .continue('<br>  })')
      .run(function(el) {
        el.style.transition = 'background-color 1s';
        el.style.backgroundColor = '#00C28C';
      })
      .emit('run-4')
      .listen('run-5')
      .run(function(el) {
        el.style.backgroundColor = 'transparent';
      })
      .emit('run-6');
  },
  end: function() {
    var html = [
      demoHTML.empty,
      demoHTML.run,
      demoHTML.end
    ].join('');

    this.resetPanes(html);

    typer('.explanation .container')
      .line('And now folks,')
      .pause(1000)
      .continue(' we conclude with our last and final method,')
      .pause(1000)
      .line('appropriately named for the conclusion of this saga...')
      .pause(1000)
      .line('nerds & nerdettes,')
      .pause()
      .line(' I present to you the <span class="lime">end</span> method.')
      .emit('end-1')
      .listen('end-2')
      .pause(1500)
      .line(['<span style="font-size: 0.8em">(queue applause)</span>'])
      .pause(700)
      .empty()
      .continue('The <span class="lime">end</span> method always removes the cursor,')
      .line('can optionally execute a callback function,')
      .line('and optionally fire off an event named "<span class="mono">typerFinished</span>"')
      .line('from the <span class="mono">&lt;<span class="pink">body</span>&gt;</span>.')
      .pause(1500)
      .empty()
      .continue('The code below shows <span class="lime">end</span> in its simplest form,')
      .line('removing the cursor <em>only</em>.')
      .pause(1000)
      .empty()
      .continue('Just like the <span class="lime">run</span> method, <span class="lime">end</span> can run a function.')
      .emit('end-3')
      .listen('end-4')
      .pause(1500)
      .line('And you also have access to the parent element')
      .line('by passing an argument to the function:')
      .emit('end-5')
      .listen('end-6')
      .pause(1500)
      .empty()
      .continue('<span class="lime">end</span> can fire off the "<span class="mono">typerFinished</span>" event')
      .line('by passing <span class="purple mono">true</span> as the second argument:')
      .pause()
      .emit('end-7')
      .listen('end-8')
      .pause(2000)
      .empty()
      .continue('Just to be clear, you don\'t <em>have</em> to use the <span class="lime">end</span> method')
      .line('at the end of your <span class="lime">Typer</span> function.')
      .pause()
      .line('Just know that if you don\'t, the cursor will remain there forever.')
      .pause(1000)
      .empty()
      .continue(['And ever...'])
      .pause(1000)
      .run(function() {
        var $fin = $('<div class="fin full-size absolute left top flex centered">');

        document.body.dispatchEvent(typerDemo.killTyper);

        $('.typer-panes, .progress').removeClass('show');
        views.currentView.ready = false;
        views.currentView.$el.append($fin);

        setTimeout(function() {
          typer('.fin', 150)
            .cursor({block: true, blink: 'hard'})
            .line()
            .run(function(el) {
              $(el).addClass('show');
            })
            .pause(2000)
            .continue('the .end()');
        }, 10);

      });

    typer('.example .container')
      .cursor({block: true, blink: 'hard'})
      .line()
      .listen('end-1')
      .continue('  .end();')
      .emit('end-2')
      .listen('end-3')
      .back(2)
      .continue('<span class="aqua italic">function</span>() { <span class="gray italic">/* do some stuff */</span> });')
      .emit('end-4')
      .listen('end-5')
      .back(27, 10)
      .continue('<span class="orange italic">el</span>) { <span class="gray italic">/* access to parent element */</span> });')
      .emit('end-6')
      .listen('end-7')
      .back(34, 10)
      .continue('<span class="gray italic">/* fire \'typerFinished\' when done */</span> }, <span class="purple">true</span>});')
      .emit('end-8');
  }
};

// DESCRIPTION:
// Takes an parent element, finds all it's decsendants that are text nodes,
// and wraps them in a newly-created DOM element that is specified.

// ARGUMENTS:
// `parentEl`  : DOM node - the element to target its contents.
// `newEl`     : string   - type of DOM node to create as the wrapper.
// `className` : string   - class name to apply to all wrapped children.
function wrapify(parentEl, newEl, className) {
  [].map.call(parentEl.childNodes, function(node) {
    // Ignore new line characters.
    if (node.textContent.match(/\n/)) return;

    // Only wrap text nodes.
    if (node.nodeType === Node.TEXT_NODE /* 3 */) {
      var clone = node.cloneNode();
      var wrapper = document.createElement(newEl);

      if (className) wrapper.classList.add(className);
      wrapper.appendChild(clone);

      parentEl.replaceChild(wrapper, node);
    } else {
      wrapify(node, newEl, className);
    }
  });
}

app.AboutView = Backbone.View.extend({
  id: 'about',
  className: 'page overflow y',
  initialize: function() {
    router.navigate('about');
    this.name = 'AboutView';
    this.typer = true;
    this.gallery = true;
    this.angleHidden = false;
    this.$el.html(templates.about());
    this.$angle = this.$el.find('.angle-down');
    app.typicalRender(this);
    this.typeSkills();
    this.photoGallery();
  },
  events: {
    'click .angle-down span': 'scrollToContents',
    scroll: 'checkDownAngle'
  },
  scrollToContents: function() {
    // If the angle is already hidden, make it un-clickable.
    if (this.angleHidden) return;

    var el = this.el; // What actually scrolls.
    var fps = 60; // frames per second
    var time = 1500; // How long the scrolling will take.
    var start = el.scrollTop; // Starting position (in case we've scrolled a bit).
    var end = window.innerHeight; // End position.
    var distance = end - start; // Total distance to scroll.
    var iterations = Math.floor(time / fps); // How many times to scroll.
    var scrollAmount = distance / iterations; // How far each scroll goes.
    var speed = 1000 / fps; // Frequency of the scroll interval, based on fps.
    var i = 0; // Keeps track of our intervals.

    // TODO: Implement easing solution.
    var type = 'linear';
    // var type = 'ease';

    this.scroll = setInterval(function() {
      var amount;

      if (type === 'linear') {
        el.scrollTop += scrollAmount;
      } else {
        // TODO: Implement easing solution.
      }

      i++;

      if (i === iterations) {
        el.scrollTop = end;
        clearInterval(this.scroll);
      }
    }.bind(this), speed);
  },
  checkDownAngle: function() {
    var amount = Math.floor(window.innerHeight * .5);

    if (this.angleHidden && this.el.scrollTop < amount) {
      this.angleHidden = false;
      this.$angle.removeClass('hide');
    } else if (this.el.scrollTop >= amount) {
      this.angleHidden = true;
      this.$angle.addClass('hide');
    }
  },
  typeSkills: function() {
    var p = 1500;
    var s = 25;
    var i = 0;
    var skillz = [ // `JavaScript` below...
      'backbone.',
      'node.',
      'express.',
      'HTML & CSS.',
      'LESS.',
      'flexbox.',
      'gulp.',
      'photoshop.',
      'responsive design.',
      'wordpress.',
      'dealing with client "complications".'
    ];

    function typeSkill() {
      typer('.skillset')
        .line(skillz[i++])
        .pause(p)
        .back('all', s)
        .run(function(el) {
          $(el).html('');

          if (i === skillz.length) i = 0;

          setTimeout(function() {
            typeSkill();
          }, 10);

          document.body.dispatchEvent(new Event('killTyper'));
        });
    }

    skillz = app.randomizeArray(skillz);
    skillz.unshift('JavaScript.'); // JavaScript always 1st on the list :)
    typeSkill();
  },
  photoGallery: function() {
    var photos = [
      {image: '/images/about/01.jpg', credits: 'Me & my boy'},
      {image: '/images/about/02.jpg', credits: 'My radio, Marquis'},
      {image: '/images/about/03.jpg', credits: 'In the booth'},
      {image: '/images/about/04.jpg', credits: 'Larry Crane!'},
      {image: '/images/about/05.jpg', credits: 'Working for the man'},
      {image: '/images/about/06.jpg'},
      {image: '/images/about/07.jpg'},
      {image: '/images/about/08.jpg', credits: 'In the studio'},
      {image: '/images/about/09.jpg', credits: '"Tracksmith"'},
      {image: '/images/about/10.jpg', credits: '@ Girls Who Code'},
      {image: '/images/about/11.jpg', credits: 'Hip-Hop!'}
    ];

    photos = app.randomizeArray(photos);
    bgImageGallery(photos, '.me', 6000, true);
  }
});

// Example model:
// {
//   _id: 'apologetics-2',
//   createdAt: 849739847534,
//   updatedAt: 938729387474,
//   title: 'Apologetics 2',
//   content: '...',
//   tags: ['some', 'tags', 'here'],
//   image: 'some/url/here.png'
// }

app.AdminPostView = Backbone.View.extend({
  id: 'admin-post',
  className: 'full-size absolute top left flex',
  initialize: function(type) {
    var _this = this;

    if (type === 'edit') {
      this.edit = true;
      this.$el.addClass('edit');
    } else {
      this.$el.addClass('create col centered');
    }

    this.html = this.edit ? templates.editPost() : templates.createPost();

    // Check for logged-in status.
    $.ajax({
      method: 'GET',
      url: '/am-i-logged-in',
      cache: false,
      success: function(loggedIn) {
        if (loggedIn) {
          _this.$el.html(_this.html);

          if (_this.edit) {
            _this.errorMutation();
            _this.fetchPosts();
          }
        } else {
          _this.$el.addClass('centered');
          _this.$el.html('<div class="face">-_-</div>');

          $.post('/error-logs', {
            error: 'Someone tried to access the admin page.'
          });
        }

        $body.append(_this.$el);
      }
    });
  },
  events: {
    // EDIT EVENTS
    'click .post': 'getSinglePost',
    'keyup .search': 'searchFilter',
    'click .cancel': 'removeModal',
    'click .save': 'modalSaveEdits',
    'click .delete': 'modalDeletePost',

    // CREATE EVENTS
    'click .submit': 'modalCreateNewPost',
    'click .preview': 'preview',

    // MODAL EVENTS
    'click .ok.save-edits': 'saveEdits',
    'click .ok.delete-post': 'deletePost',
    'click .ok.overwrite': 'overwriteChanges',
    'click .ok.create': 'createNewPost',
    'click .ok': 'removeModal' // Always remove the modal after hitting 'ok'.
  },

  getFormData: function() {
    var title = $('.title').val();
    var image = $('.image').val();
    var tags = $('.tags').val();
    var content = $('.content').val();

    return {
      title: title,
      image: image,
      tags: this.sanitizeTags(tags),
      content: content
    };
  },
  sanitizeTags: function(tags) {
    // Takes a string (`tags`) and returns
    // an alphebetized array (`sanitized`).

    var sanitized = tags
      .split(',')
      .map(function(tag) {
        return tag
          .replace(/\s+/g, ' ') // Remove redundant spaces: http://goo.gl/ayyBdO
          .trim() // Remove leading / trailing spaces.
          .toLowerCase();
      })
      .sort(); // Alphabetical order.

    return sanitized;
  },
  newModal: function(type, content) {
    var $modal = $('<div class="modal page flex centered col">');
    var $content = $('<div class="modal-content">');
    var $buttons = $('<div class="buttons flex">');
    var $ok = $('<div class="button ok ' + type + '">OK</div>');
    var $cancel = $('<div class="button cancel">CANCEL</div>');

    $buttons
      .append($ok)
      .append($cancel);
    $content.text(content);
    $modal
      .append($content)
      .append($buttons);

    this.$el.append($modal);

    setTimeout(function() {
      $modal.addClass('show');
    }, 10);
  },
  removeModal: function() {
    if (this.edit) this.resetError();

    $('.modal').removeClass('show');

    setTimeout(function() {
      $('.modal').remove();
    }, 1000);
  },


  //////////////////
  // EDIT METHODS //
  //////////////////

  errorMutation: function() {
    this.$errors = this.$el.find('.errors');
    this.errorMessage = 'error messages here...';

    this.mutation = new MutationObserver(function(mutations) {
      var msg = this.$errors.attr('message');

      this.$errors.text(msg);

      if (msg === this.errorMessage) {
        this.$errors.removeClass('message');
      } else {
        this.$errors.addClass('message');
      }
    }.bind(this));

    this.mutation.observe(this.$errors[0], {
      attributes: true,
      attributeFilter: ['message']
    });
  },
  error: function(msg) {
    this.$errors.attr('message', msg);
  },
  resetError: function() {
    this.$errors.attr('message', this.errorMessage);
  },
  fetchPosts: function() {
    var _this = this;

    this.collection = new app.PostsCollection();
    this.collection.fetch({
      data: {limit: 0},
      success: _this.listPosts.bind(_this),
      error: function(res) {
        _this.error('fetchPosts() failed');
      }
    });
  },
  listPosts: function() {
    var $frag = $(document.createDocumentFragment());

    this.collection.map(function(model) {
      var $div = $('<div class="post show pointer">');

      $div
        .attr('id', 'post-' + model.get('_id'))
        .text(model.get('title'));

      $frag.append($div);
    });

    $('.posts-list').append($frag);
  },
  getSinglePost: function(e) {
    var id = $(e.currentTarget).attr('id').split('post-')[1];
    var model = this.collection.where({_id: id})[0];
    var title = model.get('title');
    var image = model.get('image');
    var tags = model.get('tags');
    var content = model.get('content');
    var oldModel = this.currentPost;
    var formData = this.getFormData();

    this.resetError();

    if (oldModel && this.hasDataChanged(formData, oldModel)) {
      this.newModel = model;
      return this.modalOverwriteChanges();
    }

    this.currentPost = model;

    $('.title').val(title);
    $('.image').val(image);
    $('.tags').val(tags.join(', '));
    $('.content').val(content);
  },
  searchFilter: function(e) {
    var posts = $('.post').toArray();
    var value = e.currentTarget.value;

    $('.post').each(function() {
      var $el = $(this);
      var text = $el.text().toLowerCase();

      if (text.indexOf(value) > -1) {
        $el.addClass('show');
      } else {
        $el.removeClass('show');
      }
    });
  },
  hasDataChanged: function(data, model) {
    if (!model) return false;

    var formTags = data.tags.sort().toString();
    var modelTags = model.get('tags').sort().toString();

    var title = data.title !== model.get('title');
    var image = data.image !== model.get('image');
    var tags = formTags !== modelTags;
    var content = data.content !== model.get('content');

    if (title || image || tags || content) {
      return {
        title: title,
        image: image,
        tags: tags,
        content: content
      };
    }

    return false;
  },
  getChangedData: function(model) {
    var data = this.hasDataChanged(this.getFormData(), model);
    var changes = {};

    if (!data) return false;

    for (var i in data) {
      if (data[i]) {
        if (i === 'tags') {
          changes[i] = this.sanitizeTags($('.tags').val());
        } else {
          changes[i] = $('.' + i).val();
        }
      }
    }

    return changes;
  },
  // Edit modal methods...
  modalOverwriteChanges: function(newModel) {
    this.newModal('overwrite', 'Disregard changes & load the new post?');
  },
  overwriteChanges: function() {
    var model = this.newModel;

    this.currentPost = this.newModel;
    this.newModel = '';

    $('.title').val(model.get('title'));
    $('.image').val(model.get('image'));
    $('.tags').val(model.get('tags').join(', '));
    $('.content').val(model.get('content'));
  },
  modalSaveEdits: function() {
    if (!this.currentPost) {
      return this.error('no post loaded');
    }

    var data = this.getChangedData(this.currentPost);

    if (!data) {
      return this.error('no changes detected');
    }

    // Titles are married to `_id`, which is unique.
    if (data.title) {
      return this.error('title change detected');
    }

    this.newModal('save-edits', 'Are you sure you want to save these edits?');
  },
  saveEdits: function() {
    var _this = this;
    var data = this.getChangedData(this.currentPost);

    data.updatedAt = Date.now();
    this.currentPost.save(data, {
      patch: true,
      success: function(model, response, options) {
        $('.input').val('');
        this.currentPost = '';
      }.bind(_this),
      error: function(model, response, options) {
        _this.error('model failed to update');
        console.log('model:');
        console.log(model);
        console.log('response:');
        console.log(response);
        console.log('options:');
        console.log(options);
      }
    });
  },
  modalDeletePost: function() {
    if (!this.currentPost) {
      this.error('no post to delete');
      return;
    }

    this.newModal('delete-post', 'Are you sure you want to delete this post?');
  },
  deletePost: function() {
    var _this = this;

    this.currentPost.destroy({
      wait: true,
      success: function(model) {
        $('.input').val('');
        $('#post-' + model.get('_id')).remove();
      },
      error: function(model, response, options) {
        _this.error('unable to delete model');
        console.log('model:');
        console.log(model);
        console.log('response:');
        console.log(response);
        console.log('options:');
        console.log(options);
      }
    });
  },


  ////////////////////
  // CREATE METHODS //
  ////////////////////

  preview: function() {
    views.previewPost = new app.PreviewPostView();
  },
  // Create modal methods...
  modalCreateNewPost: function() {
    this.newModal('create', 'Are you sure you want to create this post?');
  },
  createNewPost: function() {
    var _this = this;
    var data = JSON.stringify(this.getFormData());

    $.ajax({
      method: 'POST',
      url: '/create-post',
      data: data,
      contentType: 'application/json', // Needed to send the `tags` array correctly.
      success: function() {
        $('.input').val('');
      }
    });
  }
});

app.BlogPostView = Backbone.View.extend({
  id: 'blog-post',
  className: 'page overflow y',
  initialize: function() {
    var id = this.model.get('_id');
    var image = [
      'url(',
      this.model.get('image'),
      ')'
    ].join('');

    router.navigate('blog/' + id);
    this.$el.html(templates.blogPost(this.model.toJSON()));
    this.el.style.backgroundImage = image;
    app.typicalRender(this);
  },
  events: {
    'click .tags a': 'getTaggedPosts'
  },
  getTaggedPosts: function(e) {
    var tag = $(e.currentTarget).text();
    e.preventDefault();

    app.removeCurrentView();
    views.currentView = new app.BlogView({tag: tag});
  }
});

app.BlogView = Backbone.View.extend({
  id: 'blog',
  className: 'page overflow y flex col',
  initialize: function(data) {
    var route = 'blog';

    if (data && data.tag) {
      route += '/tag/' + data.tag;
      this.tag = data.tag;
    }

    if (this.tag) {
      // Reset the `taggedPosts` collection each time.
      taggedPosts.reset();
    }

    router.navigate(route);
    this.name = this.tag ? 'TagBlogView' : 'BlogView';
    this.blog = true;
    this.tagBlog = !!this.tag;
    this.$el.html(templates.blog(this.tag ? {tag: this.tag} : null));

    this.$container = this.$el.find('.posts-container');
    this.$button = this.$el.find('.posts-button');

    app.typicalRender(this);
    this.startButtonObserver();
    this.listPosts();

    if (app.blogPosition) this.el.scrollTop = app.blogPosition;
  },
  events: {
    'click .post-title a': 'loadSinglePost',
    'click .posts-button': 'listPosts'
  },
  startButtonObserver: function() {
    // https://goo.gl/TnkVN

    // Observer instance.
    this.buttonObserver = new MutationObserver(function(mutations) {
      var state = this.$button.attr('state');

      this.$button.text(this.$button.attr('state'));

      if (state === 'end') {
        this.$button.addClass('end');
        this.noMorePosts = true;
      }
    }.bind(this));

    // Start listening.
    this.buttonObserver.observe(this.$button[0], {
      attributes: true,
      attributeOldValue: true,
      attributeFilter: ['state']
    });
  },
  listPosts: function(e) {
    if (this.noMorePosts) return;

    var _this = this;
    var start = this.tag ? taggedPosts.length : posts.length;
    var data = {
      start: start
    };

    if (this.tag) data.tag = this.tag;

    this.buttonState('loading');

    // 3 possible scenarios:
    // 1. First visit to blog - no models in collection (`!start`).
    // 2. Revisit to blog - models in collection but no `e`.
    // 3. 'Load More' button clicked - `e` will have a value.

    // 1st visit & 'load more'.
    if (!start || e) {
      (this.tag ? taggedPosts : posts).fetch({
        data: data,
        remove: false, // Seems necessary to merge the new models with the old ones.
        success: function(collection, response) {
          _this.showTitles(collection, e ? response : null);
        },
        error: function(collection, response, options) {
          $.post('/error-logs', {
            error: 'BlogView: listsPosts() error',
            collection: collection,
            response: response,
            options: options
          });
        }
      });

    // Revisit.
    } else {
      this.showTitles(this.tag ? taggedPosts : posts);
    }
  },
  showTitles: function(collection, newPosts) {
    var $frag = $(document.createDocumentFragment());

    // No tagged posts to begin with.
    if (this.tag && !collection.length) {
      this.$container
        .addClass('show')
        .html('no posts yet');

      this.buttonState('end');
      return;
    }

    // Exhausted posts.
    if (newPosts && !newPosts.length) {
      this.buttonState('end');
      return;
    }

    (newPosts ? newPosts : collection).map(function(model) {
      var $title = $('<div class="post-title">');
      var $invisible1 = $('<div class="invisible">');
      var $invisible2 = $('<div class="invisible">');
      var $a = $('<a href=#>');
      var data = {};

      // We're either dealing with Backbone model objects in a
      // collection (`collection` above) or plain objects returned
      // from the server (`newPosts` above).
      if (newPosts) {
        data.title = model.title;
        data._id = model._id;
      } else {
        data.title = model.get('title');
        data._id = model.get('_id');
      }

      $a.text(data.title);
      $a.attr('data-id', data._id);
      $title
        .append($invisible1)
        .append($a)
        .append($invisible2);
      $frag.append($title);
    });

    this.buttonState('load more');
    this.$container
      .append($frag)
      .addClass('show');
  },
  loadSinglePost: function(e) {
    e.preventDefault();

    app.blogPosition = this.el.scrollTop;

    var id = $(e.currentTarget).data('id');
    var model = (this.tag ? taggedPosts : posts).where({_id: id})[0];

    app.removeCurrentView();
    views.currentView = new app.BlogPostView({model: model});
  },
  buttonState: function(state) {
    this.$button.attr('state', state);
  }
});

app.ContactView = Backbone.View.extend({
  id: 'contact',
  className: 'page overflow y',
  initialize: function() {
    router.navigate('contact');
    this.name = 'ContactView';
    this.$el.html(templates.contact());
    this.$name = this.$el.find('.name');
    this.$email = this.$el.find('.email');
    this.$message = this.$el.find('.message');
    this.$submit = this.$el.find('.submit');
    app.typicalRender(this);
  },
  events: {
    'click .submit': 'submit',
    'keypress .input': 'checkErrorState',
    'keypress .submit': 'enter'
  },
  submit: function() {
    var data = {
      name: this.$name.val(),
      email: this.$email.val(),
      message: this.$message.val()
    };
    var check = this.checkData(data);

    check === 'ok' ? this.submitForm(data) : this.showErrors(check);
  },
  checkData: function(data) {
    // Check for proper email: http://goo.gl/O6ctPN.
    var emailRegex = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,15})+$/;
    var errors = [];

    // Check for missing fields.
    if (!data.name.length) errors.push('$name');
    if (!data.email.length || !emailRegex.test(data.email)) errors.push('$email');
    if (!data.message.length || data.message.length > 10000) errors.push('$message');

    return errors.length ? errors : 'ok';
  },
  showErrors: function(errors) {
    errors.map(function(error) {
      this[error].addClass('error');
    }.bind(this));

    this.$submit.addClass('error');
  },
  checkErrorState: function(e) {
    $(e.currentTarget).removeClass('error');
    this.$submit.removeClass('error');
  },
  enter: function(e) {
    if (e.which === 13) this.submit();
  },
  submitForm: function(data) {
    var _this = this;

    $.post('/contact', data)
      .done(function() {
        _this.response('Success!');
      })
      .fail(function(err) {
        // WEIRD: Unless this variable is declared with the contents
        // of 'err', passing 'err' to the ajax call below doesn't work.
        var error = {
          type: 'contact form error',
          status: err.status,
          statusText: err.statusText,
          responseText: err.responseText,
          responseJSON: err.responseJSON
        };

        _this.response('Error - try again');

        // Log the error to the database.
        $.post('/error-logs', error);
      });
  },
  response: function(msg) {
    var _this = this;
    var $response = $('<div class="response page flex centered">');
    var $text = $('<div class="response-text">');

    $text.text(msg);
    $response.append($text);

    if (msg !== 'Success!') $text.addClass('error');

    this.$el.append($response);

    setTimeout(function() {
      $response.addClass('show');

      setTimeout(function() {
        $text.addClass('animate');

        setTimeout(function() {
          $response.remove();

          if (msg === 'Success!') _this.clearForm();
        }, 2500);
      }, 500);
    }, 10);
  },
  clearForm: function() {
    this.$name.val('');
    this.$email.val('');
    this.$message.val('');
    this.el.scrollTop = 0;
  }
});

app.FourZeroFourView = Backbone.View.extend({
  id: 'four-zero-four',
  className: 'absolute top left full-size flex col centered mono overflow y',
  initialize: function() {
    var num = app.randomNum(0, f0f.length - 1);
    var $home = $('<a href="/">HOME PAGE</a>');
    var $content = $('<div class="content sans">');

    this.typer = true;
    this.$el.append($home);
    this.$el.append($content);

    $home.addClass('home absolute top left pointer');
    $body.append(this.$el);

    setTimeout(function() {
      // Found in type404.js
      f0f[num]();
    }, 1000);
  }
});

app.HomeView = Backbone.View.extend({
  id: 'menu',
  className: 'full-size flex centered col no-overflow',
  initialize: function() {
    this.$el.html(templates.home());
    this.firstRender();
  },
  firstRender: function() {
    $body.append(this.$el);

    typeMenu('#menu-container');

    setTimeout(function() {
      this.$el
        .find('#menu-heading')
        .addClass('show');
    }.bind(this), 10);
  },
  render: function() {
    // This function called on subsequent visits to the homapage.
    this.$el.empty();
    this.el.className = this.className;
    this.$el.html(this.html);
    this.menuClickable = true;
  },
  events: {
    'click .link': 'link',
    'transitionend .typer': 'removeCursor'
  },
  link: function(e) {
    var view;
    var num = app.randomNum(1, 2);

    if (!this.menuClickable) return;

    this.menuClickable = false;
    view = $(e.target).attr('data-view');

    if (num === 1) {
      blowUpMenu('#menu-container', '#menu');
    } else {
      linksDisappear(this.$el, '#menu-container', 'span', 'disappear');
    }

    // Event emitted from `blowUpMenu.js` and `linksDisappear.js`.
    $body.one('menuAnimationComplete', function() {
      // Only create the navigation view once.
      if (!views.NavigationView) {
        // Passing `view` into `NavigationView` so it can be responsible
        // for creating the view when it itself is has rendered.
        views.NavigationView = new app.NavigationView(view);
      } else {
        views.currentView = new app[view]();
      }
    }.bind(this));
  },
  removeCursor: function(e) {
    // This function will be triggered by multiple `transitionend` events.
    // Ensure this logic only executes once.
    if (e.originalEvent.propertyName === 'margin-top') {

      this.$el
        // Change the color of the links and remove the `typer` cursor.
        .find('#menu-container')
        .addClass('clickable')
        .end()
        .find('.typer')
        .attr('class', 'white-space')

        // Remove all attributes from `typer-js` so we
        // can store the clean HTML for later use.
        .end()
        .find('[data-typer-child]')
        .removeAttr('data-typer-child')
        .end()
        .find('[data-typer]')
        .removeAttr('data-typer');

      this.html = this.$el.html();
      this.menuClickable = true;
    }
  }
});

app.LoginView = Backbone.View.extend({
  id: 'login',
  className: 'full-size absolute top left flex col',
  initialize: function() {
    var _this = this;

    router.navigate('login');
    this.html = templates.login();

    $.ajax({
      url: '/am-i-logged-in',
      cache: false,
      success: function(loggedIn) {
        var $message = $('<div>Already logged in.</div>');
        var $logout = $('<div class="field logout">LOG OUT</div>');

        if (loggedIn) {
          _this.$el
            .append($message)
            .append($logout);
          $body.append(_this.$el);
        } else {
          _this.$el.html(_this.html);
          $body.append(_this.$el);
        }
      }
    });
  },
  events: {
    'click .submit': 'submit',
    'click .logout': 'logout'
  },
  submit: function(e) {
    var _this = this;
    var email = $('.email').val();
    var pw = $('.password').val();

    if (!email || !pw) return;

    $.post('/login', {email: email, password: pw})
      .done(function(res) {
        _this.$el.html('Logged in.');
      })
      .fail(function(err) {
        var error = {
          type: 'login',
          status: err.status,
          statusText: err.statusText,
          responseText: err.responseText,
          date: new Date()
        };

        $('.email').val('');
        $('.password').val('');

        $.post('/error-logs', error);
      });

  },
  logout: function() {
    var _this = this;
    $.post('/logout', function() {
      _this.$el.html(_this.html);
    });
  }
});

app.NavigationView = Backbone.View.extend({
  id: 'navigation',
  className: 'absolute top right no-overflow',
  initialize: function(view, data) {
    // `view`: a view to create after navigation is created.
    if (view) this.view = view;
    if (data) this.data = data.tag ? {tag: data.tag} : {model: data.model};

    this.event = new Event('killTyper');
    this.$el.html(templates.navigation());
    this.render();
  },
  render: function() {
    var data;
    $body.append(this.$el);

    setTimeout(function() {
      this.$el.addClass('attached');
    }.bind(this), 10);

    if (this.view) {
      setTimeout(function() {
        views.currentView = new app[this.view](this.data);
        delete this.view;
      }.bind(this), 400);
    }
  },
  events: {
    'click .hamburger': 'open',
    'click .nav-item': 'newView',
    'mouseenter .nav-item': 'mouseenter',
    'mouseleave .nav-item': 'mouseleave'
  },
  open: function() {
    this.$el.toggleClass('open');
  },
  mouseenter: function(e) {
    // Instead of checking the window width, check the body's width.
    var width = document.body.getBoundingClientRect().width;

    if (width <= 1024) return;

    $(e.currentTarget)
      .addClass('focused')
      .siblings()
      .addClass('not-focused');

    typer('.focused .description', 10)
      .cursor({block: true})
      .line({el: '.focused .description-content'});
  },
  mouseleave: function(e) {
    var width = document.body.getBoundingClientRect().width;

    if (width <= 1024) return;

    document.body.dispatchEvent(this.event);

    $(e.currentTarget)
      .removeClass('focused')
      .find('.description')
      .empty()
      .end()
      .siblings()
      .removeClass('not-focused');
  },
  newView: function(e) {
    var view = $(e.currentTarget).data('view');

    // This could be the case if the user navigates
    // back to the home page via the browsers buttons.
    if (!views.currentView) {
      views.currentView = new app[view]();
      this.$el.removeClass('open');

    // Views accessible from the navigation will have
    // a 'this.name' property equal to `view` above.
    } else if (view === views.currentView.name) {
      this.$el.removeClass('open');
    } else {
      app.removeCurrentView();
      views.currentView = new app[view]();
      this.$el.removeClass('open');
    }
  }
});

app.PreviewPostView = Backbone.View.extend({
  id: 'blog-post',
  className: 'preview-post page overflow y',
  initialize: function() {
    this.model = new app.PostModel({
      title: $('.title').val(),
      image: $('.image').val(),
      tags: $('.tags').val().split(','),
      content: $('.content').val(),
      createdAt: Date.now()
    });

    var image = [
      'url(',
      this.model.get('image'),
      ')'
    ].join('');

    this.$el
      .html(templates.blogPost(this.model.toJSON()))
      .append($('<div class="close absolute top right pointer">'));
    this.el.style.backgroundImage = image;
    app.typicalRender(this);
  },
  events: {
    'click .close': 'close'
  },
  close: function() {
    app.removeCurrentView();
  }
});

app.ProjectsView = Backbone.View.extend({
  id: 'projects',
  className: 'page overflow x flex',
  initialize: function() {
    var _this = this;

    router.navigate('projects');
    this.name = 'ProjectsView';

    this.$el.html(templates.projects(projectData));
    app.typicalRender(this);
  },
  events: {
    // wheel: 'wheel',
    // mousemove: 'mousemove',
    'click [data-view]': 'demo'
  },
  wheel: function(e) {
    // Prevents scrolling with the mouse wheel or trackpad swipes.
    e.preventDefault();
  },
  mousemove: function(e) {
    if (app.breakPoint() !== 'DESKTOP') return;

    // 1. Calculate the width of the page.
    var windowWidth = window.innerWidth;

    // 2. Calculate the metrics of the scroll-triggering area
    // (buffered by a percentage on no-scrolling area on either side).
    var buffer = windowWidth * .2;
    var start = buffer;
    var end = windowWidth - buffer;
    var spread = end - start;

    // 3. Calculate the %age of the mouse location to the left of the buffered zone.
    var mouseLoc = e.clientX;
    var percentage = (function() {
      if (mouseLoc < start) {
        return 0;
      } else if (mouseLoc > end) {
        return 1;
      } else {
        return (mouseLoc - buffer) / spread;
      }
    })();

    // 4. Calculate the el's scroll amount.
    var elScrollWidth = this.el.scrollWidth; // How wide the element is.
    var maxScroll = elScrollWidth - windowWidth; // Maximum scrollLeft amount.

    // 5. Scroll the el accordingly.
    this.el.scrollLeft = maxScroll * percentage;
  },
  demo: function(e) {
    var view = $(e.currentTarget).data('view');

    views.currentView.remove();
    views.currentView = new app[view]();
  }
});

app.BGGalleryDemoView = Backbone.View.extend({
  id: 'bg-gallery-demo-view',
  className: 'page no-overflow full-size',
  initialize: function() {
    router.navigate('background-gallery');
    this.gallery = true;
    app.typicalRender(this);
    bgImageGallery(galleryPhotos, '#' + this.id, 6000, true);
  }
});

app.DeckGridDemoView = Backbone.View.extend({
  id: 'deck-grid-demo',
  className: 'page overflow',
  initialize: function() {
    router.navigate('deck-grid');
    this.deck = true;
    this.$el.html(templates.deckGridDemo());
    app.typicalRender(this);
    deckGrid();
  }
});

app.ThingDemoView = Backbone.View.extend({
  id: 'thing-demo',
  className: 'page no-overflow',
  initialize: function() {
    router.navigate('thing-to-html');
    this.thing = true;
    this.$el.html(templates.thingDemo());
    app.typicalRender(this);
    thingExample();
  }
});

app.TimeCalcDemoView = Backbone.View.extend({
  id: 'time-calc-demo',
  className: 'page no-overflow flex centered',
  initialize: function() {
    router.navigate('time-calculator');
    this.calculator = true;
    this.$el.html(templates.timeCalcDemo());
    app.typicalRender(this);
    timeCalculator();
  }
});

app.TyperDemoView = Backbone.View.extend({
  id: 'typer-demo',
  className: 'page no-overflow flex col',
  initialize: function() {
    router.navigate('typer');
    this.typer = true;
    this.killTyper = new Event('killTyper');
    this.$el.html(templates.typerDemo());

    // Cache some elements.
    this.$stopPlay = this.$el.find('.stop-play');
    this.$progressBar = this.$el.find('.progress-bar');

    // Set ready status when typer demo has begun:
    // `typerJs` method in `typerDemo.js`.
    $body.one('typer-demo-started', function() {
      this.ready = true;
    }.bind(this));

    app.typicalRender(this);
  },
  events: {
    transitionend: 'begin',
    'click .previous': 'previousNext',
    'click .next': 'previousNext',
    'click .stop-play': 'stopPlay',
    'click .progress-item': 'progressItem'
  },
  begin: function(e) {
    if (this.typerDemoBegan) return;

    var opacity = e.originalEvent.propertyName === 'opacity';
    var source = e.originalEvent.srcElement.id === 'typer-demo';

    this.typerDemoBegan = true;

    if (opacity && source) {
      typerDemo.init();
      typerDemo.intro(this.$el);
    }
  },
  previousNext: function(e) {
    if (!this.ready) return;

    var button = $(e.currentTarget).hasClass('next') ? 'next' : 'prev';
    var $active = this.$progressBar.find('.active');
    var $direction = $active[button]();
    var item;

    if (!$direction.length) return;

    document.body.dispatchEvent(this.killTyper);

    item = $direction.data('item');
    $active.removeClass('active');
    $direction.addClass('active');
    this.$stopPlay
      .addClass('stop')
      .removeClass('play');

    typerDemo[item]();
  },
  stopPlay: function(e) {
    var $sp = $(e.currentTarget);
    var item;

    if (!this.ready) return;

    $sp.toggleClass('play');
    $sp.toggleClass('stop');

    if ($sp.hasClass('stop')) {
      item = this.$el
        .find('.active')
        .data('item');

      typerDemo[item]();
    } else {
      document.body.dispatchEvent(this.killTyper);
    }
  },
  progressItem: function(e) {
    var $item = $(e.currentTarget);
    var item = $item.data('item');

    if (!this.ready || $item.hasClass('active')) return;

    document.body.dispatchEvent(this.killTyper);

    $item
      .parent()
      .find('.active')
      .removeClass('active');

    $item.addClass('active');

    this.$stopPlay
      .addClass('stop')
      .removeClass('play');

    typerDemo[item]();
  }
});

app.Router = Backbone.Router.extend({

  // Adding the '(/)' allows for trailing slashes in the url.
  routes: {
    // MAIN ROUTES
    '': 'index',
    'about(/)': 'about',
    'projects(/)': 'projects',
    'blog(/)': 'blog',
    'contact(/)': 'contact',

    // DEMO ROUTES
    'typer(/)': 'typerDemo',
    'thing-to-html(/)': 'thingDemo',
    'time-calculator(/)': 'calcDemo',
    'deck-grid(/)': 'deckDemo',
    'background-gallery(/)': 'bgDemo',

    // DYNAMIC ROUTES
    'blog/:tag/:tagName(/)': 'blog',
    'blog/:id(/)': 'blog',

    // OTHER ROUTES
    'edit-post(/)': 'editPost',
    'create-post(/)': 'createPost',
    'login(/)': 'login',

    // 404 ROUTE
    '*404': 'fourZeroFour'
  },
  navAndView: function(view, data) {
    // `data`:
    // {model: model}
    // {tag: tag}

    app.removeCurrentView();

    if (!views.NavigationView) {
      views.NavigationView = new app.NavigationView(view, data);
    } else {
      views.currentView = new app[view](data);
    }
  },

  // Route functions are only triggered by browser actions,
  // not manual `.navigate` calls. Back & fwd buttons are triggers.

  // MAIN ROUTES
  index: function() {
    app.removeCurrentView();
    views.currentView = null;

    if (!views.HomeView) {
      views.HomeView = new app.HomeView();
    } else {
      views.HomeView.render();
    }
  },
  about: function() {
    this.navAndView('AboutView');
  },
  projects: function() {
    this.navAndView('ProjectsView');
  },
  blog: function(id, tag) {
    var _this = this;
    var model;

    // TAGGED POSTS PAGE
    if (tag) {
      this.navAndView('BlogView', {tag: tag});

    // SINGLE-POST PAGE
    } else if (id) {

      // If the post is in the collection...
      if (posts.where({_id: id}).length) {
        model = posts.where({_id: id})[0];
        this.navAndView('BlogPostView', {model: model});

      // If the post is *not* in the collection...
      } else {
        $.get('/blog-posts?id=' + id)
          .done(function(post) {

            // If for some reason the post isn't in the db, log an error.
            if (post.length !== 1) {
              $.post('/error-logs', {
                error: 'Single post *not* in collection, also not returned from db'
              });

              return _this.fourZeroFour();
            }

            model = new app.PostModel(post[0]);
            _this.navAndView('BlogPostView', {model: model});
          })
          .fail(function(res) {
            _this.fourZeroFour();
            $.post('/error-logs', {
              responseText: res.responseText,
              statusText: res.statusText,
              status: res.status
            });
          });
      }

    // BLOG PAGE
    } else {
      this.navAndView('BlogView');
    }
  },
  contact: function() {
    this.navAndView('ContactView');
  },

  // PROJECT DEMO ROUTES
  typerDemo: function() {
    this.navAndView('TyperDemoView');
  },
  thingDemo: function() {
    this.navAndView('ThingDemoView');
  },
  calcDemo: function() {
    this.navAndView('TimeCalcDemoView');
  },
  deckDemo: function() {
    this.navAndView('DeckGridDemoView');
  },
  bgDemo: function() {
    this.navAndView('BGGalleryDemoView');
  },

  // OTHER ROUTES
  editPost: function() {
    app.removeCurrentView(true);
    views.currentView = new app.AdminPostView('edit');
  },
  createPost: function() {
    app.removeCurrentView(true);
    views.currentView = new app.AdminPostView('create');
  },
  login: function() {
    app.removeCurrentView(true);
    views.currentView = new app.LoginView();
  },

  // 404
  fourZeroFour: function() {
    if (views.HomeView) views.HomeView.remove(true);
    if (views.NavigationView) views.NavigationView.remove(true);

    views.HomeView = null;
    views.NavigationView = null;

    app.removeCurrentView(true);
    views.currentView = new app.FourZeroFourView();
  }
});

templates["about"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<header class=\"full-size flex centered col\">\n  <h1 class=\"relative center\">I WENT FROM RAPPING ON TRACKS TO WORKING ON TRACKS TO JAVASCRIPT AWESOMENESS...</h1>\n  <div class=\"angle-down absolute bottom left\">\n    <span class=\"pointer\">&#9002;</span>\n  </div>\n</header>\n\n<div class=\"about-content\">\n  <div id=\"tldr\" class=\"flex centered\">\n    <div class=\"tldr bold\">TL;DR</div>\n    <div class=\"flex col tldr-description\">\n      <div class=\"tldr-description\">(regular)</div>\n      <div class=\"tldr-description\">(JavaScript'y)</div>\n    </div>\n    <div class=\"flex col arrows\">\n      <div class=\"up\">&nbsp;&#8627;</div>\n      <div class=\"down\">&nbsp;&#8629;</div>\n    </div>\n  </div>\n\n  <div class=\"mono function center\">\n    <div class=\"function-container\">\n      <div class=\"white-space\"><span class=\"aqua\">function</span> <span class=\"lime\">changeMyLife</span>(<span class=\"orange italic\">me</span>) {</div>\n      <div class=\"white-space\">  <span class=\"pink\">delete</span> me.trackWorker; <span class=\"gray\">// Bye bye.</span></div>\n      <div class=\"white-space\"> </div>\n      <div class=\"white-space\">  me.hipHopArtist <span class=\"pink\">=</span> <span class=\"yellow\">'woulda been great'</span>;</div>\n      <div class=\"white-space\">  me.webDeveloper <span class=\"pink\">=</span> <span class=\"yellow\">'finally found my calling'</span>;</div>\n      <div class=\"white-space\"> </div>\n      <div class=\"white-space\">  <span class=\"pink\">return</span> me;</div>\n      <div class=\"white-space\">}</div>\n    </div>\n  </div>\n\n  <div class=\"about-me\">\n    <h1>Who Am I?</h1>\n    <p>\n      <span class=\"me\"></span>\n      I'm Aaron! And I'm a <span class=\"bold yellow\">JavaScript</span> developer. Did I mention that I love what I do? You can check out my <a href=\"/projects\">work</a> and see for yourself, but suffice to say that I love building <a href=\"https://github.com/qodesmith\" target=\"_blank\">things</a> for the web. Currently, I'm all-things Front End for the good folks over at <a href=\"https://www.l2inc.com/\" target=\"_blank\">L2</a>, a super-cool company that processes a <span class=\"italic\">lot</span> of data for clients. I build the internal tools that make the L2 world go 'round.\n    </p>\n\n    <p>\n      Formerly I was passionately pursuing (pronounced \"struggling artist\") <a href=\"https://www.youtube.com/watch?v=NI5rplnShGY&index=9&list=PLj2TkO0tSJ_n15HKKCJLELm0L7sOymz0a\" target=\"_blank\">Hip-Hop</a> as a career. I wanted to change the world. I still want to change the world, except I'm armed with code now. I started as a producer with a knack for tracks, picked up the art of rhyme as a formidable wordsmith, found my way to full-time employment as a slave to the man on the <a href=\"http://web.mta.info/maps/submap.html\" target=\"_blank\">wrong set of tracks</a>, then #JavaScript. JaaaavvvaaaScccrrriiipppttt! Not that I can't wreck shop on the mic still...\n    </p>\n\n    <h1>Skills That Pay Bills <span class=\"broke\">(as opposed to those that don't, like Hip-Hop)</span></h1>\n    <p>\n      <div class=\"typed-skills\">I'm good at <span class=\"skillset\"></span></div>\n      I love a good challenge; I love ironing out the logic behind problems; I love re-organizing, refactoring, and improving... The whole digital landscape is a playground to me. I get paid to play. Doesn't that sound great? It is (bear with me, I'm trying to avoid the cliche of \"I'm a <span class=\"italic\">passionate</span> developer\").\n    </p>\n\n    <p>\n      Front-end development takes discipline and... discipline, schmiscipline. I have fun bringing awesome ideas (yours <span class=\"italic\">or</span> mine) to life. I write good, maintainable, sexy code. It has to be sexy. Then comes the UI. That has to be sexy too. Or in the case of this site, nerdy. And <span class=\"mono\">nerdy <span class=\"pink\">===</span> <span class=\"yellow\">'awesome'</span></span>, in case you didn't already know. Plus, I get along well with others, so there's always that.\n    </p>\n\n\n  </div>\n\n</div>\n";
},"useData":true});
templates["blog"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return "<div class=\"tag-title fixed top left\">\n  <div>TAG: <span class=\"bold\">\""
    + container.escapeExpression(((helper = (helper = helpers.tag || (depth0 != null ? depth0.tag : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"tag","hash":{},"data":data}) : helper)))
    + "\"</span></div>\n</div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"posts-container flex col\"></div>\n<div class=\"posts-button more\"></div>\n\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.tag : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true});
templates["blogPost"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "        <span class=\"updated\">Updated:&nbsp;</span>"
    + container.escapeExpression((helpers.date || (depth0 && depth0.date) || helpers.helperMissing).call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.updatedAt : depth0),{"name":"date","hash":{},"data":data}))
    + "\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "        "
    + container.escapeExpression((helpers.date || (depth0 && depth0.date) || helpers.helperMissing).call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.createdAt : depth0),{"name":"date","hash":{},"data":data}))
    + "\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function";

  return "<div class=\"post-container flex col\">\n  <header class=\"flex col\">\n    <h1 class=\"title\">"
    + container.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</h1>\n    <div class=\"date\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.updatedAt : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "    </div>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.tags : depth0)) != null ? stack1.length : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </header>\n  <div class=\"tags\">tags: [ "
    + ((stack1 = (helpers.tagList || (depth0 && depth0.tagList) || alias2).call(alias1,(depth0 != null ? depth0.tags : depth0),{"name":"tagList","hash":{},"data":data})) != null ? stack1 : "")
    + " ]</div>\n  <div class=\"content\">\n    "
    + ((stack1 = ((helper = (helper = helpers.content || (depth0 != null ? depth0.content : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"content","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\n  </div>\n</div>\n";
},"useData":true});
templates["contact"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contact-container\">\n  <h1>WHO ARE YOU?</h1>\n  <input type=\"text\" class=\"input name\">\n\n  <h1>EMAIL:</h1>\n  <input type=\"text\" class=\"input email\">\n\n  <h1>WHAT'S ON YOUR MIND?</h1>\n  <textarea class=\"input message\" rows=\"5\"></textarea>\n\n  <div class=\"submit\" tabindex=\"0\">SUBMIT</div>\n</div>";
},"useData":true});
templates["createPost"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input type=\"text\" class=\"input title\" placeholder=\"title\">\n<input type=\"text\" class=\"input image\" placeholder=\"image url\">\n<input type=\"text\" class=\"input tags\" placeholder=\"tags\">\n<textarea class=\"input content\"></textarea>\n<div class=\"create-buttons\">\n  <div class=\"button submit\">SUBMIT</div>\n  <div class=\"button preview\">PREVIEW</div>\n</div>";
},"useData":true});
templates["editPost"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"editor flex col\">\n  <input type=\"text\" class=\"input title\" placeholder=\"title\">\n  <input type=\"text\" class=\"input image\" placeholder=\"image\">\n  <input type=\"text\" class=\"input tags\" placeholder=\"tags\">\n  <textarea class=\"input content\" placeholder=\"content\"></textarea>\n  <div>\n    <div class=\"button save\">SAVE</div>\n    <div class=\"button delete\">DELETE POST</div>\n    <div class=\"errors italic\">error messages here...</div>\n  </div>\n</div>\n<div class=\"posts flex col\">\n  <input type=\"text\" class=\"input search\" placeholder=\"search\">\n  <div class=\"posts-list overflow y\"></div>\n</div>";
},"useData":true});
templates["home"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"menu-heading\" class=\"center\">\n  <div id=\"name\">Aaron Cordova</div>\n  <div id=\"title\">WEB DEVELOPER</div>\n</div>\n\n<div id=\"menu-container\"></div>\n";
},"useData":true});
templates["login"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input type=\"text\" class=\"field sans email\">\n<input type=\"password\" class=\"field sans password\">\n<div class=\"field submit\">SUBMIT</div>";
},"useData":true});
templates["navigation"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"hamburger flex centered col between\">\n  <span class=\"line line-top\"></span>\n  <span class=\"line line-middle\"></span>\n  <span class=\"line line-bottom\"></span>\n</div>\n\n<div class=\"nav-contents flex col overflow y\">\n  <div class=\"nav-item\" data-view=\"AboutView\">\n    <div class=\"title\">ABOUT ME</div>\n    <div class=\"description\"></div>\n    <div class=\"description-content\">Wordsmith &#10217; double-Tracksmith &#10217; Qodesmith...</div>\n  </div>\n  <div class=\"nav-item\" data-view=\"ProjectsView\">\n    <div class=\"title\">PROJECTS</div>\n    <div class=\"description\"></div>\n    <div class=\"description-content\">Things I've built that smell awesome...</div>\n  </div>\n  <div class=\"nav-item\" data-view=\"BlogView\">\n    <div class=\"title\">BLOG</div>\n    <div class=\"description\"></div>\n    <div class=\"description-content\">Nerd alert: JavaScript, audio, theology, & more...</div>\n  </div>\n  <div class=\"nav-item\" data-view=\"ContactView\">\n    <div class=\"title\">CONTACT</div>\n    <div class=\"description\"></div>\n    <div class=\"description-content\">Cordial communication...</div>\n  </div>\n</div>";
},"useData":true});
templates["projects"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "  <div class=\"project\" style=\"background-image:url('"
    + alias4(((helper = (helper = helpers.background || (depth0 != null ? depth0.background : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"background","hash":{},"data":data}) : helper)))
    + "')\">\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.external : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "")
    + "\n    <div class=\"description center\">"
    + alias4(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"description","hash":{},"data":data}) : helper)))
    + "</div>\n    <div class=\"links flex centered\">\n      <a href=\""
    + alias4(((helper = (helper = helpers.github || (depth0 != null ? depth0.github : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"github","hash":{},"data":data}) : helper)))
    + "\" target=\"_blank\" class=\"github\"></a>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.external : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.program(8, data, 0),"data":data})) != null ? stack1 : "")
    + "\n    </div>\n  </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "    <h1 class=\"center\">\n      <a href=\""
    + alias4(((helper = (helper = helpers.demo || (depth0 != null ? depth0.demo : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"demo","hash":{},"data":data}) : helper)))
    + "\" target=\"_blank\" class=\"strip-link\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</a>\n    </h1>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "    <h1 data-view=\""
    + alias4(((helper = (helper = helpers.demo || (depth0 != null ? depth0.demo : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"demo","hash":{},"data":data}) : helper)))
    + "\" class=\"center pointer\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</h1>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      <a href=\""
    + container.escapeExpression(((helper = (helper = helpers.demo || (depth0 != null ? depth0.demo : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"demo","hash":{},"data":data}) : helper)))
    + "\" target=\"_blank\" class=\"demo relative flex centered external strip-link\">\n        DEMO<span class=\"triangle\"></span>\n      </a>\n";
},"8":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      <div data-view=\""
    + container.escapeExpression(((helper = (helper = helpers.demo || (depth0 != null ? depth0.demo : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"demo","hash":{},"data":data}) : helper)))
    + "\" class=\"demo relative flex centered pointer\">\n        DEMO<span class=\"triangle\"></span>\n      </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},depth0,{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true});
templates["deckGridDemo"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"container\">\n  <div class=\"grid\"></div>\n</div>\n\n<!-- LEGEND -->\n<div class=\"legend\">\n  <div class=\"instructions\">INSTRUCTIONS</div>\n  <div class=\"legend-item\" id=\"pole\">4x4</div>\n  <div class=\"legend-item\" id=\"delete\">Delete O or L</div>\n  <div class=\"legend-item\" id=\"create-length\">Create Length</div>\n  <div class=\"legend-item\" id=\"create-object\">Create Object</div>\n  <div class=\"legend-item\" id=\"beam-top\">Beam Top</div>\n  <div class=\"legend-item\" id=\"beam-bottom\">Beam Bottom</div>\n  <div class=\"legend-item\" id=\"double-top\">Double Top</div>\n  <div class=\"legend-item\" id=\"double-beam\">Double Beam</div>\n  <div class=\"legend-item\" id=\"double-bottom\">Double Bottom</div>\n  <div class=\"legend-item\" id=\"reset\">Reset</div>\n  <div class=\"legend-item\" id=\"save-layout\">Save Layout</div>\n  <div class=\"legend-item\" id=\"load-layout\">Load Layout</div>\n</div>\n\n<!-- SAVE -->\n<div class=\"modal\" id=\"save-modal\">\n  <div class=\"modal-content\">\n    <div class=\"modal-close\">&times;</div>\n    <h2>Save layout to a text file</h2>\n    <textarea name=\"\" id=\"view-JSON\" cols=\"60\" rows=\"8\"></textarea>\n    <button id=\"save-button\">SAVE</button>\n    <a download=\"deck.txt\" id=\"download-link\">Download</a>\n  </div>\n</div>\n\n<!-- LOAD -->\n<div class=\"modal\" id=\"load-modal\">\n  <div class=\"modal-content\">\n    <div class=\"modal-close\">&times;</div>\n    <textarea name=\"\" id=\"paste-JSON\" cols=\"70\" rows=\"12\"></textarea>\n    <button id=\"import-button\">IMPORT FILE</button>\n    <input type=\"file\" id=\"import\"></input>\n    <button id=\"load\">LOAD</button>\n    <div id=\"load-error\"></div>\n  </div>\n</div>\n\n<!-- CREATE LENGTH -->\n<div class=\"modal\" id=\"create-length-modal\">\n  <div class=\"modal-content\">\n    <div class=\"modal-close\">&times;</div>\n    <h2>Length in feet:</h2>\n    <input type=\"number\" id=\"length-feet\">\n    <h2>Length in inches:</h2>\n    <input type=\"number\" id=\"length-inches\">\n    <h2>Vertical or horizontal?</h2>\n    <div class=\"radios\">\n      <input type=\"radio\" name=\"direction\" value=\"horizontal\">Horizontal\n      <input type=\"radio\" name=\"direction\" value=\"vertical\">Vertical<br>\n    </div>\n    <button id=\"create-len\">Create</button>\n    <div id=\"error\"></div>\n  </div>\n</div>\n\n<!-- CREATE OBJECT -->\n<div class=\"modal\" id=\"create-obj-modal\">\n  <div class=\"modal-content\">\n    <div class=\"modal-close\">&times;</div>\n    <h2>Length feet: <input type=\"number\" id=\"obj-length-feet\"></h2>\n    <h2>Length inches: <input type=\"number\" id=\"obj-length-inches\"></h2>\n    <h2>Width feet: <input type=\"number\" id=\"obj-width-feet\"></h2>\n    <h2>Width inches: <input type=\"number\" id=\"obj-width-inches\"></h2>\n    <button id=\"create-obj\">Create</button>\n  </div>\n</div>";
},"useData":true});
templates["thingDemo"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"example-buttons absolute top right center\">\n  <div class=\"left\">\n    <div>Select Theme:</div>\n    <div class=\"themes\">\n      <span id=\"theme-dark\" class=\"color-circle\"></span>\n      <span id=\"theme-light\" class=\"color-circle\"></span>\n    </div>\n  </div>\n  <div class=\"right\">\n    <div class=\"example-button\" id=\"example-object\" data-target=\"myObject\">OBJECT</div>\n    <div class=\"example-button\" id=\"example-array\" data-target=\"myArray\">ARRAY</div>\n  </div>\n  <div class=\"user-input\">\n    <div>Paste your own:</div>\n    <textarea type=\"text\" id=\"input\"></textarea>\n    <div class=\"example-button\" id=\"submit\">SUBMIT</div>\n  </div>\n</div>\n\n<div id=\"thing-container\" class=\"full-size\"></div>\n";
},"useData":true});
templates["timeCalcDemo"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"bg-overlay randoms\"></div>\n<div class=\"calc-container\">\n  <div class=\"readout\"></div>\n  <div class=\"plain-readout\"></div>\n  <div class=\"buttons\">\n    <div class=\"number-pad\">\n      <div class=\"row\">\n        <div class=\"pad\"><div class=\"button number number1\">1</div></div>\n        <div class=\"pad\"><div class=\"button number number2\">2</div></div>\n        <div class=\"pad\"><div class=\"button number number3\">3</div></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"pad\"><div class=\"button number number4\">4</div></div>\n        <div class=\"pad\"><div class=\"button number number5\">5</div></div>\n        <div class=\"pad\"><div class=\"button number number6\">6</div></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"pad\"><div class=\"button number number7\">7</div></div>\n        <div class=\"pad\"><div class=\"button number number8\">8</div></div>\n        <div class=\"pad\"><div class=\"button number number9\">9</div></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"pad\" id=\"zero\"><div class=\"button number number0\">0</div></div>\n        <div class=\"pad\" ><div class=\"button\" id=\"colon\">:</div></div>\n      </div>\n    </div>\n    <div class=\"operators\">\n      <div class=\"button operator\" id=\"clear\">Clr</div>\n      <div class=\"button operator\" id=\"delete\">Del</div>\n      <div class=\"button operator\" id=\"add\">+</div>\n      <div class=\"button operator\" id=\"subtract\">-</div>\n      <div class=\"button operator\" id=\"equals\">=</div>\n    </div>\n  </div>\n</div>";
},"useData":true});
templates["typerDemo"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"matrix absolute top left mono full-size flex centered\"></div>\n\n<div class=\"typer-panes hide flex col\">\n  <div class=\"pane explanation flex centered\">\n    <div class=\"container\"></div>\n  </div>\n  <div class=\"pane example flex centered mono\">\n    <div class=\"container\"></div>\n  </div>\n</div>\n\n<div class=\"progress hide flex col centered\">\n  <div class=\"progress-bar flex centered around\">\n    <div class=\"progress-item typer-js active\" data-item=\"typerJs\">typer</div>\n    <div class=\"progress-item cursor\" data-item=\"cursor\">cursor</div>\n    <div class=\"progress-item line\" data-item=\"line\">line</div>\n    <div class=\"progress-item back\" data-item=\"back\">back</div>\n    <div class=\"progress-item continue\" data-item=\"continue\">continue</div>\n    <div class=\"progress-item pause\" data-item=\"pause\">pause</div>\n    <div class=\"progress-item emit\" data-item=\"emit\">emit</div>\n    <div class=\"progress-item listen\" data-item=\"listen\">listen</div>\n    <div class=\"progress-item empty\" data-item=\"empty\">empty</div>\n    <div class=\"progress-item run\" data-item=\"run\">run</div>\n    <div class=\"progress-item end\" data-item=\"end\">end</div>\n  </div>\n  <div class=\"controls flex\">\n    <div class=\"control previous flex centered\">&#9001;</div>\n    <div class=\"control stop-play stop flex centered\">\n      <div class=\"play\">&#9654;</div>\n      <div class=\"stop\">&#9724;</div>\n    </div>\n    <div class=\"control next flex centered\">&#9002;</div>\n  </div>\n</div>";
},"useData":true});
var $body = $('body');
var bgs = ['code', 'hadron', 'space-quest', 'hq1', 'doom', 'contra'];
var num;
var posts;
var taggedPosts;
var router;


////////////////////////////
// APP-WIDE FUNCTIONALITY //
////////////////////////////

app.randomNum = function(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
};

// Returns the current breakpoint based on pre-defined sizes.
app.breakPoint = function() {
  var width = window.innerWidth;

  if (width < 768) return 'MOBILE';
  if (width < 1024) return 'TABLET';
  return 'DESKTOP';
};

// All views except home & navigation will check if the
// navigation view has been created prior to rendering themselves.
app.checkNav = function(view) {
  if (!views.NavigationView) {
    views.NavigationView = new app.NavigationView(view);
  }
};

// Most views' render function will be this.
app.typicalRender = function(view) {
  $body.append(view.$el);

  setTimeout(function() {
    view.$el.addClass('show');
  }, 10);
};

// http://goo.gl/Q3cesP
app.randomizeArray = function(array) {
  var len = array.length;

  for (var j = 0; j < len; j++) {
    var random = Math.floor(Math.random() * len);
    var original = array[random];
    var current = array[j];

    array[j] = original;
    array[random] = current;
  }

  return array;
};

// Remove's the current view with robust logic for various types.
app.removeCurrentView = function(original) {
  var view = views.currentView;

  if (view) {

    // Stop the mutation observer on the blog's 'load more' button.
    if (view.blog) {
      view.buttonObserver.disconnect();
      delete view.buttonObserver;
    }

    // Reset the `taggedPosts` collection,
    // forcing it to reload queried posts each time.
    if (view.tagBlog) {
      taggedPosts.reset();
    }

    // For any view with a typer on it.
    if (view.typer) {
      document.body.dispatchEvent(new Event('killTyper'));
    }

    // For the thingToHTML demo.
    if (view.thing) {
      document.body.dispatchEvent(new Event('killThingExample'));
    }

    if (view.calculator) {
      document.body.dispatchEvent(new Event('killTimeCalc'));
    }

    // For the deckGrid demo.
    if (view.deck) {
      document.body.dispatchEvent(new Event('killDeckGrid'));
    }

    // For the bgGallery demo.
    if (view.gallery) {
      document.body.dispatchEvent(new Event('killGallery'));
    }

    view.remove(original);
  }

  if (views.previewPost) {
    views.previewPost.remove();
    views.previrePost = null;
  }
};


////////////////////////
// HANDLEBARS HELPERS //
////////////////////////

Handlebars.registerHelper('date', function(dateNumber) {
  return dateConversion(new Date(dateNumber));
});

Handlebars.registerHelper('tagList', function(tagsArray) {
  var tags = tagsArray.map(function(tag) {
    return [
      '<a href="#">',
      tag,
      '</a>'
    ].join('');
  });

  return tags.join(', ');
});


//////////
// MISC //
//////////

// Override the 'remove' method on ALL views.
Backbone.View.prototype.remove = function(original) {
  if (original) {
    this._removeElement();
    this.stopListening();
    return;
  }

  this.el.style.opacity = 0;

  setTimeout(function() {
    // The original 'remove' fxn did these two things.
    this._removeElement();
    this.stopListening();
  }.bind(this), 500);
};

// Prevent the 'backspace/delete' key default
// behavior on the calculator page.
$body.on('keydown', function(e) {
  if (e.which === 8 && views.currentView && views.currentView.calculator) {
    e.preventDefault();
  }
});

// Log errors to the database.
window.onerror = function(msg, file, line, col, error) {
  var data = {
    message: msg,
    file: file,
    url: window.location.href,
    line: line,
    col: col,
    error: error,
    stack: error.stack
  };

  $.post('/error-logs', data)
    .fail(function() {
      // Try a 2nd time.
      $.post('/error-logs', data);
    });

  // 'true' = don't display errors in the console.
  // 'false' = display errors in the console.
  return false;
};


///////////////////
// BEGIN THE APP //
///////////////////

num = app.randomNum(0, bgs.length - 1);
$body.addClass(bgs[num]);
posts = new app.PostsCollection();
taggedPosts = new app.PostsCollection();
router = new app.Router();
Backbone.history.start({pushState: true});
